{"version":3,"sources":["vote/shared/SectionHeader.js","header/CustomNodeForm.js","context/FactomCliContext.js","header/HelpModal.js","header/Header.js","withRootTheme.js","context/WalletController.js","context/SeedContext.js","context/SeedController.js","context/FactomCliController.js","context/NetworkController.js","context/VoteContext.js","vote/create/VOTE_CONSTANTS.js","context/VoteController.js","context/IdentityContext.js","context/IdentityController.js","Disclaimer.js","TestnetWarningBar.js","addWallet/ImportTypeForm.js","addWallet/ImportFctForm.js","addWallet/ImportEcForm.js","addWallet/NewSeedForm.js","walletManager/shared/BalanceFormatter.js","addWallet/GenerateAddressTable.js","addWallet/LedgerForm.js","addWallet/SeedForm.js","addWallet/ImportSeedForm.js","addWallet/AddWalletStepContent.js","addWallet/AddWalletStepper.js","addWallet/AddWalletModal.js","walletManager/Sidebar.js","component/logo/SVGLogo.js","walletManager/shared/AddressInfoHeader.js","walletManager/SendTransactionPreview.js","walletManager/SendFactoidForm.js","walletManager/ConvertTransactionPreview.js","walletManager/ConvertECForm.js","walletManager/ViewPrivateKeyForm.js","walletManager/AddressInfoForm.js","walletManager/TransactionList.js","walletManager/AddressInfoTab.js","walletManager/WalletTabContent.js","walletManager/WalletManager.js","addWallet/AddInitialWallet.js","vote/listing/VoteTable.js","vote/listing/VoteListing.js","vote/shared/ExplorerLink.js","component/form/FormTextField.js","vote/view/BinaryVoteForm.js","vote/view/ApprovalVoteForm.js","vote/view/SingleOptionVoteForm.js","vote/view/InstantRunoffVoteForm.js","vote/view/CommitVoteForm.js","vote/view/RevealVoteForm.js","vote/shared/EligibleVotersList.js","vote/shared/VoteSummary.js","vote/view/ParticipantsTab.js","vote/view/VoteResult.js","vote/view/VoteTabContent.js","vote/create/EligibleVotersForm.js","vote/create/SubmitVoteForm.js","vote/create/PreviewVote.js","ledgerIdentity/CreateLedgerIdForm.js","vote/create/FinalStep.js","vote/create/VoteConfiguration.js","component/form/FormSelectField.js","vote/create/CreateVoteForm.js","vote/create/CreateVoteStepper.js","ledgerIdentity/SetLedgerIdForm.js","ledgerIdentity/LedgerIdentityManager.js","AppRouter.js","App.js","registerServiceWorker.js","index.js","component/logo/ledgerLogo.svg","context/NetworkContext.js","context/WalletContext.js","headerLogo.png","context/LedgerController.js","component/logo/factomProtocolLogo.svg","context/LedgerContext.js"],"names":["SectionHeader","_ref","disableGutterBottom","text","color","textColor","react_default","a","createElement","Typography_default","gutterBottom","variant","style","CustomNodeForm","event","target","type","which","preventDefault","_Yup$object$shape","_this","this","classes","props","formik_esm","initialValues","host","port","onSubmit","values","actions","console","log","handleCustomNode","validationSchema","Yup","shape","Object","defineProperty","required","render","isSubmitting","errors","touched","onKeyPress","handleKeyPress","shared_SectionHeader","id","CustomNodeForm_FormTextField","error","name","label","msg","className","errorText","Button_default","disabled","React","Component","FormTextField","_ref2","field","TextField_default","assign","inputProps","spellCheck","maxLength","autoComplete","margin","fullWidth","multiline","withStyles","theme","fontSize","FactomCliContext","createContext","withFactomCli","BaseComponent","Consumer","factomCliController","AddWalletModal","state","open","handleOpen","setState","handleClose","menuText","onClick","Modal_default","aria-labelledby","onClose","Paper_default","modalContent","rel","href","position","boxShadow","shadows","top","left","transform","minHeight","padding","maxWidth","ButtonAppBar","voteAnchorEl","networkAnchorEl","openCustomNodeForm","handleOpenCustomNodeForm","handleCloseCustomNodeForm","handleVoteClick","currentTarget","handleVoteClose","handleNetworkClick","handleNetworkClose","handleTestnet","walletController","handleNetworkChange","handleMainnet","handleWallet","readyToManageWallet","isWalletEmpty","setReadyToManageWallet","_this$props","networkProps","networkController","blockHeight","_this$state","testnetActive","network","AppBar_default","root","Toolbar_default","toolbar","IconButton_default","menuButton","aria-label","Link","to","logo","src","alt","flex","testnetHeader","Fragment","aria-owns","aria-haspopup","ExpandMore_default","Menu_default","anchorEl","Boolean","MenuItem_default","component","replace","HelpModal","CloudDoneOutlined_default","titleAccess","aria-describedby","header_CustomNodeForm","enhancer","_flowRight","withNetwork","withWalletContext","flexGrow","marginBottom","width","marginTop","marginRight","borderStyle","borderWidth","subMenuText","spacing","unit","backgroundColor","palette","background","paper","createMuiTheme","withRootTheme","styles","CssBaseline_default","FACTOSHI_MULTIPLIER","LOCAL_STORAGE_KEY","LOCAL_STORAGE_PROPERTY_WHITELIST","WalletController","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","smartSetState","newState","afterSetState","arguments","length","undefined","_noop","Promise","resolve","_flow","saveStateToLocalStorage","filterArray","addressArray","filter","address","saveLocally","map","_pick","_this$state$addresses","objectSpread","addresses","mainnet","testnet","storageAddresses","fct","ec","localStorage","setItem","JSON","stringify","hydrateStateWithLocalStorage","asyncToGenerator","regenerator_default","mark","_callee","localStorageAddresses","prepareArray","wrap","_context","prev","next","parse","getItem","_isNil","addr_o","balance","transactions","prevState","setDefaultIndex","updateBalances","force","isStateHydrated","stop","value","_callee2","_context2","changeNetwork","connectToServer","_x","apply","deleteAddress","_ref3","_callee3","activeAddressIndex_o","addressList","_context3","toConsumableArray","splice","index","_x2","addAddressTransaction","transactionID","push","updateAddress","_ref4","_callee4","nickname","_context4","_x3","_x4","_x5","_isEmpty","getFactoidAddresses","getEntryCreditAddresses","selectAddress","verifyKey","privateKey","_ref5","getPublicAddress","valueOf","err","addAddress","address_o","addAddresses","getNextIndex","_ref6","_callee5","_context5","concat","_x6","_x7","getActiveAddress","getAddresses","updateWalletBalance","_ref7","_callee6","wallet","_context6","factomCli","getBalance","sent","abrupt","_x8","_callee7","_ref9","_ref9$force","_ref10","_ref11","factoidAddresses","ecAddresses","_args7","_context7","all","slicedToArray","getEntryCreditRate","_callee8","_context8","getFactoshiFee","_callee9","ecRate","exampleAddress","fee","_context9","Transaction","builder","input","Number","MAX_SAFE_INTEGER","output","build","computeRequiredFees","rcdType","getFactoidFee","_callee10","factoshiFee","_context10","newStandardAddress","importType","newSeedAddress","newLedgerAddress","WalletContext","Provider","children","SeedContext","withSeed","seedController","keyToFctAddress","key","seedToPrivateFctAddress","keyToECAddress","seedToPrivateEcAddress","SeedController","getSeedAddresses","mnemonic","startIndex","amount","result","bip32Account","factombip44","FactomBIP44","generateFactoidPrivateKey","generateEntryCreditPrivateKey","signWithSeed","toAddr","signedTX","createFactoidTransaction","createEntryCreditPurchaseTransaction","verifySeed","derivedAddress","isValidPublicFctAddress","isValidPublicEcAddress","getPrivateKey","getRandomMnemonic","randomMnemonic","FactomCliController","defaultConnectionParams","path","debugPath","protocol","rejectUnauthorized","retry","retries","factor","minTimeout","maxTimeout","updateBlockHeight","height","timestamp","getDirectoryBlockHead","blockTimestamp","getEstimatedBlockTimestamp","minutes","moment","utc","clone","add","getDefaultConnectionParams","connectionParams","apiHost","apiPort","defaultsDeep","newFactomCli","FactomCli","blockHeightTimerId","setInterval","clearInterval","NetworkController","factoidAbbreviation","factoidAbbreviationFull","ecAbbreviation","ecAbbreviationFull","explorerURL","voteRegistrationChainID","voteApiUrl","NetworkContext","VoteContext","withVote","voteController","BINARY_CONFIG","numOptions","SINGLE_OPTION_CONFIG","APPROVAL_CONFIG","INSTANT_RUNOFF_CONFIG","VOTE_TYPE_DATA","binary","singleOption","approval","instantRunoff","ALL_ELIGIBLE_VOTERS","PARTICIPANTS_ONLY","HASH_ALGO_VALUES","REGEX_CHAIN_ID","POLL_STATUSES","discussion","displayValue","commit","reveal","complete","PUBLIC_KEYS_RESOLVER","gql","_templateObject","VoteController","client","ApolloClient","uri","publicKeysResolver","identityChainId","data","query","variables","chain","_get","newFactomVoteManager","FactomVoteManager","privateKeysResolver","submitVote","voteData","ecPrivateAddress","factomVoteManager","createVote","commitVote","voteChainId","vote","voter","revealVote","voterId","getPhaseEndBlock","_ref8","commitStart","commitEnd","revealEnd","workingHeight","getPollStatus","getPollType","voteType","maxOptions","pollType_o","react_apollo_esm","IdentityContext","IDENTITY_VERSION","IdentityController","registerIdentity","idPubKeys","idNames","ecPrivateKey","content","entryBuilder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","entry","identity-version","keys","Entry","Symbol","iterator","done","extId","t0","return","finish","Chain","ConfirmationDialogRaw","handleAgree","handleChange","nextProps","other","objectWithoutProperties","Dialog_default","disableBackdropClick","disableEscapeKeyDown","DialogTitle_default","align","Warning_default","DialogContent_default","DialogActions_default","ConfirmationDialog","_this2","Disclaimer_ConfirmationDialogRaw","appBar","bottom","paddingTop","marginLeft","warningIcon","toolbarSpace","ImportTypeForm","handleNext","FormControl_default","FormLabel_default","RadioGroup_default","onChange","e","updateImportType","getImportTypes","option","FormControlLabel_default","control","Radio_default","fctAddrPath","ImportFctForm","_this$props$walletCon","factoidAddress","fctAddress_o","get","trim","test","findIndex","ImportFctForm_FormTextField","handleBack","ImportEcForm","entryCreditAddress","ecAddress_o","ImportEcForm_FormTextField","helperText","NewSeedForm","step","nextStep","setMnemonic","oneOf","fontWeight","warningText","NewSeedForm_FormTextField","autoFocus","FormatFCTBalance","factoshiBalance","parseInt","toLocaleString","maximumFractionDigits","FormatECBalance","entryCreditBalance","GenerateAddressTable","loading","addGeneratedAddress","arrayHelpers","newAddress","validateNickname","userAddressNicknames","userAddressList","indexOf","getNext","getNextFive","generatedAddressList","setFieldValue","userAddresses","title","Table_default","TableHead_default","TableRow_default","CustomCell","TableBody_default","checkboxPath","nicknamePath","duplicate","Tooltip_default","Checkbox_default","checked","labelPlacement","form","BalanceFormatter","find","validate","errorTextSmall","TableFooter_default","CircularProgress_default","thickness","head","paddingLeft","paddingRight","body","TableCell","overflowX","maxHeight","common","black","white","getTitle","LedgerForm","retryConnection","ledgerStatus","ledgerController","getLedgerAddresses","ledgerConnected","hasAddressSelected","formValues","startsWith","some","enableReinitialize","validAddresses","addWallet_GenerateAddressTable","withLedger","SeedForm","ImportSeedForm","validMnemonic","ImportSeedForm_FormTextField","placeholder","AddWalletStepContent","activeStep","addWallet_ImportTypeForm","addWallet_ImportFctForm","addWallet_ImportEcForm","addWallet_NewSeedForm","addWallet_ImportSeedForm","addWallet_LedgerForm","addWallet_SeedForm","getStandardSteps","getSeedAddressSteps","stepMap","importSeed","new","ledger","AddWalletStepper","initialState","getSteps","handleReset","handleCloseText","steps","sectionHeaderText","Stepper_default","stepper","Step_default","StepLabel_default","AddWalletStepper_TestnetFinalStep","AddWalletStepper_MainnetFinalStep","addWallet_AddWalletStepContent","MainnetFinalStep","TestnetFinalStep","testnetWarning","OpenInNew_default","minWidth","borderColor","display","center","button","addWallet_AddWalletStepper","Sidebar","listfactoidAddresses","expanded","nicknameStyle","ExpansionPanel_default","ExpansionPanelSummary_default","Grid_default","container","justify","item","break","listecAddresses","xs","noPadding","List_default","ListItem_default","walletListHeader","addressHeading","disableGutters","walletList","listAddrRoot","addWallet_AddWalletModal","wordWrap","overflow","paddingBottom","borderRadius","SVGLogo","textAlign","pointer","cursor","_props$walletControll","checkAddress","activeAddress_o","elevation","react_copy_to_clipboard_lib","SvgIcon_default","d","SVGLogo_SVGLogo","LedgerLogo","transferFactoidAmountText","transferFactoidUnitText","factoidAmountSmallText","detail","divider","opacity","border","factoidAmount","sendFactoidFee","totalFactoidAmount","totalFactoidAmountText","feeFactoidAmountText","recipientAddressPath","myFctWalletAnchorElPath","SendFactoidForm","seed","maxFactoids","signTransaction","maxAmount","getMaxFCT","sendFactoidAmount","recipientAddress","myFctWalletAnchorEl","transaction","seedTrans_o","fromAddr","_toAddr","_amount","_index","ledgerTrans_o","txId","Math","round","isLedgerConnected","resetForm","sendTransaction","positive","max","when","is","then","otherwise","notRequired","shared_AddressInfoHeader","FactoidAddressMenu","walletManager_SendTransactionPreview","transactionError","transactionErrorText","CheckCircleOutlined_default","nativeColor","successIcon","sendButton","convertECAmountText","ecUnitText","factoidCostSmallText","ecAmount","totalFactoidCostText","ConvertECForm","sendFactoshiFee","maxEntryCredits","getMaxEC","entryCreditAmount","ECAddressMenu","walletManager_ConvertTransactionPreview","ViewPrivateKeyForm","ViewPrivateKeyForm_FormTextField","errorClass","Visibility_default","enableSpellCheck","AddressInfoForm","window","setTimeout","AddressInfoForm_FormTextField","size","deleteButton","deleteConfirmationText","TransactionList","overflowWrap","walletManager_AddressInfoForm","walletManager_TransactionList","WalletTabContent","tabValue","activeAddress","Tabs_default","indicatorColor","centered","Tab_default","TabContainer","walletManager_AddressInfoTab","walletManager_SendFactoidForm","walletManager_ConvertECForm","walletManager_ViewPrivateKeyForm","tabContainer","WalletManager","walletManager_Sidebar","walletManager_WalletTabContent","AddInitialWallet","withRouter","RPP_OPTIONS","VoteTable","status","initiatorId","pollChainId","handleFilterChange","filterTable","tableRows","voteList","forEach","poll_o","voteID","adminID","commitPhase","revealPhase","row","admin","voteInitiator","proposal","phasesBlockHeights","tableWrapper","expandColumn","ExpandLess_default","toggleExpand","expandIcon","TableCell_default","titleColumn","columnHeader","statusColumn","defaultValue","option_o","dateColumn","pollChainIDColumn","shortPollChainIDColumn","adminIDColumn","shortAdminIDColumn","index_es","hover","TablePagination_default","Grid","onChangePage","page","handlePageChange","onChangeRowsPerPage","handleRowsPerPageChange","count","rowsPerPage","rowsPerPageOptions","textOverflow","footerPagination","GET_LISTING","VoteListing_templateObject","VoteListing","activeFilters","handleExpand","resetFilters","limit","offset","voteChain","VoteListing_PreLoadHeader","message","totalCount","direction","topFilters","FilterList_default","listing_VoteTable","allProposals","PreLoadHeader","ExplorerLink","handleHover","isHovered","bind","assertThisInitialized","_this$props$extend","extend","valueClass","short","alignItems","FactomProtocolLogo","onMouseEnter","onMouseLeave","openInNew","tooltip","accept","_ref$autoComplete","_ref$disabled","_ref$displayError","displayError","_ref$error","_ref$fullWidth","isNotFast","_ref$shrink","shrink","_ref$spellCheck","_ref$step","_ref$type","FieldType","Field","FastField","InputLabelProps","BinaryVoteForm","poll","parentIsSubmitting","parentArrayHelpers","parentReset","options","selectedOption","reinitialize","ApprovalVoteForm","parentSetFieldValue","parentVoteArray","allowAbstain","minOptions","abstainCheckbox","FormGroup_default","newVote","_remove","Divider_default","SingleOptionVoteForm","remove","itemsPath","selectedPath","parentVotePath","InstantRunoffVoteForm","items","selected","InstantRunoffVoteForm_DragAndDrop","irvSetFieldValue","reorder","list","endIndex","Array","from","_result$splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","droppableId","getItemStyle","isDragging","draggableStyle","userSelect","DragAndDrop","id2List","droppable","droppable2","getList","onDragEnd","_result","_this$props2","titleStyle","react_beautiful_dnd_esm","provided","snapshot","ref","innerRef","isDraggingOver","draggableId","isDragDisabled","draggableProps","dragHandleProps","hrefPath","CommitVoteForm","AnswerForm","proposalEntries","_this$props$voteContr","signMessageRaw","voterList","entryHashURL","revealFileName","sanitize","NoFormFound","secret","randomBytes","toString","identityChainID","identityKey","processing","resetAnswerForm","revealData","signatureType","commit_args","ledgerIdentity_o","reveal_args","hmacAlgo","chainId","Error","getLedgerIdentityAddress","chainid","sign","matches","excludeEmptyString","_includes","app","isValidSecretIdentityKey","isValidPrivateEcAddress","submitCount","signTransactionTitle","pad","smallGridColumn","Create_default","ledgerLogo","form_FormTextField","shared_ExplorerLink","entryHash","fileDownload","Save_default","resetButton","revealJSONPath","fileUploadErrorPath","pollChainIdPath","RevealVoteForm","handleFile","file","reader","readAsText","onloadend","json","fileChainId","FileReader","workingFile","workingFileName","revealJSON","files","EligibleVotersList","eligibleVoters","errorMessage","listContainer","dense","Person_default","ListItemText_default","primary","secondary","weight","Clear_default","commitEndPath","revealEndPath","minSupportPath","weightedMinTurnoutPath","unweightedMinTurnoutPath","VoteSummary","calculateWriteTimeDisplay","writeHeight","eventTimestamp","format","supportsMinSupportCriteria","supportsWeightedMinTurnoutCriteria","scrollTo","minSupportOption","weightedMinSupportPath","unweightedMinSupportPath","pollTypeText","supportsMinSupportConfig","hasMinTurnoutCriteria","commitStartDate","commitEndDate","revealStartDate","revealEndDate","LabelImportant_default","defaultCursor","disableRipple","shared_EligibleVotersList","flexBasis","ParticipantsTab","expand","eligibleVotersChainId","status_o","voter_o","voterID","voterChain","chainIDColumn","Done_default","Close_default","ExpansionPanelDetails_default","GET_VOTE","VoteTabContent_templateObject","GET_RESULT","_templateObject2","GET_VOTERS","_templateObject3","VoteTabContent","handleTabChange","componentDidMount","queryParams","QS","location","search","ignoreQueryPrefix","requestedNetwork","VoteTabContent_PreLoadHeader","phaseEndBlock","countdownTimestamp","proposalEntries_o","dist_index_es","date","renderer","RenderCountdown","view_VoteResult","shared_VoteSummary","pollJSON","view_ParticipantsTab","view_CommitVoteForm","view_RevealVoteForm","days","hours","seconds","completed","EligibleVotersForm_templateObject","selectedListPath","workingIdentityChainIdPath","workingWeightPath","workingEligibleChainIdPath","loadErrorMessagePath","loadSuccessMessagePath","workingFileNamePath","workingFilePath","formatVoter","EligibleVotersForm","isValidVoter","_isFinite","split","newVoterList","invalidData","attributes","handleVoter","handleVoterChainId","voterData","apolloClient","voterIndex","findVoter","currentEligibleVoters","resetAddVoterFields","eligibleVotersForm","updateParticipants","formFields","workingWeight","currentValue","originalValue","moreThan","workingIdentityChainId","workingEligibleChainId","workingAddVoter_o","borders","padLoadVoters","verticalAlign","successText","stepperButtons","borderRightStyle","borderRightColor","borderRightWidth","borderLeftStyle","borderLeftColor","borderLeftWidth","EXAMPLE_IDENTITY","SubmitVoteForm","voteCreationCost","definition","registrationChainId","identity","computeVoteCreationCost","validateEcPrivateKey","updateCreatePollResult","commitStartBlock","currentBlockHeight","submitVoteForm","create_SubmitVoteForm","createPollResult","registration","VoteConfiguration","pollForm","externalRef","hash","algo","config","allowAbstention","computeResultsAgainst","winnerCriteria","acceptanceCriteria","voteTypeText","questionSource","workingText","workingHref","workingHashValue","workingHashAlgo","workingOption","checkedTurnout","enableMinSupportConfig","workingWeightMinTurnout","workingUnweightMinTurnout","workingWeightMinSupport","workingUnweightMinSupport","workingMinSupportOption","selectedList","loadingVoters","loadErrorMessage","loadSuccessMessage","updatePoll","InputLabel_default","htmlFor","Select_default","VOTE_TYPE_VALUES","COMPUTE_AGAINST_VALUES","ABSTENTION_VALUES","commitStartPath","minOptionsPath","maxOptionsPath","optionsPath","voteTypeTextPath","workingOptionPath","workingHrefPath","workingTextPath","checkedTurnoutPath","workingWeightMinTurnoutPath","workingMinSupportOptionPath","CreateVoteForm","validateWriteHeight","currentHeight","isNaN","validateWorkingOption","optionList","hasOption","validateComputeResultsAgainst","handleTime","calculateWriteHeight","handleBlock","calculateWriteTimeValue","removeOption","optionsLength","getMinimumOptions","optionsList","minOptionsList","ii","getMaximumOptions","maxOptionsList","toISOString","dateTime","currentBlock","currentDate","diffMins","diff","floor","validateOnChange","cv","min","requiredSupport","_this$parent","parent","url","_this$parent2","winnerCriteriaOption","_omit","minTurnout","weighted","unweighted","minSupport","setFieldTouched","setFieldError","form_FormSelectField","newValue","blockFields","raiseRadio","optionListItem","CreateVoteStepper","stepIndex","createVoteSnapshot","create_EligibleVotersForm","create_CreateVoteForm","create_PreviewVote","VoteConfiguration_VoteConfiguration","create_FinalStep","getStepContent","NUMBER_VALUES","i","CreateLedgerIdForm","validateIdentityName","hasItem","identityNames","array","identityController","workingName","number","reg_id_args","identityNameList","identityNameListItem","SetLedgerIdForm","storeChainId","LedgerIdentityManager","ledgerIdentity_CreateLedgerIdForm","ledgerIdentity_SetLedgerIdForm","AppRouter","HashRouter","Route","exact","walletManager_WalletManager","addWallet_AddInitialWallet","App","context_NetworkController","context_FactomCliController","Disclaimer","context_WalletController","context_VoteController","Header","context_SeedController","context_IdentityController","LedgerController","src_AppRouter","src_TestnetWarningBar","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","unregister","module","exports","__webpack_require__","p","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","BIP_32_COIN_TYPES","C_Users_David_Factom_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_David_Factom_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_David_Factom_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","C_Users_David_Factom_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_David_Factom_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","coinType","transport","TransportU2F","create","Fct","getAddress","close","unsignedTX","t1","t2","t3","t4","t5","t6","marshalBinarySig","rcdSignature","Buffer","s","activeFctWallet","getAppConfiguration","_x9","react__WEBPACK_IMPORTED_MODULE_7___default","_LedgerContext__WEBPACK_IMPORTED_MODULE_9__","LedgerContext"],"mappings":"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","file":"static/js/main.a7915f59.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction SectionHeader({ disableGutterBottom, text, color }) {\r\n\tconst textColor = {\r\n\t\tcolor: color ? color : null,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\tgutterBottom={!disableGutterBottom}\r\n\t\t\tvariant=\"h6\"\r\n\t\t\tstyle={textColor}\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</Typography>\r\n\t);\r\n}\r\n\r\nexport default SectionHeader;\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SectionHeader from '../vote/shared/SectionHeader.js';\r\n\r\nconst hostPath = 'host';\r\nconst portPath = 'port';\r\n\r\nclass CustomNodeForm extends React.Component {\r\n\thandleKeyPress(event) {\r\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ host: '', port: '' }}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\tconsole.log('Submitted');\r\n\t\t\t\t\tthis.props.handleCustomNode(values[hostPath], values[portPath]);\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[hostPath]: Yup.string().required('Required'),\r\n\t\t\t\t\t[portPath]: Yup.string().required('Required'),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\r\n\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\r\n\t\t\t\t\t\t<SectionHeader text=\"Custom Node Form\" id=\"modal-title\" />\r\n\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\terror={errors[hostPath] && touched[hostPath] ? true : false}\r\n\t\t\t\t\t\t\tname={hostPath}\r\n\t\t\t\t\t\t\tlabel=\"Host\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname={hostPath}\r\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\terror={errors[portPath] && touched[portPath] ? true : false}\r\n\t\t\t\t\t\t\tname={portPath}\r\n\t\t\t\t\t\t\tlabel=\"Port\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname={portPath}\r\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<Field name={props.name}>\r\n\t\t\t{({ field }) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\tmaxLength: props.maxLength,\r\n\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...field}\r\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tmultiline\r\n\t\t\t\t\terror={props.error}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Field>\r\n\t);\r\n};\r\n\r\nCustomNodeForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({ errorText: { color: 'red', fontSize: '12px' } });\r\nexport default withStyles(styles)(CustomNodeForm);\r\n","import React from 'react';\r\n\r\nconst FactomCliContext = React.createContext();\r\n\r\nconst withFactomCli = (BaseComponent) => (props) => (\r\n\t<FactomCliContext.Consumer>\r\n\t\t{(factomCliController) => (\r\n\t\t\t<BaseComponent {...props} factomCliController={factomCliController} />\r\n\t\t)}\r\n\t</FactomCliContext.Consumer>\r\n);\r\n\r\nexport { FactomCliContext, withFactomCli };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SectionHeader from '../vote/shared/SectionHeader.js';\r\n\r\nclass AddWalletModal extends React.Component {\r\n\tstate = {\r\n\t\topen: false,\r\n\t};\r\n\r\n\thandleOpen = () => {\r\n\t\tthis.setState({ open: true });\r\n\t};\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({ open: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Button className={classes.menuText} onClick={this.handleOpen}>\r\n\t\t\t\t\tHelp\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\taria-labelledby=\"modal-title\"\r\n\t\t\t\t\topen={this.state.open}\r\n\t\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Paper className={classes.modalContent}>\r\n\t\t\t\t\t\t<SectionHeader text=\"Help\" id=\"modal-title\" />\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tPlease go to the #myfactomwallet channel on The Factoid\r\n\t\t\t\t\t\t\tAuthority's{' '}\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\thref={'https://discord.gg/79kH2pp'}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tDiscord server\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t&nbsp;for support.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tLedger Nano S documentation can be found{' '}\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\thref={'http://help.myfactomwallet.com/'}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\there\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tMyFactomWallet's Github repositories are{' '}\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\thref={'https://github.com/MyFactomWallet'}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\there\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nAddWalletModal.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tmodalContent: {\r\n\t\tposition: 'absolute',\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\ttop: `50%`,\r\n\t\tleft: `50%`,\r\n\t\ttransform: `translate(-50%, -50%)`,\r\n\t\tminHeight: '138px',\r\n\t\tpadding: '30px',\r\n\t\tmaxWidth: '425px',\r\n\t},\r\n\tmenuText: {\r\n\t\tcolor: 'white',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(AddWalletModal);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport logo from '../headerLogo.png';\r\nimport { Link } from 'react-router-dom';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport CloudDone from '@material-ui/icons/CloudDoneOutlined';\r\nimport CustomNodeForm from './CustomNodeForm';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport { withFactomCli } from '../context/FactomCliContext';\r\nimport HelpModal from './HelpModal';\r\n\r\n//import CloudOff from '@material-ui/icons/CloudOff';\r\n\r\nclass ButtonAppBar extends React.Component {\r\n\tstate = {\r\n\t\tvoteAnchorEl: null,\r\n\t\tnetworkAnchorEl: null,\r\n\t\topenCustomNodeForm: false,\r\n\t};\r\n\r\n\thandleOpenCustomNodeForm = () => {\r\n\t\tthis.setState({ openCustomNodeForm: true });\r\n\t};\r\n\r\n\thandleCloseCustomNodeForm = () => {\r\n\t\tthis.setState({ openCustomNodeForm: false });\r\n\t};\r\n\r\n\thandleVoteClick = (event) => {\r\n\t\tthis.setState({ voteAnchorEl: event.currentTarget });\r\n\t};\r\n\r\n\thandleVoteClose = () => {\r\n\t\tthis.setState({ voteAnchorEl: null });\r\n\t};\r\n\r\n\thandleNetworkClick = (event) => {\r\n\t\tthis.setState({ networkAnchorEl: event.currentTarget });\r\n\t};\r\n\r\n\thandleNetworkClose = () => {\r\n\t\tthis.setState({ networkAnchorEl: null });\r\n\t};\r\n\r\n\thandleTestnet = () => {\r\n\t\tthis.setState({\r\n\t\t\tnetworkAnchorEl: null,\r\n\t\t});\r\n\t\tthis.props.walletController.handleNetworkChange('testnet');\r\n\t};\r\n\r\n\thandleMainnet = () => {\r\n\t\tthis.setState({\r\n\t\t\tnetworkAnchorEl: null,\r\n\t\t});\r\n\t\tthis.props.walletController.handleNetworkChange('mainnet');\r\n\t};\r\n\r\n\thandleWallet = () => {\r\n\t\tif (\r\n\t\t\t!this.props.walletController.readyToManageWallet &&\r\n\t\t\t!this.props.walletController.isWalletEmpty()\r\n\t\t) {\r\n\t\t\tthis.props.walletController.setReadyToManageWallet(true);\r\n\t\t}\r\n\t};\r\n\r\n\thandleCustomNode = (host, port) => {\r\n\t\t/* this.setState({\r\n\t\t\tnetwork: host + ':' + port,\r\n\t\t}); */\r\n\t\tthis.handleCloseCustomNodeForm();\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t\tfactomCliController: { blockHeight },\r\n\t\t} = this.props;\r\n\t\tconst { voteAnchorEl, networkAnchorEl } = this.state;\r\n\r\n\t\tconst testnetActive = networkProps.network === 'testnet';\r\n\r\n\t\treturn (\r\n\t\t\t<AppBar position=\"static\" className={classes.root}>\r\n\t\t\t\t<Toolbar className={classes.toolbar}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"Menu\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<img className={classes.logo} src={logo} alt=\"logo\" />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.flex}>\r\n\t\t\t\t\t\t<Link className={classes.menuText} to=\"/\">\r\n\t\t\t\t\t\t\tMyFactomWallet\r\n\t\t\t\t\t\t\t{testnetActive && (\r\n\t\t\t\t\t\t\t\t<span className={classes.testnetHeader}>\r\n\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;TESTNET\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\thref=\"#/\"\r\n\t\t\t\t\t\tonClick={this.handleWallet}\r\n\t\t\t\t\t\tclassName={classes.menuText}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tWallet\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\taria-owns={voteAnchorEl ? 'simple-vote-menu' : null}\r\n\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\tonClick={this.handleVoteClick}\r\n\t\t\t\t\t\t\tclassName={classes.menuText}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tVote\r\n\t\t\t\t\t\t\t<ExpandMore />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\tid=\"simple-vote-menu\"\r\n\t\t\t\t\t\t\tanchorEl={voteAnchorEl}\r\n\t\t\t\t\t\t\topen={Boolean(voteAnchorEl)}\r\n\t\t\t\t\t\t\tonClose={this.handleVoteClose}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\tonClick={this.handleVoteClose}\r\n\t\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\t\tto={'/vote'}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tView Polls\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\t\tto={'/createVote'}\r\n\t\t\t\t\t\t\t\tonClick={this.handleVoteClose}\r\n\t\t\t\t\t\t\t\treplace={true}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate Poll\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\t\tto={'/ledgerId'}\r\n\t\t\t\t\t\t\t\tonClick={this.handleVoteClose}\r\n\t\t\t\t\t\t\t\treplace={true}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLedger Identity\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t</React.Fragment>\r\n\r\n\t\t\t\t\t<HelpModal />\r\n\t\t\t\t\t<div className={classes.network}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\taria-owns={voteAnchorEl ? 'simple-vote-menu' : null}\r\n\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\tonClick={this.handleNetworkClick}\r\n\t\t\t\t\t\t\tclassName={classes.menuText}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{networkProps.network}: {blockHeight}\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<CloudDone\r\n\t\t\t\t\t\t\t\ttitleAccess=\"Network Operational\"\r\n\t\t\t\t\t\t\t\tstyle={{ color: 'green' }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ExpandMore />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\tid=\"simple-vote-menu\"\r\n\t\t\t\t\t\t\tanchorEl={networkAnchorEl}\r\n\t\t\t\t\t\t\topen={Boolean(networkAnchorEl)}\r\n\t\t\t\t\t\t\tonClose={this.handleNetworkClose}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuItem onClick={this.handleMainnet} disabled={!testnetActive}>\r\n\t\t\t\t\t\t\t\tMainnet&nbsp;&nbsp; <CloudDone style={{ color: 'green' }} />\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem onClick={this.handleTestnet} disabled={testnetActive}>\r\n\t\t\t\t\t\t\t\tTestnet&nbsp;&nbsp; <CloudDone style={{ color: 'green' }} />\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t{/* <MenuItem\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.handleNetworkClose();\r\n\t\t\t\t\t\t\t\t\tthis.handleOpenCustomNodeForm();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCustom Node\r\n\t\t\t\t\t\t\t</MenuItem> */}\r\n\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\taria-labelledby=\"simple-modal-title\"\r\n\t\t\t\t\t\t\taria-describedby=\"simple-modal-description\"\r\n\t\t\t\t\t\t\topen={this.state.openCustomNodeForm}\r\n\t\t\t\t\t\t\tonClose={this.handleCloseCustomNodeForm}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className={classes.modalContent}>\r\n\t\t\t\t\t\t\t\t<CustomNodeForm handleCustomNode={this.handleCustomNode} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t);\r\n\t}\r\n}\r\nButtonAppBar.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t\tmarginBottom: '15px',\r\n\t},\r\n\ttoolbar: {\r\n\t\twidth: '90%',\r\n\t\tmargin: '0 auto',\r\n\t},\r\n\tflex: {\r\n\t\tflex: 1,\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginTop: 3,\r\n\t\tmarginRight: 10,\r\n\t},\r\n\tlogo: {\r\n\t\twidth: '39px',\r\n\t},\r\n\tmenuText: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tnetwork: {\r\n\t\tborderStyle: 'solid',\r\n\t\tborderWidth: '1px',\r\n\t\tcolor: 'green',\r\n\t},\r\n\tsubMenuText: {\r\n\t\tcolor: 'black',\r\n\t},\r\n\tmodalContent: {\r\n\t\tposition: 'absolute',\r\n\t\twidth: theme.spacing.unit * 50,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing.unit * 4,\r\n\t\ttop: `50%`,\r\n\t\tleft: `50%`,\r\n\t\ttransform: `translate(-50%, -50%)`,\r\n\t},\r\n\ttestnetHeader: { color: '#ffa000' },\r\n});\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithFactomCli,\r\n\twithWalletContext,\r\n\twithStyles(styles)\r\n);\r\nexport default enhancer(ButtonAppBar);\r\n","import React from 'react';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {},\r\n});\r\n\r\nfunction withRootTheme(Component) {\r\n\tfunction WithRoot(props) {\r\n\t\t// MuiThemeProvider makes the theme available down the React tree\r\n\t\t// thanks to React context.\r\n\t\treturn (\r\n\t\t\t<MuiThemeProvider theme={theme}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Component {...props} />\r\n\t\t\t</MuiThemeProvider>\r\n\t\t);\r\n\t}\r\n\r\n\treturn WithRoot;\r\n}\r\n\r\nexport default withRootTheme;\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _flow from 'lodash/flow';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport _noop from 'lodash/noop';\r\nimport _isNil from 'lodash/isNil';\r\nimport _pick from 'lodash/pick';\r\nimport { WalletContext } from './WalletContext';\r\nimport { withFactomCli } from './FactomCliContext';\r\nimport { withNetwork } from './NetworkContext';\r\nimport { Transaction, getPublicAddress } from 'factom/dist/factom';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst FACTOSHI_MULTIPLIER = 0.00000001;\r\nconst LOCAL_STORAGE_KEY = 'storageAddresses';\r\nconst LOCAL_STORAGE_PROPERTY_WHITELIST = [\r\n\t'importType',\r\n\t'address',\r\n\t'nickname',\r\n\t'index',\r\n\t'saveLocally',\r\n];\r\n\r\nclass WalletController extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\taddresses: {\r\n\t\t\t\tmainnet: {\r\n\t\t\t\t\tfct: [],\r\n\t\t\t\t\tec: [],\r\n\t\t\t\t},\r\n\t\t\t\ttestnet: {\r\n\t\t\t\t\tfct: [],\r\n\t\t\t\t\tec: [],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t//===================================================\r\n\t\t\tactiveAddressIndex_o: null,\r\n\t\t\tisStateHydrated: false,\r\n\t\t\treadyToManageWallet: false,\r\n\t\t\tsetReadyToManageWallet: this.setReadyToManageWallet,\r\n\t\t\tisWalletEmpty: this.isWalletEmpty,\r\n\t\t\thandleNetworkChange: this.handleNetworkChange,\r\n\t\t\tverifyKey: this.verifyKey,\r\n\t\t\tupdateAddress: this.updateAddress,\r\n\t\t\taddAddressTransaction: this.addAddressTransaction,\r\n\t\t\tdeleteAddress: this.deleteAddress,\r\n\t\t\tgetAddresses: this.getAddresses,\r\n\t\t\tgetFactoidAddresses: this.getFactoidAddresses,\r\n\t\t\tgetEntryCreditAddresses: this.getEntryCreditAddresses,\r\n\t\t\taddAddresses: this.addAddresses,\r\n\t\t\taddAddress: this.addAddress,\r\n\t\t\tselectAddress: this.selectAddress,\r\n\t\t\tgetActiveAddress: this.getActiveAddress,\r\n\t\t\tupdateWalletBalance: this.updateWalletBalance,\r\n\t\t\tupdateBalances: this.updateBalances,\r\n\t\t\tgetEntryCreditRate: this.getEntryCreditRate,\r\n\t\t\tgetFactoshiFee: this.getFactoshiFee,\r\n\t\t\tgetFactoidFee: this.getFactoidFee,\r\n\t\t\tnewStandardAddress: this.newStandardAddress,\r\n\t\t\tnewSeedAddress: this.newSeedAddress,\r\n\t\t\tnewLedgerAddress: this.newLedgerAddress,\r\n\t\t};\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\t//get from storage\r\n\t\tthis.hydrateStateWithLocalStorage();\r\n\t}\r\n\r\n\tsmartSetState = (newState, afterSetState = _noop) =>\r\n\t\tnew Promise((resolve) =>\r\n\t\t\tthis.setState(newState, _flow([afterSetState, resolve]))\r\n\t\t);\r\n\r\n\tsaveStateToLocalStorage = () => {\r\n\t\tconst filterArray = (addressArray) =>\r\n\t\t\taddressArray\r\n\t\t\t\t.filter((address) => address.saveLocally)\r\n\t\t\t\t.map((address) => _pick(address, LOCAL_STORAGE_PROPERTY_WHITELIST));\r\n\r\n\t\tconst { mainnet, testnet } = { ...this.state.addresses };\r\n\r\n\t\tconst storageAddresses = {\r\n\t\t\tmainnet: { fct: filterArray(mainnet.fct), ec: filterArray(mainnet.ec) },\r\n\t\t\ttestnet: { fct: filterArray(testnet.fct), ec: filterArray(testnet.ec) },\r\n\t\t};\r\n\r\n\t\tlocalStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(storageAddresses));\r\n\t};\r\n\r\n\thydrateStateWithLocalStorage = async () => {\r\n\t\t// get local\r\n\t\tconst localStorageAddresses = JSON.parse(\r\n\t\t\tlocalStorage.getItem(LOCAL_STORAGE_KEY)\r\n\t\t);\r\n\r\n\t\tif (!_isNil(localStorageAddresses)) {\r\n\t\t\tconst prepareArray = (addressArray) =>\r\n\t\t\t\taddressArray.map((addr_o) => ({\r\n\t\t\t\t\t...addr_o,\r\n\t\t\t\t\tbalance: null,\r\n\t\t\t\t\ttransactions: [],\r\n\t\t\t\t}));\r\n\r\n\t\t\tconst { mainnet, testnet } = localStorageAddresses;\r\n\r\n\t\t\tconst storageAddresses = {\r\n\t\t\t\tmainnet: {\r\n\t\t\t\t\tfct: prepareArray(mainnet.fct),\r\n\t\t\t\t\tec: prepareArray(mainnet.ec),\r\n\t\t\t\t},\r\n\t\t\t\ttestnet: {\r\n\t\t\t\t\tfct: prepareArray(testnet.fct),\r\n\t\t\t\t\tec: prepareArray(testnet.ec),\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tawait this.smartSetState((prevState) => ({\r\n\t\t\t\taddresses: storageAddresses,\r\n\t\t\t}));\r\n\r\n\t\t\tawait this.setDefaultIndex();\r\n\t\t\tawait this.updateBalances({ force: true });\r\n\t\t}\r\n\t\tawait this.smartSetState({ readyToManageWallet: !this.isWalletEmpty() });\r\n\t\tawait this.smartSetState({ isStateHydrated: true });\r\n\t};\r\n\r\n\tsetReadyToManageWallet = (value) => {\r\n\t\tthis.smartSetState({\r\n\t\t\treadyToManageWallet: value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleNetworkChange = async (network) => {\r\n\t\tawait this.smartSetState({ isStateHydrated: false });\r\n\t\tawait this.props.networkController.changeNetwork(network);\r\n\t\tawait this.props.factomCliController.connectToServer();\r\n\t\tthis.hydrateStateWithLocalStorage();\r\n\t};\r\n\r\n\tdeleteAddress = async (activeAddressIndex_o) => {\r\n\t\tconst type = activeAddressIndex_o.type;\r\n\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\t// create copy of current addressList\r\n\t\tconst addressList = [...this.state.addresses[network][type]];\r\n\r\n\t\t//remove address\r\n\t\taddressList.splice(activeAddressIndex_o.index, 1);\r\n\r\n\t\t// overwrite addresses\r\n\t\tawait this.smartSetState((prevState) => ({\r\n\t\t\taddresses: {\r\n\t\t\t\t...prevState.addresses,\r\n\t\t\t\t[network]: {\r\n\t\t\t\t\t...prevState.addresses[network],\r\n\t\t\t\t\t[type]: [...addressList],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t}));\r\n\r\n\t\tawait this.setDefaultIndex();\r\n\r\n\t\tthis.saveStateToLocalStorage();\r\n\t};\r\n\r\n\taddAddressTransaction = (activeAddressIndex_o, transactionID) => {\r\n\t\tconst type = activeAddressIndex_o.type;\r\n\t\tconst index = activeAddressIndex_o.index;\r\n\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\t// get address transaction list to update\r\n\t\tconst addressList = [...this.state.addresses[network][type]];\r\n\t\tconst addr_o = addressList[index];\r\n\r\n\t\t// add transaction\r\n\t\taddr_o.transactions.push(transactionID);\r\n\r\n\t\t// replace address\r\n\t\taddressList[activeAddressIndex_o.index] = addr_o;\r\n\r\n\t\t// overwrite addresses\r\n\t\treturn this.smartSetState((prevState) => ({\r\n\t\t\taddresses: {\r\n\t\t\t\t...prevState.addresses,\r\n\t\t\t\t[network]: {\r\n\t\t\t\t\t...prevState.addresses[network],\r\n\t\t\t\t\t[type]: [...addressList],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t}));\r\n\t};\r\n\r\n\tupdateAddress = async (activeAddressIndex_o, nickname, saveLocally) => {\r\n\t\tconst type = activeAddressIndex_o.type;\r\n\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\t// create copy of current addressList\r\n\t\tconst addressList = [...this.state.addresses[network][type]];\r\n\r\n\t\t// create and update copy of current address\r\n\t\tconst addr_o = { ...addressList[activeAddressIndex_o.index] };\r\n\t\taddr_o.nickname = nickname;\r\n\t\taddr_o.saveLocally = saveLocally;\r\n\r\n\t\t// replace address\r\n\t\taddressList[activeAddressIndex_o.index] = addr_o;\r\n\r\n\t\t// overwrite addresses\r\n\t\tawait this.smartSetState((prevState) => ({\r\n\t\t\taddresses: {\r\n\t\t\t\t...prevState.addresses,\r\n\t\t\t\t[network]: {\r\n\t\t\t\t\t...prevState.addresses[network],\r\n\t\t\t\t\t[type]: [...addressList],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t}));\r\n\r\n\t\tthis.saveStateToLocalStorage();\r\n\t};\r\n\r\n\tisWalletEmpty = () => {\r\n\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\treturn (\r\n\t\t\t_isEmpty(this.state.addresses[network].fct) &&\r\n\t\t\t_isEmpty(this.state.addresses[network].ec)\r\n\t\t);\r\n\t};\r\n\r\n\tsetDefaultIndex = () => {\r\n\t\tif (!_isEmpty(this.getFactoidAddresses())) {\r\n\t\t\treturn this.selectAddress(0, 'fct');\r\n\t\t} else if (!_isEmpty(this.getEntryCreditAddresses())) {\r\n\t\t\treturn this.selectAddress(0, 'ec');\r\n\t\t} else {\r\n\t\t\treturn this.smartSetState({\r\n\t\t\t\tactiveAddressIndex_o: null,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tverifyKey = (privateKey, { address }) => {\r\n\t\ttry {\r\n\t\t\t// for factom addresses\r\n\t\t\treturn getPublicAddress(privateKey).valueOf() === address.valueOf();\r\n\t\t} catch (err) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\taddAddress = (address_o, type) => {\r\n\t\tthis.addAddresses([address_o], type);\r\n\r\n\t\tthis.selectAddress(this.getNextIndex(type), type);\r\n\t};\r\n\r\n\taddAddresses = async (addressList, type) => {\r\n\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\tawait this.smartSetState((prevState) => ({\r\n\t\t\taddresses: {\r\n\t\t\t\t...prevState.addresses,\r\n\t\t\t\t[network]: {\r\n\t\t\t\t\t...prevState.addresses[network],\r\n\t\t\t\t\t[type]: [...prevState.addresses[network][type], ...addressList],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t}));\r\n\t\tawait this.setDefaultIndex();\r\n\t\tawait this.updateBalances();\r\n\t};\r\n\r\n\tgetNextIndex = (type) => {\r\n\t\tlet index = 0;\r\n\t\tif (type === 'fct') {\r\n\t\t\tindex = this.getFactoidAddresses().length - 1;\r\n\t\t} else if (type === 'ec') {\r\n\t\t\tindex = this.getEntryCreditAddresses().length - 1;\r\n\t\t}\r\n\t\treturn index;\r\n\t};\r\n\r\n\tselectAddress = (index, type) => {\r\n\t\treturn this.smartSetState({\r\n\t\t\tactiveAddressIndex_o: { index, type },\r\n\t\t});\r\n\t};\r\n\r\n\tgetActiveAddress = () => {\r\n\t\tif (this.state.activeAddressIndex_o !== null) {\r\n\t\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\t\treturn this.state.addresses[network][\r\n\t\t\t\tthis.state.activeAddressIndex_o.type\r\n\t\t\t][this.state.activeAddressIndex_o.index];\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\tgetFactoidAddresses = () => {\r\n\t\treturn this.getAddresses('fct');\r\n\t};\r\n\r\n\tgetEntryCreditAddresses = () => {\r\n\t\treturn this.getAddresses('ec');\r\n\t};\r\n\r\n\tgetAddresses = (type) => {\r\n\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\treturn this.state.addresses[network][type];\r\n\t};\r\n\r\n\tupdateWalletBalance = async (wallet) => {\r\n\t\tconst balance = await this.props.factomCliController.factomCli.getBalance(\r\n\t\t\twallet.address\r\n\t\t);\r\n\r\n\t\treturn { ...wallet, balance };\r\n\t};\r\n\r\n\tupdateBalances = async ({ force = false } = {}) => {\r\n\t\tif (this.state.isStateHydrated || force) {\r\n\t\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\t\tconst [factoidAddresses, ecAddresses] = await Promise.all([\r\n\t\t\t\tPromise.all(\r\n\t\t\t\t\tthis.state.addresses[network].fct.map(this.updateWalletBalance)\r\n\t\t\t\t),\r\n\t\t\t\tPromise.all(\r\n\t\t\t\t\tthis.state.addresses[network].ec.map(this.updateWalletBalance)\r\n\t\t\t\t),\r\n\t\t\t]);\r\n\r\n\t\t\treturn this.smartSetState((prevState) => ({\r\n\t\t\t\taddresses: {\r\n\t\t\t\t\t...prevState.addresses,\r\n\t\t\t\t\t[network]: {\r\n\t\t\t\t\t\t...prevState.addresses[network],\r\n\t\t\t\t\t\tec: ecAddresses,\r\n\t\t\t\t\t\tfct: factoidAddresses,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\tgetEntryCreditRate = async () => {\r\n\t\treturn await this.props.factomCliController.factomCli.getEntryCreditRate();\r\n\t};\r\n\r\n\tgetFactoshiFee = async () => {\r\n\t\tconst ecRate = await this.getEntryCreditRate();\r\n\r\n\t\tconst exampleAddress =\r\n\t\t\t'FA3E6enA33y9f5K9q9nrWfcDNrVR4zAp4xpniizNjQbV4RAmPjat';\r\n\r\n\t\tconst fee = Transaction.builder()\r\n\t\t\t.input(exampleAddress, Number.MAX_SAFE_INTEGER)\r\n\t\t\t.output(exampleAddress, Number.MAX_SAFE_INTEGER)\r\n\t\t\t.build()\r\n\t\t\t.computeRequiredFees(ecRate, { rcdType: 1 });\r\n\r\n\t\treturn fee;\r\n\t};\r\n\r\n\tgetFactoidFee = async () => {\r\n\t\tconst factoshiFee = await this.getFactoshiFee();\r\n\r\n\t\t//fix floating point decimal\r\n\t\treturn factoshiFee * FACTOSHI_MULTIPLIER;\r\n\t};\r\n\r\n\tnewStandardAddress = (address, nickname) => ({\r\n\t\timportType: 'standard',\r\n\t\taddress,\r\n\t\tnickname,\r\n\t\tbalance: null,\r\n\t\ttransactions: [],\r\n\t\tsaveLocally: false,\r\n\t});\r\n\r\n\tnewSeedAddress = (address, nickname, index) => ({\r\n\t\timportType: 'seed',\r\n\t\taddress,\r\n\t\tnickname,\r\n\t\tbalance: null,\r\n\t\ttransactions: [],\r\n\t\tindex,\r\n\t\tsaveLocally: false,\r\n\t});\r\n\r\n\tnewLedgerAddress = (address, nickname, index) => ({\r\n\t\timportType: 'ledger',\r\n\t\taddress,\r\n\t\tnickname,\r\n\t\tbalance: null,\r\n\t\ttransactions: [],\r\n\t\tindex,\r\n\t\tsaveLocally: false,\r\n\t});\r\n\r\n\trender() {\r\n\t\tif (this.state.isStateHydrated) {\r\n\t\t\treturn (\r\n\t\t\t\t<WalletContext.Provider value={this.state}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</WalletContext.Provider>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst enhancer = _flowRight(withNetwork, withFactomCli);\r\n\r\nexport default enhancer(WalletController);\r\n","import React from 'react';\r\n\r\nconst SeedContext = React.createContext();\r\n\r\nconst withSeed = (BaseComponent) => (props) => (\r\n\t<SeedContext.Consumer>\r\n\t\t{(seedController) => (\r\n\t\t\t<BaseComponent {...props} seedController={seedController} />\r\n\t\t)}\r\n\t</SeedContext.Consumer>\r\n);\r\n\r\nexport { SeedContext, withSeed };\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport { SeedContext } from './SeedContext';\r\nimport { withFactomCli } from './FactomCliContext';\r\nimport { withNetwork } from './NetworkContext';\r\nimport { withWalletContext } from './WalletContext';\r\nimport {\r\n\tisValidPublicEcAddress,\r\n\tisValidPublicFctAddress,\r\n\tseedToPrivateFctAddress,\r\n\tseedToPrivateEcAddress,\r\n\tgetPublicAddress,\r\n} from 'factom/dist/factom';\r\nimport factombip44 from 'factombip44/dist/factombip44';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst keyToFctAddress = (key) => getPublicAddress(seedToPrivateFctAddress(key));\r\nconst keyToECAddress = (key) => getPublicAddress(seedToPrivateEcAddress(key));\r\n\r\nclass SeedController extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tgetSeedAddresses: this.getSeedAddresses,\r\n\t\t\tsignWithSeed: this.signWithSeed,\r\n\t\t\tverifySeed: this.verifySeed,\r\n\t\t\tgetRandomMnemonic: this.getRandomMnemonic,\r\n\t\t\tgetPrivateKey: this.getPrivateKey,\r\n\t\t};\r\n\t}\r\n\r\n\tgetSeedAddresses = async (mnemonic, startIndex, amount, type) => {\r\n\t\tlet result = [];\r\n\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\r\n\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\r\n\r\n\t\tfor (let index = startIndex; index < startIndex + amount; index++) {\r\n\t\t\tlet key = null;\r\n\t\t\tlet address = null;\r\n\r\n\t\t\tif (type === 'fct') {\r\n\t\t\t\tkey = wallet.generateFactoidPrivateKey(bip32Account, 0, index);\r\n\t\t\t\taddress = keyToFctAddress(key);\r\n\t\t\t} else if (type === 'ec') {\r\n\t\t\t\tkey = wallet.generateEntryCreditPrivateKey(bip32Account, 0, index);\r\n\t\t\t\taddress = keyToECAddress(key);\r\n\t\t\t}\r\n\r\n\t\t\tresult.push({ address, index });\r\n\t\t}\r\n\r\n\t\tconst addressList = await Promise.all(\r\n\t\t\tresult.map(this.props.walletController.updateWalletBalance)\r\n\t\t);\r\n\r\n\t\treturn addressList;\r\n\t};\r\n\r\n\tsignWithSeed = async ({ mnemonic, index, toAddr, amount, type }) => {\r\n\t\tlet signedTX = {};\r\n\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\r\n\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\r\n\r\n\t\tconst privateKey = seedToPrivateFctAddress(\r\n\t\t\twallet.generateFactoidPrivateKey(bip32Account, 0, index)\r\n\t\t);\r\n\r\n\t\tif (type === 'sendFCT') {\r\n\t\t\tsignedTX = await this.props.factomCliController.factomCli.createFactoidTransaction(\r\n\t\t\t\tprivateKey,\r\n\t\t\t\ttoAddr,\r\n\t\t\t\tamount\r\n\t\t\t);\r\n\t\t} else if (type === 'convertFCT') {\r\n\t\t\tsignedTX = await this.props.factomCliController.factomCli.createEntryCreditPurchaseTransaction(\r\n\t\t\t\tprivateKey,\r\n\t\t\t\ttoAddr,\r\n\t\t\t\tamount\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn signedTX;\r\n\t};\r\n\r\n\tverifySeed = (mnemonic, { address, index }) => {\r\n\t\ttry {\r\n\t\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\r\n\t\t\tconst bip32Account = this.props.networkController.networkProps\r\n\t\t\t\t.bip32Account;\r\n\r\n\t\t\tlet derivedAddress = null;\r\n\t\t\tif (isValidPublicFctAddress(address)) {\r\n\t\t\t\tderivedAddress = keyToFctAddress(\r\n\t\t\t\t\twallet.generateFactoidPrivateKey(bip32Account, 0, index)\r\n\t\t\t\t);\r\n\t\t\t} else if (isValidPublicEcAddress(address)) {\r\n\t\t\t\tderivedAddress = keyToECAddress(\r\n\t\t\t\t\twallet.generateEntryCreditPrivateKey(bip32Account, 0, index)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn derivedAddress.valueOf() === address.valueOf(); // memoize\r\n\t\t} catch (err) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\tgetRandomMnemonic() {\r\n\t\treturn factombip44.randomMnemonic();\r\n\t}\r\n\r\n\tgetPrivateKey = (mnemonic, { address, index }) => {\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\r\n\t\tlet privateKey = null;\r\n\t\tif (isValidPublicFctAddress(address)) {\r\n\t\t\tconst key = wallet.generateFactoidPrivateKey(bip32Account, 0, index);\r\n\t\t\tprivateKey = seedToPrivateFctAddress(key);\r\n\t\t} else if (isValidPublicEcAddress(address)) {\r\n\t\t\tconst key = wallet.generateEntryCreditPrivateKey(bip32Account, 0, index);\r\n\t\t\tprivateKey = seedToPrivateEcAddress(key);\r\n\t\t}\r\n\t\treturn privateKey;\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SeedContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</SeedContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst enhancer = _flowRight(withWalletContext, withNetwork, withFactomCli);\r\n\r\nexport default enhancer(SeedController);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FactomCliContext } from './FactomCliContext';\r\nimport { FactomCli } from 'factom/dist/factom';\r\nimport { withNetwork } from './NetworkContext';\r\nimport defaultsDeep from 'lodash/fp/defaultsDeep';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _flow from 'lodash/flow';\r\nimport _noop from 'lodash/noop';\r\nimport * as moment from 'moment';\r\n\r\nclass FactomCliController extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tconnectToServer: this.connectToServer,\r\n\t\t\tgetDefaultConnectionParams: this.getDefaultConnectionParams,\r\n\t\t\tgetEstimatedBlockTimestamp: this.getEstimatedBlockTimestamp,\r\n\t\t\tblockHeight: null,\r\n\t\t\tblockTimestamp: null,\r\n\t\t\tisStateHydrated: false,\r\n\t\t};\r\n\t}\r\n\r\n\tdefaultConnectionParams = {\r\n\t\tpath: '/v2',\r\n\t\tdebugPath: '/debug',\r\n\t\tprotocol: 'https',\r\n\t\trejectUnauthorized: true,\r\n\t\tretry: {\r\n\t\t\tretries: 4,\r\n\t\t\tfactor: 2,\r\n\t\t\tminTimeout: 500,\r\n\t\t\tmaxTimeout: 2000,\r\n\t\t},\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tawait this.connectToServer();\r\n\r\n\t\tthis.blockHeightTimerId = setInterval(this.updateBlockHeight, 60000);\r\n\r\n\t\tawait this.smartSetState({ isStateHydrated: true });\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.blockHeightTimerId);\r\n\t}\r\n\r\n\tupdateBlockHeight = async () => {\r\n\t\tconst result = await this.state.factomCli.getDirectoryBlockHead();\r\n\r\n\t\tconst { height, timestamp } = result;\r\n\r\n\t\tif (height !== this.state.blockHeight) {\r\n\t\t\t// process new block\r\n\t\t\tthis.setState({\r\n\t\t\t\tblockHeight: height,\r\n\t\t\t\tblockTimestamp: timestamp,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tgetEstimatedBlockTimestamp = (blockHeight) => {\r\n\t\tconst currentHeight = this.state.blockHeight;\r\n\r\n\t\tconst currentBlockStartDate = moment.unix(this.state.blockTimestamp).utc();\r\n\r\n\t\t// get number of blocks between heights\r\n\t\tconst blocks = blockHeight - currentHeight;\r\n\r\n\t\t// add time for blocks\r\n\t\tconst minutes = blocks * 10;\r\n\r\n\t\tconst estimatedDate = currentBlockStartDate\r\n\t\t\t.clone()\r\n\t\t\t.add(minutes * 60 * 1000, 'milliseconds');\r\n\r\n\t\t// return Unix Timestamp (milliseconds)\r\n\t\treturn estimatedDate.valueOf();\r\n\t};\r\n\r\n\tgetDefaultConnectionParams = () => {\r\n\t\tconst connectionParams = {\r\n\t\t\thost: this.props.networkController.networkProps.apiHost,\r\n\t\t\tport: this.props.networkController.networkProps.apiPort,\r\n\t\t};\r\n\r\n\t\treturn defaultsDeep(this.defaultConnectionParams, connectionParams);\r\n\t};\r\n\r\n\tnewFactomCli = (connectionParams) =>\r\n\t\tnew FactomCli(defaultsDeep(this.defaultConnectionParams, connectionParams));\r\n\r\n\tconnectToServer = async () => {\r\n\t\tconst connectionParams = {\r\n\t\t\thost: this.props.networkController.networkProps.apiHost,\r\n\t\t\tport: this.props.networkController.networkProps.apiPort,\r\n\t\t};\r\n\r\n\t\tawait this.smartSetState({\r\n\t\t\tfactomCli: this.newFactomCli(connectionParams),\r\n\t\t});\r\n\r\n\t\tawait this.updateBlockHeight();\r\n\t};\r\n\r\n\tsmartSetState = (newState, afterSetState = _noop) =>\r\n\t\tnew Promise((resolve) =>\r\n\t\t\tthis.setState(newState, _flow([afterSetState, resolve]))\r\n\t\t);\r\n\r\n\trender() {\r\n\t\tif (this.state.isStateHydrated) {\r\n\t\t\treturn (\r\n\t\t\t\t<FactomCliContext.Provider value={this.state}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</FactomCliContext.Provider>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFactomCliController.propTypes = {\r\n\tchildren: PropTypes.element.isRequired,\r\n};\r\n\r\nconst enhancer = _flowRight(withNetwork);\r\n\r\nexport default enhancer(FactomCliController);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NetworkContext } from './NetworkContext';\r\nimport _flow from 'lodash/flow';\r\nimport _noop from 'lodash/noop';\r\n\r\nclass NetworkController extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tnetworkProps: this.networkProps['mainnet'],\r\n\t\t\tchangeNetwork: this.changeNetwork,\r\n\t\t};\r\n\t}\r\n\r\n\tnetworkProps = {\r\n\t\tmainnet: {\r\n\t\t\tnetwork: 'mainnet',\r\n\t\t\tbip32Account: 0,\r\n\t\t\tfactoidAbbreviation: 'FCT',\r\n\t\t\tfactoidAbbreviationFull: 'Factoid',\r\n\t\t\tecAbbreviation: 'EC',\r\n\t\t\tecAbbreviationFull: 'Entry Credit',\r\n\t\t\tapiPort: 443,\r\n\t\t\tapiHost: 'api.factomd.net',\r\n\t\t\texplorerURL: 'https://explorer.factoid.org',\r\n\t\t\tvoteRegistrationChainID:\r\n\t\t\t\t'a968e880ee3a7002f25ade15ae36a77c15f4dbc9d8c11fdd5fe86ba6af73a475',\r\n\t\t\tvoteApiUrl: 'https://mainnetvote.factoid.org/graphql',\r\n\t\t},\r\n\t\ttestnet: {\r\n\t\t\tnetwork: 'testnet',\r\n\t\t\tbip32Account: 2147483647,\r\n\t\t\tfactoidAbbreviation: 'TTS',\r\n\t\t\tfactoidAbbreviationFull: 'Testoid',\r\n\t\t\tecAbbreviation: 'TC',\r\n\t\t\tecAbbreviationFull: 'Test Credit',\r\n\t\t\tapiPort: 8288,\r\n\t\t\tapiHost: 'api.myfactomwallet.com',\r\n\t\t\texplorerURL: 'https://testnet.factoid.org',\r\n\t\t\tvoteRegistrationChainID:\r\n\t\t\t\t'a968e880ee3a7002f25ade15ae36a77c15f4dbc9d8c11fdd5fe86ba6af73a475',\r\n\t\t\tvoteApiUrl: 'https://testnetvote.factoid.org/graphql',\r\n\t\t},\r\n\t};\r\n\r\n\tchangeNetwork = async (network) => {\r\n\t\tawait this.smartSetState({ networkProps: this.networkProps[network] });\r\n\t};\r\n\r\n\tsmartSetState = (newState, afterSetState = _noop) =>\r\n\t\tnew Promise((resolve) =>\r\n\t\t\tthis.setState(newState, _flow([afterSetState, resolve]))\r\n\t\t);\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<NetworkContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</NetworkContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nNetworkController.propTypes = {\r\n\tchildren: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default NetworkController;\r\n","import React from 'react';\r\n\r\nconst VoteContext = React.createContext();\r\n\r\nconst withVote = (BaseComponent) => (props) => (\r\n\t<VoteContext.Consumer>\r\n\t\t{(voteController) => (\r\n\t\t\t<BaseComponent {...props} voteController={voteController} />\r\n\t\t)}\r\n\t</VoteContext.Consumer>\r\n);\r\n\r\nexport { VoteContext, withVote };\r\n","/*\r\n * Vote Type Values\r\n */\r\nexport const BINARY_CONFIG = { name: 'Binary Voting', type: 0, numOptions: 1 };\r\nexport const SINGLE_OPTION_CONFIG = {\r\n\tname: 'Single Option Voting',\r\n\ttype: 1,\r\n\tnumOptions: 1,\r\n};\r\nexport const APPROVAL_CONFIG = { name: 'Approval Voting', type: 1 };\r\nexport const INSTANT_RUNOFF_CONFIG = {\r\n\tname: 'Instant-runoff Voting',\r\n\ttype: 2,\r\n};\r\n\r\nexport const VOTE_TYPE_DATA = {\r\n\tbinary: BINARY_CONFIG,\r\n\tsingleOption: SINGLE_OPTION_CONFIG,\r\n\tapproval: APPROVAL_CONFIG,\r\n\tinstantRunoff: INSTANT_RUNOFF_CONFIG,\r\n};\r\n\r\nexport const ALL_ELIGIBLE_VOTERS = {\r\n\ttext: 'All Eligible Voters',\r\n\tvalue: 'ALL_ELIGIBLE_VOTERS',\r\n};\r\n\r\nexport const PARTICIPANTS_ONLY = {\r\n\ttext: 'Participants Only',\r\n\tvalue: 'PARTICIPANTS_ONLY',\r\n};\r\n\r\n/**\r\n * Supported Hashing Algorithms\r\n */\r\nexport const HASH_ALGO_VALUES = [\r\n\t{ value: 'sha1', text: 'sha1' },\r\n\t{ value: 'sha256', text: 'sha256' },\r\n\t{ value: 'sha512', text: 'sha512' },\r\n];\r\n\r\n/**\r\n * Supported Hashing Algorithms\r\n */\r\nexport const REGEX_CHAIN_ID = /^[a-f0-9]{64}$/;\r\n\r\nexport const COMMIT_HMAC_ALGO = 'sha512';\r\n\r\n/**\r\n * Poll Status\r\n */\r\nexport const POLL_STATUSES = {\r\n\tdiscussion: { value: 'discussion', displayValue: 'Discussion Phase' },\r\n\tcommit: { value: 'commit', displayValue: 'Commit Phase' },\r\n\treveal: { value: 'reveal', displayValue: 'Reveal Phase' },\r\n\tcomplete: { value: 'complete', displayValue: 'Complete' },\r\n};\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _get from 'lodash/get';\r\nimport _isNil from 'lodash/isNil';\r\nimport { VoteContext } from './VoteContext';\r\nimport { withFactomCli } from './FactomCliContext';\r\nimport { withNetwork } from './NetworkContext';\r\nimport { FactomVoteManager } from 'factom-vote/dist/factom-vote';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport { POLL_STATUSES } from '../vote/create/VOTE_CONSTANTS';\r\nimport { VOTE_TYPE_DATA } from '../vote/create/VOTE_CONSTANTS';\r\n\r\n/**\r\n * Queries\r\n */\r\nconst PUBLIC_KEYS_RESOLVER = gql`\r\n\tquery PubKeyResolver($chain: String!) {\r\n\t\tidentityKeysAtHeight(chain: $chain)\r\n\t}\r\n`;\r\n\r\nclass VoteController extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tfactomVoteManager: this.newFactomVoteManager(),\r\n\t\t\tsubmitVote: this.submitVote,\r\n\t\t\tgetPollStatus: this.getPollStatus,\r\n\t\t\tgetPhaseEndBlock: this.getPhaseEndBlock,\r\n\t\t\tgetPollType: this.getPollType,\r\n\t\t\tcommitVote: this.commitVote,\r\n\t\t\trevealVote: this.revealVote,\r\n\t\t};\r\n\t}\r\n\r\n\tclient = new ApolloClient({\r\n\t\turi: this.props.networkController.networkProps.voteApiUrl,\r\n\t});\r\n\r\n\tpublicKeysResolver = async (identityChainId, blockHeight) => {\r\n\t\tconst { data } = await this.client.query({\r\n\t\t\tquery: PUBLIC_KEYS_RESOLVER,\r\n\t\t\tvariables: {\r\n\t\t\t\tchain: identityChainId,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (!_isNil(_get(data, 'identityKeysAtHeight'))) {\r\n\t\t\treturn _get(data, 'identityKeysAtHeight');\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t};\r\n\r\n\tnewFactomVoteManager = () =>\r\n\t\tnew FactomVoteManager(\r\n\t\t\tthis.props.factomCliController.getDefaultConnectionParams(),\r\n\t\t\t{\r\n\t\t\t\tpublicKeysResolver: this.publicKeysResolver,\r\n\t\t\t\tprivateKeysResolver: null,\r\n\t\t\t}\r\n\t\t);\r\n\r\n\tsubmitVote = async (voteData, ecPrivateAddress) => {\r\n\t\tconst skipValidation = true;\r\n\r\n\t\tconst result = await this.state.factomVoteManager.createVote(\r\n\t\t\tvoteData,\r\n\t\t\tecPrivateAddress,\r\n\t\t\tskipValidation\r\n\t\t);\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tcommitVote = async ({ voteChainId, vote, voter, ecPrivateAddress }) => {\r\n\t\tconst skipValidation = false;\r\n\r\n\t\tconst result = await this.state.factomVoteManager.commitVote(\r\n\t\t\tvoteChainId,\r\n\t\t\tvote,\r\n\t\t\tvoter,\r\n\t\t\tecPrivateAddress,\r\n\t\t\tskipValidation\r\n\t\t);\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\trevealVote = async ({ voteChainId, vote, voterId, ecPrivateAddress }) => {\r\n\t\tconst skipValidation = false;\r\n\r\n\t\tconst result = await this.state.factomVoteManager.revealVote(\r\n\t\t\tvoteChainId,\r\n\t\t\tvote,\r\n\t\t\tvoterId,\r\n\t\t\tecPrivateAddress,\r\n\t\t\tskipValidation\r\n\t\t);\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tgetPhaseEndBlock = ({ commitStart, commitEnd, revealEnd }) => {\r\n\t\tconst workingHeight = this.props.factomCliController.blockHeight + 1;\r\n\r\n\t\tif (workingHeight < commitStart) {\r\n\t\t\t// discussion phase\r\n\t\t\treturn commitStart - 1;\r\n\t\t} else if (workingHeight <= commitEnd) {\r\n\t\t\t// commit phase\r\n\t\t\treturn commitEnd;\r\n\t\t} else if (workingHeight <= revealEnd) {\r\n\t\t\t// reveal phase\r\n\t\t\treturn revealEnd;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\tgetPollStatus = ({ commitStart, commitEnd, revealEnd }) => {\r\n\t\tconst workingHeight = this.props.factomCliController.blockHeight + 1;\r\n\r\n\t\tif (workingHeight < commitStart) {\r\n\t\t\treturn POLL_STATUSES.discussion;\r\n\t\t} else if (workingHeight <= commitEnd) {\r\n\t\t\treturn POLL_STATUSES.commit;\r\n\t\t} else if (workingHeight <= revealEnd) {\r\n\t\t\treturn POLL_STATUSES.reveal;\r\n\t\t} else {\r\n\t\t\treturn POLL_STATUSES.complete;\r\n\t\t}\r\n\t};\r\n\r\n\tgetPollType = (voteType, maxOptions) => {\r\n\t\tlet pollType_o;\r\n\r\n\t\tif (voteType === 0) {\r\n\t\t\tpollType_o = VOTE_TYPE_DATA['binary'];\r\n\t\t} else if (voteType === 1) {\r\n\t\t\tif (maxOptions === 1) {\r\n\t\t\t\tpollType_o = VOTE_TYPE_DATA['singleOption'];\r\n\t\t\t} else {\r\n\t\t\t\tpollType_o = VOTE_TYPE_DATA['approval'];\r\n\t\t\t}\r\n\t\t} else if (voteType === 2) {\r\n\t\t\tpollType_o = VOTE_TYPE_DATA['instantRunoff'];\r\n\t\t}\r\n\r\n\t\treturn pollType_o;\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ApolloProvider client={this.client}>\r\n\t\t\t\t<VoteContext.Provider value={this.state}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</VoteContext.Provider>\r\n\t\t\t</ApolloProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst enhancer = _flowRight(withNetwork, withFactomCli);\r\n\r\nexport default enhancer(VoteController);\r\n","import React from 'react';\r\n\r\nconst IdentityContext = React.createContext();\r\n\r\nconst withIdentity = (BaseComponent) => (props) => (\r\n\t<IdentityContext.Consumer>\r\n\t\t{(identityController) => (\r\n\t\t\t<BaseComponent {...props} identityController={identityController} />\r\n\t\t)}\r\n\t</IdentityContext.Consumer>\r\n);\r\n\r\nexport { IdentityContext, withIdentity };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IdentityContext } from './IdentityContext';\r\nimport { withNetwork } from './NetworkContext';\r\nimport { withFactomCli } from './FactomCliContext';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport { Chain, Entry } from 'factom/dist/factom';\r\n\r\nconst IDENTITY_VERSION = 1;\r\n\r\nclass IdentityController extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tregisterIdentity: this.registerIdentity,\r\n\t\t};\r\n\t}\r\n\r\n\tregisterIdentity = async ({ idPubKeys, idNames, ecPrivateKey }) => {\r\n\t\tlet content = {\r\n\t\t\t'identity-version': IDENTITY_VERSION,\r\n\t\t\tkeys: idPubKeys,\r\n\t\t};\r\n\r\n\t\t// build chain entry\r\n\t\tconst entryBuilder = Entry.builder();\r\n\r\n\t\tfor (const name of idNames) {\r\n\t\t\tentryBuilder.extId(name, 'utf8');\r\n\t\t}\r\n\r\n\t\tconst entry = entryBuilder.content(JSON.stringify(content), 'utf8').build();\r\n\r\n\t\tconst chain = new Chain(entry);\r\n\r\n\t\t// submit chain entry\r\n\t\tconst result = await this.props.factomCliController.factomCli.add(\r\n\t\t\tchain,\r\n\t\t\tecPrivateKey\r\n\t\t);\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<IdentityContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</IdentityContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nIdentityController.propTypes = {\r\n\tchildren: PropTypes.element.isRequired,\r\n};\r\n\r\nconst enhancer = _flowRight(withFactomCli, withNetwork);\r\n\r\nexport default enhancer(IdentityController);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Warning from '@material-ui/icons/Warning';\r\n\r\nclass ConfirmationDialogRaw extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tvalue: props.value,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.value !== this.props.value) {\r\n\t\t\tthis.setState({ value: nextProps.value });\r\n\t\t}\r\n\t}\r\n\r\n\thandleAgree = () => {\r\n\t\tthis.props.onClose(this.state.value);\r\n\t};\r\n\r\n\thandleChange = (event, value) => {\r\n\t\tthis.setState({ value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes, value, ...other } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Dialog\r\n\t\t\t\tdisableBackdropClick\r\n\t\t\t\tdisableEscapeKeyDown\r\n\t\t\t\taria-labelledby=\"confirmation-dialog-title\"\r\n\t\t\t\t{...other}\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle align=\"center\" style={{ backgroundColor: '#f50057' }}>\r\n\t\t\t\t\t<Warning fontSize=\"large\" />\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">\r\n\t\t\t\t\t\tImportant\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\tMyFactomWallet.com is a client-side interface wallet. We provide the\r\n\t\t\t\t\t\tuser with access to the Factom blockchain, but we do not store,\r\n\t\t\t\t\t\tcontrol or have access to ANY user wallet or blockchain information\r\n\t\t\t\t\t\tincluding keys or transaction data. Therefore,&nbsp;\r\n\t\t\t\t\t\t<b>we cannot reverse transactions or recover funds.</b>\r\n\t\t\t\t\t\t&nbsp; MyFactomWallet.com is not a bank or a custodian. Your assets\r\n\t\t\t\t\t\tand your security are entirely your own responsibility. By using\r\n\t\t\t\t\t\tMyFactomWallet.com and/or by clicking 'accept' at the bottom, you\r\n\t\t\t\t\t\tagree to the following notices:\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">\r\n\t\t\t\t\t\tNotices\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tThis project is under active development; there is always the\r\n\t\t\t\t\t\t\t\tpossibility something unexpected happens that causes your funds\r\n\t\t\t\t\t\t\t\tto be lost, including but not limited to third party domain\r\n\t\t\t\t\t\t\t\tattacks. <b>We are not responsible for any loss.</b>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tNever send funds from a mainnet address to a testnet address and\r\n\t\t\t\t\t\t\t\tvice versa. Sending Factoids to the testnet will likely result\r\n\t\t\t\t\t\t\t\tin a loss of factoids. You acknowledge that testnet Testoids and\r\n\t\t\t\t\t\t\t\tTest Credits have no value.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tWhen you create new Factoid or Entry Credit addresses on\r\n\t\t\t\t\t\t\t\tMyFactomWallet.com, a random 12-word cryptographic seed phrase\r\n\t\t\t\t\t\t\t\tis generated in the browser, and is used to generate new\r\n\t\t\t\t\t\t\t\taddresses and sign transactions.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tThe handling of your private keys or seed phrase is solely your\r\n\t\t\t\t\t\t\t\tresponsibility. It happens entirely on your computer, inside\r\n\t\t\t\t\t\t\t\tyour browser.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tWe never transmit, receive or store your private keys or seeds.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tWe do not charge a transaction fee (blockchain fees still\r\n\t\t\t\t\t\t\t\tapply).\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tWe are not a custodian and have no information about or control\r\n\t\t\t\t\t\t\t\tover your Factoids or Entry Credits.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tYou are simply using our interface to interact directly with the\r\n\t\t\t\t\t\t\t\tblockchain.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tIf you provide your public key (address) to someone, they can\r\n\t\t\t\t\t\t\t\ttransfer Factoids to you.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tIf you provide your private key or seed phrase to a person or\r\n\t\t\t\t\t\t\t\tentity, then that person or entity has full control of your\r\n\t\t\t\t\t\t\t\taccount, and may withdraw your funds.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tWe are not a custodian. Your funds are stored on the blockchain\r\n\t\t\t\t\t\t\t\tand protected by your private key and/or seed phrase. As\r\n\t\t\t\t\t\t\t\texplained above, your private key is solely your responsibility\r\n\t\t\t\t\t\t\t\tand MyFactomWallet.com does not store or have access to any of\r\n\t\t\t\t\t\t\t\tyour keys.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tOffered under MIT License Copyright © 2015-2018: THE SOFTWARE IS\r\n\t\t\t\t\t\t\t\tPROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n\t\t\t\t\t\t\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n\t\t\t\t\t\t\t\tMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n\t\t\t\t\t\t\t\tNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n\t\t\t\t\t\t\t\tHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n\t\t\t\t\t\t\t\tWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n\t\t\t\t\t\t\t\tFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n\t\t\t\t\t\t\t\tOTHER DEALINGS IN THE SOFTWARE. The above copyright notice and\r\n\t\t\t\t\t\t\t\tthis permission notice shall be included in all copies or\r\n\t\t\t\t\t\t\t\tsubstantial portions of the Software.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">\r\n\t\t\t\t\t\tImportant Tips\r\n\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tNever hand-type your public or private address.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tAlways send a small amount of Factoids first to ensure that the\r\n\t\t\t\t\t\t\t\ttransaction is processed correctly and the Factoids end up in\r\n\t\t\t\t\t\t\t\tthe correct address. After verifying this, you may send the full\r\n\t\t\t\t\t\t\t\tamount of Factoids.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tIf you generated a new Factoid or Entry Credit address in\r\n\t\t\t\t\t\t\t\tMyFactomWallet.com; save and back up the associated seed BEFORE\r\n\t\t\t\t\t\t\t\tyou send any funds to it.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tDo not post your private key or seed on any social media,\r\n\t\t\t\t\t\t\t\tchat-platforms, email/sms it, or store it in any cloud storage\r\n\t\t\t\t\t\t\t\tservice (Google Drive, Dropbox etc).\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tUse a hardware wallet for added protection (Ledger Nano S\r\n\t\t\t\t\t\t\t\tsupported at this time).\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tRegularly monitor the security of your computer operating system\r\n\t\t\t\t\t\t\t\tto ensure that it is not compromised by malicious software\r\n\t\t\t\t\t\t\t\twhereby unauthorized third parties may obtain your private key\r\n\t\t\t\t\t\t\t\tor seed.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tEnsure that you are not on a phishing site, but have landed on\r\n\t\t\t\t\t\t\t\tthe correct page (verify that you are on\r\n\t\t\t\t\t\t\t\thttps://www.myfactomwallet.com in the browser, and also check\r\n\t\t\t\t\t\t\t\tthat the “lock” symbol is displayed in the Chrome address bar).\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tThe user must understand that MyFactomWallet.com CANNOT:\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\tAccess your wallet or send your funds for you\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\tRecover or change your private key or seed\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\tReverse, cancel, or refund any transactions\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Typography>Freeze FCT or Entry Credit addresses</Typography>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={this.handleAgree} color=\"primary\">\r\n\t\t\t\t\t\tAccept\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n\tonClose: PropTypes.func,\r\n\tvalue: PropTypes.string,\r\n};\r\n\r\nconst styles = (theme) => ({});\r\n\r\nclass ConfirmationDialog extends React.Component {\r\n\tstate = {\r\n\t\topen: true,\r\n\t\tvalue: 'Done',\r\n\t};\r\n\r\n\thandleClose = (value) => {\r\n\t\tthis.setState({ value, open: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<ConfirmationDialogRaw\r\n\t\t\t\t\topen={this.state.open}\r\n\t\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ConfirmationDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport { withNetwork } from './context/NetworkContext';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction TestnetWarningBar(props) {\r\n\tconst {\r\n\t\tclasses,\r\n\t\tnetworkController: { networkProps },\r\n\t} = props;\r\n\r\n\tif (networkProps.network === 'testnet') {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<div className={classes.toolbarSpace} />\r\n\t\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\r\n\t\t\t\t\t<Toolbar className={classes.toolbar}>\r\n\t\t\t\t\t\t<WarningIcon className={classes.warningIcon} />\r\n\t\t\t\t\t\t<Typography variant=\"h3\">\r\n\t\t\t\t\t\t\tYou are connected to the Factom <b>Testnet</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t<WarningIcon className={classes.warningIcon} />\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nTestnetWarningBar.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tappBar: {\r\n\t\ttop: 'auto',\r\n\t\tbottom: 0,\r\n\t\tminHeight: 78,\r\n\t\tpaddingTop: 9,\r\n\t\tbackgroundColor: '#ffa000',\r\n\t},\r\n\ttoolbar: {\r\n\t\tmarginLeft: 'auto',\r\n\t\tmarginRight: 'auto',\r\n\t},\r\n\twarningIcon: {\r\n\t\tfontSize: 52,\r\n\t},\r\n\ttoolbarSpace: {\r\n\t\theight: 85,\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\r\nexport default enhancer(TestnetWarningBar);\r\n","import React from 'react';\r\nimport _get from 'lodash/get';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst getImportTypes = (networkProps) => {\r\n\treturn [\r\n\t\t{\r\n\t\t\tvalue: 'fct',\r\n\t\t\tlabel: 'Import ' + networkProps.factoidAbbreviationFull + ' Address',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'ec',\r\n\t\t\tlabel: 'Import ' + networkProps.ecAbbreviationFull + ' Address',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'new',\r\n\t\t\tlabel: 'Generate new 12-word seed',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'importSeed',\r\n\t\t\tlabel: 'Import addresses from mnemonic seed phrase',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'ledger',\r\n\t\t\tlabel: 'Import addresses from Ledger Nano S',\r\n\t\t},\r\n\t];\r\n};\r\n\r\n/**\r\n * Constants\r\n */\r\nconst importTypePath = 'importType';\r\n\r\nclass ImportTypeForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\timportType,\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ [importTypePath]: importType }}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[importTypePath]: Yup.string().required('Required'),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ values, handleChange, isSubmitting, errors, touched }) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t_get(errors, importTypePath) && _get(touched, importTypePath)\r\n\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcomponent=\"fieldset\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FormLabel component=\"legend\">\r\n\t\t\t\t\t\t\t\tHow would you like to add a new address?\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={importTypePath}\r\n\t\t\t\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>&nbsp;*</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormLabel>\r\n\r\n\t\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\t\taria-label=\"Import Type\"\r\n\t\t\t\t\t\t\t\tname={importTypePath}\r\n\t\t\t\t\t\t\t\tvalue={_get(values, importTypePath)}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tthis.props.updateImportType(e.target.value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{getImportTypes(networkProps).map((option, index) => (\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\tvalue={option.value}\r\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\t\t\tlabel={option.label}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={option.disabled}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button disabled={true}>Back</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nImportTypeForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red' },\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\r\nexport default enhancer(ImportTypeForm);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { isValidPublicFctAddress } from 'factom/dist/factom';\r\nimport get from 'lodash/get';\r\nimport findIndex from 'lodash/findIndex';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst FCT_ADDRESS_LENGTH = 52;\r\nconst NICKNAME_MAX_LENGTH = 25;\r\nconst fctAddrPath = 'factoidAddress';\r\nconst nicknamePath = 'nickname';\r\n\r\nclass ImportFctForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: { getFactoidAddresses, newStandardAddress, addAddress },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tconst factoidAddresses = getFactoidAddresses();\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ factoidAddress: '', nickname: '' }}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\tconst fctAddress_o = newStandardAddress(\r\n\t\t\t\t\t\tget(values, fctAddrPath),\r\n\t\t\t\t\t\tget(values, nicknamePath).trim()\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\taddAddress(fctAddress_o, 'fct');\r\n\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[fctAddrPath]: Yup.string()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(fctAddrPath, 'Invalid Address', isValidPublicFctAddress)\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\tfctAddrPath,\r\n\t\t\t\t\t\t\t'Enter unique address',\r\n\t\t\t\t\t\t\t(value) => findIndex(factoidAddresses, ['address', value]) === -1\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t[nicknamePath]: Yup.string()\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\tnicknamePath,\r\n\t\t\t\t\t\t\t'Enter unique nickname',\r\n\t\t\t\t\t\t\t(value) =>\r\n\t\t\t\t\t\t\t\tfindIndex(factoidAddresses, [nicknamePath, value]) === -1\r\n\t\t\t\t\t\t),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\terrors.factoidAddress && touched.factoidAddress ? true : false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tname={fctAddrPath}\r\n\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t'Public ' + networkProps.factoidAbbreviationFull + ' Address'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tmaxLength={FCT_ADDRESS_LENGTH}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname={fctAddrPath}\r\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\terrors[nicknamePath] && touched[nicknamePath] ? true : false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\tlabel=\"Nickname\"\r\n\t\t\t\t\t\t\tmaxLength={NICKNAME_MAX_LENGTH}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<Field name={props.name}>\r\n\t\t\t{({ field }) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\tmaxLength: props.maxLength,\r\n\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...field}\r\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\terror={props.error}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Field>\r\n\t);\r\n};\r\n\r\nImportFctForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '12px' },\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(ImportFctForm);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { isValidPublicEcAddress } from 'factom/dist/factom';\r\nimport _get from 'lodash/get';\r\nimport findIndex from 'lodash/findIndex';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst EC_ADDRESS_LENGTH = 52;\r\nconst NICKNAME_MAX_LENGTH = 25;\r\nconst ecAddrNamePath = 'entryCreditAddress';\r\nconst nicknamePath = 'nickname';\r\n\r\nclass ImportEcForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: {\r\n\t\t\t\tgetEntryCreditAddresses,\r\n\t\t\t\tnewStandardAddress,\r\n\t\t\t\taddAddress,\r\n\t\t\t},\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tconst ecAddresses = getEntryCreditAddresses();\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ entryCreditAddress: '', nickname: '' }}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\tconst ecAddress_o = newStandardAddress(\r\n\t\t\t\t\t\t_get(values, ecAddrNamePath),\r\n\t\t\t\t\t\t_get(values, nicknamePath).trim()\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\taddAddress(ecAddress_o, 'ec');\r\n\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[ecAddrNamePath]: Yup.string()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(ecAddrNamePath, 'Invalid Address', isValidPublicEcAddress)\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\tecAddrNamePath,\r\n\t\t\t\t\t\t\t'Enter unique address',\r\n\t\t\t\t\t\t\t(value) => findIndex(ecAddresses, ['address', value]) === -1\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t[nicknamePath]: Yup.string()\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\tnicknamePath,\r\n\t\t\t\t\t\t\t'Enter unique nickname',\r\n\t\t\t\t\t\t\t(value) => findIndex(ecAddresses, [nicknamePath, value]) === -1\r\n\t\t\t\t\t\t),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\terrors.entryCreditAddress && touched.entryCreditAddress\r\n\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tname={ecAddrNamePath}\r\n\t\t\t\t\t\t\tlabel={'Public ' + networkProps.ecAbbreviationFull + ' Address'}\r\n\t\t\t\t\t\t\thelperText=\"test\"\r\n\t\t\t\t\t\t\tmaxLength={EC_ADDRESS_LENGTH}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname={ecAddrNamePath}\r\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\terrors[nicknamePath] && touched[nicknamePath] ? true : false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\tlabel=\"Nickname\"\r\n\t\t\t\t\t\t\tmaxLength={NICKNAME_MAX_LENGTH}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<Field name={props.name}>\r\n\t\t\t{({ field }) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\tmaxLength: props.maxLength,\r\n\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...field}\r\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\terror={props.error}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Field>\r\n\t);\r\n};\r\n\r\nImportEcForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '12px' },\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(ImportEcForm);\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withSeed } from '../context/SeedContext';\r\nimport _get from 'lodash/get';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst mnemonicPath = 'mnemonic';\r\n\r\nclass NewSeedForm extends React.Component {\r\n\tstate = {\r\n\t\tstep: 1,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.setMnemonic(this.props.seedController.getRandomMnemonic());\r\n\t}\r\n\r\n\tnextStep = () => {\r\n\t\tthis.setState({ step: 2 });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\t[mnemonicPath]: '',\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[mnemonicPath]: Yup.string()\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.oneOf([this.props.mnemonic], 'Seed does not match'),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tstyle={{ width: '500px' }}\r\n\t\t\t\t\t\tautoComplete=\"nope\"\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.step === 1 && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tstyle={{ fontWeight: 500 }}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.warningText}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tWrite down your seed carefully on a piece of paper. This seed\r\n\t\t\t\t\t\t\t\t\tprovides access to all the derived addresses. If you lose this\r\n\t\t\t\t\t\t\t\t\tseed, you will lose access to your addresses forever!\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<Typography style={{ fontWeight: 500 }}>\r\n\t\t\t\t\t\t\t\t\tSeed Phrase:\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>{this.props.mnemonic}</Typography>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{this.state.step === 2 && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t_get(errors, mnemonicPath) && _get(touched, mnemonicPath)\r\n\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tname={mnemonicPath}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Verify Seed Phrase\"\r\n\t\t\t\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={mnemonicPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>{msg}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.props.setMnemonic(null);\r\n\t\t\t\t\t\t\t\t\tthis.props.handleBack();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t{this.state.step === 1 && (\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tonClick={this.nextStep}\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tVerify Seed\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{this.state.step === 2 && (\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<Field name={props.name}>\r\n\t\t\t{({ field }) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...field}\r\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\terror={props.error}\r\n\t\t\t\t\tautoFocus={props.autoFocus}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Field>\r\n\t);\r\n};\r\n\r\nNewSeedForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\twarningText: { color: 'red', fontSize: '15px' },\r\n\terrorText: { color: 'red' },\r\n});\r\n\r\nconst enhancer = _flowRight(withSeed, withStyles(styles));\r\n\r\nexport default enhancer(NewSeedForm);\r\n","import React from 'react';\r\nimport { withNetwork } from '../../context/NetworkContext';\r\nimport _flowRight from 'lodash/flowRight';\r\n/**\r\n * Constants\r\n */\r\nconst FACTOSHI_MULTIPLIER = 0.00000001;\r\n\r\nconst FormatBalance = (props) => {\r\n\tconst {\r\n\t\tbalance,\r\n\t\ttype,\r\n\t\tnetworkController: { networkProps },\r\n\t} = props;\r\n\r\n\tif (type === 'fct') {\r\n\t\treturn <FormatFCTBalance balance={balance} networkProps={networkProps} />;\r\n\t} else if (type === 'ec') {\r\n\t\treturn <FormatECBalance balance={balance} networkProps={networkProps} />;\r\n\t}\r\n};\r\n\r\nconst FormatFCTBalance = (props) => {\r\n\tlet result = '';\r\n\tconst factoshiBalance = props.balance;\r\n\r\n\tconst factoidBalance = parseInt(factoshiBalance, 10) * FACTOSHI_MULTIPLIER;\r\n\r\n\tresult =\r\n\t\tfactoidBalance.toLocaleString(undefined, {\r\n\t\t\tmaximumFractionDigits: 8,\r\n\t\t}) +\r\n\t\t' ' +\r\n\t\tprops.networkProps.factoidAbbreviation;\r\n\r\n\treturn result;\r\n};\r\n\r\nconst FormatECBalance = (props) => {\r\n\tlet result = '';\r\n\tconst entryCreditBalance = props.balance;\r\n\r\n\tresult =\r\n\t\tparseInt(entryCreditBalance, 10) + ' ' + props.networkProps.ecAbbreviation;\r\n\r\n\treturn result;\r\n};\r\n\r\nconst enhancer = _flowRight(withNetwork);\r\nexport default enhancer(FormatBalance);\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Field, ErrorMessage, FieldArray } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport _get from 'lodash/get';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormatBalance from '../walletManager/shared/BalanceFormatter.js';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst addressesPath = 'addresses';\r\nconst NICKNAME_MAX_LENGTH = 25;\r\n\r\nclass GenerateAddressTable extends React.Component {\r\n\tstate = { loading: false };\r\n\r\n\taddGeneratedAddress = (nickname, address_o, index, arrayHelpers) => {\r\n\t\tif (nickname) {\r\n\t\t\tconst addr_o = this.props.newAddress(\r\n\t\t\t\taddress_o.address,\r\n\t\t\t\tnickname.trim(),\r\n\t\t\t\tindex\r\n\t\t\t);\r\n\t\t\tarrayHelpers.replace(index, addr_o);\r\n\t\t} else {\r\n\t\t\tarrayHelpers.replace(index, null);\r\n\t\t}\r\n\t};\r\n\r\n\tvalidateNickname = (value) => {\r\n\t\tconst { userAddressList } = this.props;\r\n\t\tconst userAddressNicknames = userAddressList.map(\r\n\t\t\t(addr_o) => addr_o.nickname\r\n\t\t);\r\n\r\n\t\tlet error;\r\n\t\tif (!value) {\r\n\t\t\terror = 'Required';\r\n\t\t} else if (userAddressNicknames.indexOf(value.trim()) !== -1) {\r\n\t\t\terror = 'Enter unique nickname';\r\n\t\t}\r\n\t\treturn error;\r\n\t};\r\n\r\n\tgetNext = async () => {\r\n\t\tthis.setState({ loading: true });\r\n\t\tawait this.props.getNextFive();\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tgeneratedAddressList,\r\n\t\t\tuserAddressList, // existing addresses\r\n\t\t\tvalues,\r\n\t\t\terrors,\r\n\t\t\ttouched,\r\n\t\t\tsetFieldValue,\r\n\t\t\thandleChange,\r\n\t\t} = this.props;\r\n\r\n\t\tconst userAddresses = userAddressList.map((addr_o) => addr_o.address);\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Typography variant=\"h6\">{this.props.title}</Typography>\r\n\t\t\t\t<ErrorMessage\r\n\t\t\t\t\tname={addressesPath}\r\n\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t<span className={classes.errorText}>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t{msg}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Paper className={classes.root}>\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<CustomCell />\r\n\t\t\t\t\t\t\t\t<CustomCell>Address</CustomCell>\r\n\t\t\t\t\t\t\t\t<CustomCell>Balance</CustomCell>\r\n\t\t\t\t\t\t\t\t<CustomCell>Nickname</CustomCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{!_isEmpty(generatedAddressList) &&\r\n\t\t\t\t\t\t\t\tgeneratedAddressList.map((address_o, index) => {\r\n\t\t\t\t\t\t\t\t\tconst checkboxPath = 'checkbox_' + index;\r\n\t\t\t\t\t\t\t\t\tconst nicknamePath = 'nickname_' + index;\r\n\t\t\t\t\t\t\t\t\tconst duplicate =\r\n\t\t\t\t\t\t\t\t\t\tuserAddresses.indexOf(address_o.address) === -1\r\n\t\t\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t\t\t: true;\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<TableRow key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FieldArray\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={addressesPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{duplicate ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Address already added\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkboxPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={index + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"start\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkboxPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkboxPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.replace(index, null);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(nicknamePath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={index + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"start\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>{address_o.address}</CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormatBalance\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance={address_o.balance}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype={this.props.type}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{duplicate ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserAddressList.find((addr_o) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn addr_o.address === address_o.address;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}).nickname\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, checkboxPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate={this.validateNickname}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{({ field }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.addGeneratedAddress(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress_o,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors[nicknamePath] &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched[nicknamePath]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: NICKNAME_MAX_LENGTH,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorTextSmall}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{msg}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t<TableFooter />\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</Paper>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tonClick={this.getNext}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tdisabled={this.state.loading}\r\n\t\t\t\t>\r\n\t\t\t\t\tLoad Five More\r\n\t\t\t\t\t{(this.state.loading || _isEmpty(generatedAddressList)) && (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<CircularProgress thickness={7} />\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Button>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nconst CustomCell = withStyles((theme) => ({\r\n\thead: {\r\n\t\tcolor: 'black',\r\n\t\tfontSize: '13px',\r\n\t\tpaddingLeft: 5,\r\n\t\tpaddingRight: 5,\r\n\t},\r\n\tbody: {\r\n\t\tpaddingLeft: 5,\r\n\t\tpaddingRight: 5,\r\n\t},\r\n}))(TableCell);\r\n\r\nconst styles = (theme) => ({\r\n\troot: {\r\n\t\twidth: '800px',\r\n\t\tmarginTop: 12,\r\n\t\toverflowX: 'auto',\r\n\t\tmaxHeight: 405,\r\n\t},\r\n\thead: {\r\n\t\tbackgroundColor: theme.palette.common.black,\r\n\t\tcolor: theme.palette.common.white,\r\n\t},\r\n\terrorText: {\r\n\t\tcolor: 'red',\r\n\t\tfontSize: '20px',\r\n\t},\r\n\terrorTextSmall: {\r\n\t\tcolor: 'red',\r\n\t\tfontSize: '12px',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(GenerateAddressTable);\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport _isNil from 'lodash/isNil';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _get from 'lodash/get';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withLedger } from '../context/LedgerContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport GenerateAddressTable from './GenerateAddressTable';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst addressesPath = 'addresses';\r\n\r\nconst getTitle = (networkProps) => {\r\n\treturn {\r\n\t\tfct: 'Ledger Nano S ' + networkProps.factoidAbbreviationFull + ' Addresses',\r\n\t\tec: 'Ledger Nano S ' + networkProps.ecAbbreviationFull + ' Addresses',\r\n\t};\r\n};\r\n\r\nclass LedgerForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tgeneratedAddressList: [],\r\n\t\t\tledgerConnected: false,\r\n\t\t\tledgerStatus: null,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getNextFive();\r\n\t}\r\n\r\n\tretryConnection = () => {\r\n\t\tthis.setState({\r\n\t\t\tledgerStatus: null,\r\n\t\t});\r\n\t\tthis.getNextFive();\r\n\t};\r\n\r\n\tgetNextFive = async () => {\r\n\t\ttry {\r\n\t\t\tconst addressList = await this.props.ledgerController.getLedgerAddresses(\r\n\t\t\t\tthis.state.generatedAddressList.length,\r\n\t\t\t\t5,\r\n\t\t\t\tthis.props.type\r\n\t\t\t);\r\n\r\n\t\t\tconst generatedAddressList = await Promise.all(\r\n\t\t\t\taddressList.map(this.props.walletController.updateWalletBalance)\r\n\t\t\t);\r\n\r\n\t\t\tthis.setState((prevState) => ({\r\n\t\t\t\tgeneratedAddressList: [\r\n\t\t\t\t\t...prevState.generatedAddressList,\r\n\t\t\t\t\t...generatedAddressList,\r\n\t\t\t\t],\r\n\t\t\t\tledgerConnected: true,\r\n\t\t\t}));\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({\r\n\t\t\t\tledgerStatus: 'Ledger Nano S not found. Troubleshooting tips:',\r\n\t\t\t\tledgerConnected: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\thasAddressSelected = (formValues) =>\r\n\t\tObject.keys(formValues)\r\n\t\t\t.filter((key) => key.startsWith('checkbox'))\r\n\t\t\t.some((key) => formValues[key]);\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\ttype,\r\n\t\t\twalletController: { getAddresses, addAddresses, newLedgerAddress },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tlet userAddressList = getAddresses(type);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\taddresses: [],\r\n\t\t\t\t\tledgerConnected: this.state.ledgerConnected,\r\n\t\t\t\t\tledgerStatus: this.state.ledgerStatus,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tlet validAddresses = [];\r\n\t\t\t\t\tfor (let value of _get(values, addressesPath)) {\r\n\t\t\t\t\t\tif (!_isNil(value)) {\r\n\t\t\t\t\t\t\tvalidAddresses.push(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// add addresses\r\n\t\t\t\t\taddAddresses(validAddresses, this.props.type);\r\n\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t/* \t[addressesPath]: Yup.array()\r\n\t\t\t\t\t\t.compact()\r\n\t\t\t\t\t\t.required('* You must add an Address'), */\r\n\t\t\t\t})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t{values.ledgerConnected ? (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<GenerateAddressTable\r\n\t\t\t\t\t\t\t\t\ttitle={getTitle(networkProps)[type]}\r\n\t\t\t\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\t\t\t\tgeneratedAddressList={this.state.generatedAddressList}\r\n\t\t\t\t\t\t\t\t\tuserAddressList={userAddressList}\r\n\t\t\t\t\t\t\t\t\tgetNextFive={this.getNextFive}\r\n\t\t\t\t\t\t\t\t\tnewAddress={newLedgerAddress}\r\n\t\t\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t\t\t\terrors={errors}\r\n\t\t\t\t\t\t\t\t\ttouched={touched}\r\n\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t{!_isNil(values.ledgerStatus) ? (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<Typography>{values.ledgerStatus}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAre you using a Ledger Nano S device?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tIs the Factom app launched on your device?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tIs your device running the latest version?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tHave you closed the Ledger Live Manager?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAre you using&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={'https://www.google.com/chrome/'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tChrome\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>Are you running any adblockers?</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tHave you tried restarting your device?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSupport is available in the #ledger-nano-s channel on\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tour&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={'https://discord.gg/79kH2pp'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDiscord server\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.retryConnection}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tRetry\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Connecting to Ledger Nano S</b>\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={7} />\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t<b>Note:</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\tThe Ledger Nano S hardware wallet can be ordered\r\n\t\t\t\t\t\t\t\t\t\t\t\tfrom&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={'https://www.ledger.com/?r=1b0be6fa98ba'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tLedger's website\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t(affiliate link).\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\tTo function properly, the Factom application needs to be\r\n\t\t\t\t\t\t\t\t\t\t\t\tlaunched on the Ledger Nano S. You can install the\r\n\t\t\t\t\t\t\t\t\t\t\t\tapplication from the Ledger Live Manager.\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting || !this.state.ledgerConnected}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{this.hasAddressSelected(values) ? 'Add and Continue' : 'Skip'}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nLedgerForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '12px' },\r\n});\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithLedger,\r\n\twithWalletContext,\r\n\twithStyles(styles)\r\n);\r\n\r\nexport default enhancer(LedgerForm);\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport _isNil from 'lodash/isNil';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _get from 'lodash/get';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withSeed } from '../context/SeedContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport GenerateAddressTable from './GenerateAddressTable';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst addressesPath = 'addresses';\r\n\r\nconst getTitle = (networkProps) => {\r\n\treturn {\r\n\t\tfct: networkProps.factoidAbbreviationFull + ' Addresses',\r\n\t\tec: networkProps.ecAbbreviationFull + ' Addresses',\r\n\t};\r\n};\r\n\r\nclass SeedForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tgeneratedAddressList: [],\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getNextFive();\r\n\t}\r\n\r\n\tgetNextFive = async () => {\r\n\t\tconst generatedAddressList = await this.props.seedController.getSeedAddresses(\r\n\t\t\tthis.props.mnemonic,\r\n\t\t\tthis.state.generatedAddressList.length,\r\n\t\t\t5,\r\n\t\t\tthis.props.type\r\n\t\t);\r\n\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tgeneratedAddressList: [\r\n\t\t\t\t...prevState.generatedAddressList,\r\n\t\t\t\t...generatedAddressList,\r\n\t\t\t],\r\n\t\t}));\r\n\t};\r\n\r\n\thasAddressSelected = (formValues) =>\r\n\t\tObject.keys(formValues)\r\n\t\t\t.filter((key) => key.startsWith('checkbox'))\r\n\t\t\t.some((key) => formValues[key]);\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\ttype,\r\n\t\t\twalletController: { getAddresses, addAddresses, newSeedAddress },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tlet userAddressList = getAddresses(type);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\t[addressesPath]: [],\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tlet validAddresses = [];\r\n\t\t\t\t\tfor (let value of _get(values, addressesPath)) {\r\n\t\t\t\t\t\tif (!_isNil(value)) {\r\n\t\t\t\t\t\t\tvalidAddresses.push(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// add addresses\r\n\t\t\t\t\taddAddresses(validAddresses, this.props.type);\r\n\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<GenerateAddressTable\r\n\t\t\t\t\t\t\ttitle={getTitle(networkProps)[type]}\r\n\t\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\t\tgeneratedAddressList={this.state.generatedAddressList}\r\n\t\t\t\t\t\t\tuserAddressList={userAddressList}\r\n\t\t\t\t\t\t\tgetNextFive={this.getNextFive}\r\n\t\t\t\t\t\t\tnewAddress={newSeedAddress}\r\n\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t\terrors={errors}\r\n\t\t\t\t\t\t\ttouched={touched}\r\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{this.props.handleBack && (\r\n\t\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{this.hasAddressSelected(values) ? 'Add and Continue' : 'Skip'}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nSeedForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '12px' },\r\n});\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithSeed,\r\n\twithWalletContext,\r\n\twithStyles(styles)\r\n);\r\n\r\nexport default enhancer(SeedForm);\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport _get from 'lodash/get';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport factombip44 from 'factombip44/dist/factombip44';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst mnemonicPath = 'mnemonic';\r\n\r\nclass ImportSeedForm extends React.Component {\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\t[mnemonicPath]: '',\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\tthis.props.setMnemonic(_get(values, mnemonicPath).trim());\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[mnemonicPath]: Yup.string()\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\tmnemonicPath,\r\n\t\t\t\t\t\t\t'Invalid Seed Phrase',\r\n\t\t\t\t\t\t\tfactombip44.validMnemonic\r\n\t\t\t\t\t\t),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tstyle={{ width: '500px' }}\r\n\t\t\t\t\t\tautoComplete=\"nope\"\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t_get(errors, mnemonicPath) && _get(touched, mnemonicPath)\r\n\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tname={mnemonicPath}\r\n\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\r\n\t\t\t\t\t\t\t\tplaceholder={'Enter Seed Phrase'}\r\n\t\t\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\tname={mnemonicPath}\r\n\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>{msg}</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.props.setMnemonic(null);\r\n\t\t\t\t\t\t\t\t\tthis.props.handleBack();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<Field name={props.name}>\r\n\t\t\t{({ field }) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...field}\r\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\terror={props.error}\r\n\t\t\t\t\tautoFocus={props.autoFocus}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Field>\r\n\t);\r\n};\r\n\r\nImportSeedForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\twarningText: { color: 'red', fontSize: '15px' },\r\n\terrorText: { color: 'red' },\r\n});\r\n\r\nconst enhancer = _flowRight(withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(ImportSeedForm);\r\n","import React from 'react';\r\nimport ImportTypeForm from './ImportTypeForm';\r\nimport ImportFctForm from './ImportFctForm';\r\nimport ImportEcForm from './ImportEcForm';\r\nimport NewSeedForm from './NewSeedForm';\r\nimport LedgerForm from './LedgerForm';\r\nimport SeedForm from './SeedForm';\r\nimport ImportSeedForm from './ImportSeedForm';\r\n\r\nclass AddWalletStepContent extends React.Component {\r\n\tstate = { mnemonic: null };\r\n\r\n\tsetMnemonic = (mnemonic) => {\r\n\t\tthis.setState({ mnemonic });\r\n\t};\r\n\r\n\trender() {\r\n\t\tswitch (this.props.activeStep) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ImportTypeForm\r\n\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\timportType={this.props.importType}\r\n\t\t\t\t\t\tupdateImportType={this.props.updateImportType}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase 1:\r\n\t\t\t\tif (this.props.importType === 'fct') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ImportFctForm\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (this.props.importType === 'ec') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ImportEcForm\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (this.props.importType === 'new') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<NewSeedForm\r\n\t\t\t\t\t\t\tsetMnemonic={this.setMnemonic}\r\n\t\t\t\t\t\t\tmnemonic={this.state.mnemonic}\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (this.props.importType === 'importSeed') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ImportSeedForm\r\n\t\t\t\t\t\t\tsetMnemonic={this.setMnemonic}\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (this.props.importType === 'ledger') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<LedgerForm\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t\ttype=\"fct\"\r\n\t\t\t\t\t\t\tkey=\"fctLedgerForm\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.props.importType === 'new' ||\r\n\t\t\t\t\tthis.props.importType === 'importSeed'\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<SeedForm\r\n\t\t\t\t\t\t\tmnemonic={this.state.mnemonic}\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\ttype=\"fct\"\r\n\t\t\t\t\t\t\tkey=\"fctSeedForm\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t} /* else if (this.props.importType === 'ledger') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<LedgerForm\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t\ttype=\"ec\"\r\n\t\t\t\t\t\t\tkey=\"ecLedgerForm\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t} */\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.props.importType === 'new' ||\r\n\t\t\t\t\tthis.props.importType === 'importSeed'\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<SeedForm\r\n\t\t\t\t\t\t\tmnemonic={this.state.mnemonic}\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t\ttype=\"ec\"\r\n\t\t\t\t\t\t\tkey=\"ecSeedForm\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn 'Unknown step';\r\n\t\t}\r\n\t}\r\n}\r\nexport default AddWalletStepContent;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddWalletStepContent from './AddWalletStepContent';\r\nimport SectionHeader from '../vote/shared/SectionHeader.js';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withWalletContext } from '../context/WalletContext';\r\n\r\nconst getStandardSteps = () => {\r\n\treturn ['Import Method', 'Address details'];\r\n};\r\n\r\nconst getLedgerAddressSteps = (networkProps) => {\r\n\treturn [\r\n\t\t'Import Method',\r\n\t\tnetworkProps.factoidAbbreviationFull,\r\n\t\t//\tnetworkProps.ecAbbreviationFull,\r\n\t];\r\n};\r\n//this.props.networkController.networkProps.factoidAbbreviation\r\nconst getSeedAddressSteps = (networkProps) => {\r\n\treturn [\r\n\t\t'Import Method',\r\n\t\t'Seed Value',\r\n\t\tnetworkProps.factoidAbbreviationFull,\r\n\t\tnetworkProps.ecAbbreviationFull,\r\n\t];\r\n};\r\n\r\nconst stepMap = {\r\n\timportSeed: getSeedAddressSteps,\r\n\tnew: getSeedAddressSteps,\r\n\tledger: getLedgerAddressSteps,\r\n\tfct: getStandardSteps,\r\n\tec: getStandardSteps,\r\n};\r\n\r\nclass AddWalletStepper extends React.Component {\r\n\tinitialState = {\r\n\t\tactiveStep: 0,\r\n\t\timportType: 'fct',\r\n\t\tgetSteps: getStandardSteps,\r\n\t};\r\n\r\n\tstate = this.initialState;\r\n\r\n\tupdateImportType = (importType) => {\r\n\t\tthis.setState({\r\n\t\t\timportType: importType,\r\n\t\t\tgetSteps: stepMap[importType],\r\n\t\t});\r\n\t};\r\n\r\n\thandleNext = () => {\r\n\t\tthis.setState((state) => ({\r\n\t\t\tactiveStep: state.activeStep + 1,\r\n\t\t}));\r\n\t};\r\n\r\n\thandleBack = () => {\r\n\t\tthis.setState((state) => ({\r\n\t\t\tactiveStep: state.activeStep - 1,\r\n\t\t}));\r\n\t};\r\n\r\n\thandleReset = () => {\r\n\t\tthis.setState(this.initialState);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\thandleCloseText,\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t\twalletController: { isWalletEmpty },\r\n\t\t} = this.props;\r\n\r\n\t\tconst { activeStep } = this.state;\r\n\r\n\t\tconst steps = this.state.getSteps(networkProps);\r\n\t\tconst sectionHeaderText =\r\n\t\t\tnetworkProps.network === 'testnet'\r\n\t\t\t\t? 'Add Testnet Address'\r\n\t\t\t\t: 'Add Address';\r\n\r\n\t\treturn (\r\n\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t<SectionHeader text={sectionHeaderText} id=\"modal-title\" />\r\n\t\t\t\t<Stepper activeStep={activeStep} className={classes.stepper}>\r\n\t\t\t\t\t{steps.map((label, index) => {\r\n\t\t\t\t\t\tconst props = {};\r\n\t\t\t\t\t\tconst labelProps = {};\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Step key={label} {...props}>\r\n\t\t\t\t\t\t\t\t<StepLabel {...labelProps}>{label}</StepLabel>\r\n\t\t\t\t\t\t\t</Step>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Stepper>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t{activeStep === steps.length ? (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t{networkProps.network === 'testnet' ? (\r\n\t\t\t\t\t\t\t\t<TestnetFinalStep\r\n\t\t\t\t\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\t\t\t\t\tisWalletEmpty={isWalletEmpty()}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<MainnetFinalStep\r\n\t\t\t\t\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\t\t\t\t\tisWalletEmpty={isWalletEmpty()}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{!isWalletEmpty() ? (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={this.handleReset}>Add Another</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.handleClose}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{handleCloseText}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" onClick={this.handleReset}>\r\n\t\t\t\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<AddWalletStepContent\r\n\t\t\t\t\t\t\t\tactiveStep={activeStep}\r\n\t\t\t\t\t\t\t\tupdateImportType={this.updateImportType}\r\n\t\t\t\t\t\t\t\thandleNext={this.handleNext}\r\n\t\t\t\t\t\t\t\thandleBack={this.handleBack}\r\n\t\t\t\t\t\t\t\timportType={this.state.importType}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</Paper>\r\n\t\t);\r\n\t}\r\n}\r\nAddWalletStepper.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst MainnetFinalStep = ({ classes, isWalletEmpty }) => {\r\n\tif (isWalletEmpty) {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\r\n\t\t\t\tNo Addresses have been added.\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\r\n\t\t\t\tYou have finished adding an address.\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst TestnetFinalStep = ({ classes, isWalletEmpty }) => {\r\n\tif (isWalletEmpty) {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\r\n\t\t\t\tNo Addresses have been added.\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\r\n\t\t\t\t\tYou have finished adding a Testnet address.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Paper className={classes.testnetWarning}>\r\n\t\t\t\t\t<Typography className={classes.warningText}>\r\n\t\t\t\t\t\t<WarningIcon className={classes.warningIcon} />\r\n\t\t\t\t\t\t&nbsp;&nbsp;Use these addresses for Testnet ONLY. Do not send real\r\n\t\t\t\t\t\tFactoids to these addresses, or you run the risk of losing them.\r\n\t\t\t\t\t\tPlease read all notices.\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\tYou can use the{' '}\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\thref={'https://faucet.factoid.org/'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFactom Testnet Faucet{' '}\r\n\t\t\t\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\r\n\t\t\t\t\t\t</a>{' '}\r\n\t\t\t\t\t\tto receive Testoids.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tstepper: {\r\n\t\tbackgroundColor: '#eeeeee',\r\n\t},\r\n\tpaper: {\r\n\t\tminWidth: 565,\r\n\t\tpadding: theme.spacing.unit * 4,\r\n\t\tminHeight: 300,\r\n\t},\r\n\ttestnetWarning: {\r\n\t\tborderColor: '#ffa000',\r\n\t\tborderStyle: 'solid',\r\n\t\tpadding: 5,\r\n\t\twidth: 415,\r\n\t},\r\n\twarningIcon: {\r\n\t\tcolor: '#ffa000',\r\n\t\tdisplay: 'inline',\r\n\t\tposition: 'relative',\r\n\t\ttop: '6px',\r\n\t},\r\n\twarningText: {\r\n\t\tdisplay: 'inline',\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(AddWalletStepper);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddWalletStepper from './AddWalletStepper';\r\n\r\nclass AddWalletModal extends React.Component {\r\n\tstate = {\r\n\t\topen: false,\r\n\t};\r\n\r\n\thandleOpen = () => {\r\n\t\tthis.setState({ open: true });\r\n\t};\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({ open: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.center}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={this.handleOpen}\r\n\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t>\r\n\t\t\t\t\tAdd Address\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\taria-labelledby=\"modal-title\"\r\n\t\t\t\t\topen={this.state.open}\r\n\t\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={classes.modalContent}>\r\n\t\t\t\t\t\t<AddWalletStepper\r\n\t\t\t\t\t\t\thandleClose={this.handleClose}\r\n\t\t\t\t\t\t\thandleCloseText=\"Exit\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nAddWalletModal.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tmodalContent: {\r\n\t\tposition: 'absolute',\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\ttop: `50%`,\r\n\t\tleft: `50%`,\r\n\t\ttransform: `translate(-50%, -50%)`,\r\n\t\tminWidth: '490px',\r\n\t},\r\n\tbutton: {\r\n\t\twidth: '275px;',\r\n\t\theight: '50px',\r\n\t\tmarginBottom: '15px',\r\n\t},\r\n\tcenter: {\r\n\t\tmargin: '0 auto',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(AddWalletModal);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isNil from 'lodash/isNil';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AddWalletModal from '../addWallet/AddWalletModal.js';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormatBalance from './shared/BalanceFormatter.js';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport _isEmpty from 'lodash/isEmpty';\r\n\r\nclass Sidebar extends Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: {\r\n\t\t\t\tgetEntryCreditAddresses,\r\n\t\t\t\tgetFactoidAddresses,\r\n\t\t\t\tactiveAddressIndex_o,\r\n\t\t\t\tselectAddress,\r\n\t\t\t\tupdateBalances,\r\n\t\t\t},\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tconst ecAddresses = getEntryCreditAddresses();\r\n\t\tconst factoidAddresses = getFactoidAddresses();\r\n\r\n\t\tconst listfactoidAddresses = factoidAddresses.map(function(wallet, index) {\r\n\t\t\tconst expanded =\r\n\t\t\t\tactiveAddressIndex_o.index === index &&\r\n\t\t\t\tactiveAddressIndex_o.type === 'fct';\r\n\t\t\tconst nicknameStyle = expanded ? { fontWeight: 500 } : {};\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<ExpansionPanel\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\texpanded={expanded}\r\n\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\tawait selectAddress(index, 'fct');\r\n\t\t\t\t\t\tupdateBalances();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={expanded ? classes.expanded : ''}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ExpansionPanelSummary>\r\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Typography className={classes.break} style={nicknameStyle}>\r\n\t\t\t\t\t\t\t\t\t{wallet.nickname}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{!_isNil(wallet.balance) && (\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.break}>\r\n\t\t\t\t\t\t\t\t\t\t<FormatBalance balance={wallet.balance} type=\"fct\" />\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t</ExpansionPanel>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tconst listecAddresses = ecAddresses.map(function(wallet, index) {\r\n\t\t\tconst expanded =\r\n\t\t\t\tactiveAddressIndex_o.index === index &&\r\n\t\t\t\tactiveAddressIndex_o.type === 'ec';\r\n\r\n\t\t\tconst nicknameStyle = expanded ? { fontWeight: 500 } : {};\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<ExpansionPanel\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\texpanded={expanded}\r\n\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\tawait selectAddress(index, 'ec');\r\n\t\t\t\t\t\tupdateBalances();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={expanded ? classes.expanded : ''}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ExpansionPanelSummary>\r\n\t\t\t\t\t\t<Grid container item xs={12} justify=\"space-between\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Typography className={classes.break} style={nicknameStyle}>\r\n\t\t\t\t\t\t\t\t\t{wallet.nickname}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{!_isNil(wallet.balance) && (\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.break}>\r\n\t\t\t\t\t\t\t\t\t\t<FormatBalance balance={wallet.balance} type=\"ec\" />\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t</ExpansionPanel>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{!_isEmpty(factoidAddresses) && (\r\n\t\t\t\t\t<Paper className={classes.noPadding}>\r\n\t\t\t\t\t\t<List className={classes.addressList}>\r\n\t\t\t\t\t\t\t<ListItem className={classes.walletListHeader}>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tclassName={classes.addressHeading}\r\n\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{networkProps.factoidAbbreviationFull + ' Addresses'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t\t\t<ListItem disableGutters className={classes.walletList}>\r\n\t\t\t\t\t\t\t\t<div className={classes.listAddrRoot}>\r\n\t\t\t\t\t\t\t\t\t{listfactoidAddresses}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t)}\r\n\t\t\t\t{!_isEmpty(ecAddresses) && (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t{!_isEmpty(factoidAddresses) && <br />}\r\n\t\t\t\t\t\t<Paper className={classes.noPadding}>\r\n\t\t\t\t\t\t\t<List className={classes.addressList}>\r\n\t\t\t\t\t\t\t\t<ListItem className={classes.walletListHeader}>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.addressHeading}\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{networkProps.ecAbbreviationFull + ' Addresses'}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t<ListItem disableGutters className={classes.walletList}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.listAddrRoot}>{listecAddresses}</div>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t\t<br />\r\n\t\t\t\t<div className={classes.flex}>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<AddWalletModal />\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nSidebar.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tnoPadding: {\r\n\t\tpadding: '0px',\r\n\t},\r\n\r\n\tbreak: {\r\n\t\twordWrap: 'break-word',\r\n\t},\r\n\texpanded: {\r\n\t\tbackgroundColor: 'aliceblue',\r\n\t},\r\n\tlistAddrRoot: {\r\n\t\twidth: '100%',\r\n\t\tposition: 'relative',\r\n\t\toverflow: 'auto',\r\n\t\tmaxHeight: 270,\r\n\t},\r\n\r\n\taddressHeading: {\r\n\t\tfontWeight: 500,\r\n\t},\r\n\tflex: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\twalletList: {\r\n\t\tpadding: '6px',\r\n\t},\r\n\twalletListHeader: {\r\n\t\tpaddingTop: '5px',\r\n\t\tpaddingBottom: '5px',\r\n\t},\r\n\taddressList: {\r\n\t\tpaddingBottom: '0px',\r\n\t\tbackgroundColor: '#ddd',\r\n\t\tborderRadius: '4px',\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(Sidebar);\r\n","import React from 'react';\r\n\r\nexport const SVGLogo = ({ alt, className, onClick, src }) => {\r\n\treturn <img alt={alt} className={className} onClick={onClick} src={src} />;\r\n};\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isNil from 'lodash/isNil';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport FormatBalance from './BalanceFormatter.js';\r\nimport { withWalletContext } from '../../context/WalletContext';\r\nimport { withLedger } from '../../context/LedgerContext';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport LedgerLogo from '../../component/logo/ledgerLogo.svg';\r\nimport { SVGLogo } from '../../component/logo/SVGLogo';\r\n\r\nconst AddressInfoHeader = (props) => {\r\n\tconst {\r\n\t\tclasses,\r\n\t\twalletController: { getActiveAddress, activeAddressIndex_o },\r\n\t\tledgerController: { checkAddress },\r\n\t} = props;\r\n\r\n\tconst activeAddress_o = getActiveAddress();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Paper elevation={2} className={classes.paper}>\r\n\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t<i>Nickname:</i>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t{activeAddress_o.nickname}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t<i>Address:</i>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t{activeAddress_o.address}\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<CopyToClipboard text={activeAddress_o.address}>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Copy\" className={classes.pointer}>\r\n\t\t\t\t\t\t\t\t\t<SvgIcon fontSize=\"inherit\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t<path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" />\r\n\t\t\t\t\t\t\t\t\t</SvgIcon>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</CopyToClipboard>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{activeAddress_o.importType === 'ledger' && (\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t<i>Import Type:</i>\r\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Ledger Nano S\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{activeAddress_o.importType === 'seed' && (\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t<i>Import Type:</i>\r\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Seed Phrase\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{activeAddress_o.importType === 'standard' && (\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t<i>Import Type:</i>\r\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Public Address\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{!_isNil(activeAddress_o.balance) && (\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t<i>Balance:</i>\r\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t<FormatBalance\r\n\t\t\t\t\t\t\t\t\tbalance={activeAddress_o.balance}\r\n\t\t\t\t\t\t\t\t\ttype={activeAddressIndex_o.type}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t{activeAddress_o.importType === 'ledger' && (\r\n\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\ttitle=\"Verify Ledger Nano S Address\"\r\n\t\t\t\t\t\t\t\tclassName={classes.pointer}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<SVGLogo\r\n\t\t\t\t\t\t\t\t\tclassName={classes.logo}\r\n\t\t\t\t\t\t\t\t\tsrc={LedgerLogo}\r\n\t\t\t\t\t\t\t\t\talt=\"Ledger Logo\"\r\n\t\t\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\t\t\tawait checkAddress(\r\n\t\t\t\t\t\t\t\t\t\t\tactiveAddress_o,\r\n\t\t\t\t\t\t\t\t\t\t\tactiveAddressIndex_o.type\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n};\r\nconst styles = (theme) => ({\r\n\troot: { textAlign: 'left' },\r\n\tpaper: { backgroundColor: 'aliceblue', padding: '16px', marginBottom: '3px' },\r\n\tpointer: {\r\n\t\tcursor: 'pointer',\r\n\t},\r\n\tlogo: { height: 20 },\r\n});\r\n\r\nconst enhancer = _flowRight(withWalletContext, withLedger, withStyles(styles));\r\n\r\nexport default enhancer(AddressInfoHeader);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SendTransactionPreview = (props) => {\r\n\tconst { factoidAmount, classes, networkProps, sendFactoidFee } = props;\r\n\r\n\t// total send amount\r\n\tconst totalFactoidAmount = factoidAmount + sendFactoidFee;\r\n\r\n\t// format output\r\n\tconst transferFactoidAmountText = factoidAmount.toLocaleString(undefined, {\r\n\t\tmaximumFractionDigits: 8,\r\n\t});\r\n\r\n\tconst totalFactoidAmountText =\r\n\t\ttotalFactoidAmount.toLocaleString(undefined, {\r\n\t\t\tmaximumFractionDigits: 8,\r\n\t\t}) +\r\n\t\t' ' +\r\n\t\tnetworkProps.factoidAbbreviation;\r\n\r\n\tconst feeFactoidAmountText =\r\n\t\tsendFactoidFee.toLocaleString(undefined, {\r\n\t\t\tmaximumFractionDigits: 8,\r\n\t\t}) +\r\n\t\t' ' +\r\n\t\tnetworkProps.factoidAbbreviation;\r\n\r\n\treturn (\r\n\t\t<Paper className={classes.root} elevation={2}>\r\n\t\t\t<div>Transaction Preview</div>\r\n\t\t\t<br />\r\n\t\t\t<span className={classes.transferFactoidAmountText}>\r\n\t\t\t\t{transferFactoidAmountText}\r\n\t\t\t</span>\r\n\t\t\t<span className={classes.transferFactoidUnitText}>\r\n\t\t\t\t{' ' + networkProps.factoidAbbreviation}\r\n\t\t\t</span>\r\n\t\t\t<hr className={classes.divider} />\r\n\t\t\t<div className={classes.detail}>\r\n\t\t\t\t<div>Total Amount:</div>\r\n\t\t\t\t<div className={classes.factoidAmountSmallText}>\r\n\t\t\t\t\t{totalFactoidAmountText}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.detail}>\r\n\t\t\t\t<div>Network Fee:</div>\r\n\t\t\t\t<div className={classes.factoidAmountSmallText}>\r\n\t\t\t\t\t{feeFactoidAmountText}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Paper>\r\n\t);\r\n};\r\nSendTransactionPreview.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\nconst styles = {\r\n\troot: {\r\n\t\twidth: '75%',\r\n\t\tmargin: '0 auto',\r\n\t\tpaddingTop: '26px',\r\n\t\tmarginTop: '39px',\r\n\t\theight: '194px',\r\n\t\tborderRadius: '10px',\r\n\t\tbackgroundColor: '#eef1f4',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\ttransferFactoidAmountText: {\r\n\t\tfontSize: '50px',\r\n\t\tcolor: '#007eff',\r\n\t},\r\n\ttransferFactoidUnitText: {\r\n\t\twidth: '55px',\r\n\t\theight: '24px',\r\n\t\tfontSize: '20px',\r\n\t\tcolor: '#007eff',\r\n\t},\r\n\tfactoidAmountSmallText: {\r\n\t\tcolor: '#001830',\r\n\t\tpaddingTop: '7px',\r\n\t},\r\n\tdetail: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tpaddingLeft: '65px',\r\n\t\tpaddingRight: '65px',\r\n\t},\r\n\tdivider: {\r\n\t\twidth: '50%',\r\n\t\topacity: 0.15,\r\n\t\tborder: 'solid 1px #103152',\r\n\t},\r\n};\r\n\r\nconst enhancer = _flowRight(withStyles(styles));\r\n\r\nexport default enhancer(SendTransactionPreview);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isNil from 'lodash/isNil';\r\nimport _get from 'lodash/get';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withFactomCli } from '../context/FactomCliContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CheckCircle from '@material-ui/icons/CheckCircleOutlined';\r\nimport AddressInfoHeader from './shared/AddressInfoHeader';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withSeed } from '../context/SeedContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport { withLedger } from '../context/LedgerContext';\r\nimport { isValidPublicFctAddress } from 'factom/dist/factom';\r\nimport SendTransactionPreview from './SendTransactionPreview';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst sendFactoidAmountPath = 'sendFactoidAmount';\r\nconst recipientAddressPath = 'recipientAddress';\r\nconst myFctWalletAnchorElPath = 'myFctWalletAnchorEl';\r\nconst privateKeyPath = 'privateKey';\r\nconst seedPath = 'seed';\r\nconst walletImportTypePath = 'walletImportType';\r\n\r\nconst FACTOSHI_MULTIPLIER = 0.00000001;\r\nconst FACTOID_MULTIPLIER = 100000000;\r\nconst FCT_ADDRESS_LENGTH = 52;\r\n\r\nclass SendFactoidForm extends Component {\r\n\tstate = { sendFactoidFee: null };\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst sendFactoidFee = await this.props.walletController.getFactoidFee();\r\n\t\tthis.setState({ sendFactoidFee });\r\n\t}\r\n\r\n\tgetMaxFCT(balance, fee) {\r\n\t\tconst maxFactoids = balance * FACTOSHI_MULTIPLIER - fee;\r\n\t\tif (maxFactoids < 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn maxFactoids;\r\n\t}\r\n\r\n\tverifyKey = (privateKey) => {\r\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\r\n\r\n\t\treturn this.props.walletController.verifyKey(privateKey, activeAddress_o);\r\n\t};\r\n\r\n\tverifySeed = (seed) => {\r\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\r\n\r\n\t\treturn this.props.seedController.verifySeed(seed, activeAddress_o);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tfactomCliController: { factomCli },\r\n\t\t\twalletController: {\r\n\t\t\t\tgetFactoidAddresses,\r\n\t\t\t\tgetActiveAddress,\r\n\t\t\t\tupdateBalances,\r\n\t\t\t\tactiveAddressIndex_o,\r\n\t\t\t\taddAddressTransaction,\r\n\t\t\t},\r\n\t\t\tledgerController: { signTransaction },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t\tseedController: { signWithSeed },\r\n\t\t} = this.props;\r\n\r\n\t\tconst factoidAddresses = getFactoidAddresses();\r\n\t\tconst activeAddress_o = getActiveAddress();\r\n\r\n\t\tconst maxAmount = this.getMaxFCT(\r\n\t\t\tactiveAddress_o.balance,\r\n\t\t\tthis.state.sendFactoidFee\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tsendFactoidAmount: '',\r\n\t\t\t\t\trecipientAddress: '',\r\n\t\t\t\t\tmyFctWalletAnchorEl: null,\r\n\t\t\t\t\t[privateKeyPath]: '',\r\n\t\t\t\t\t[seedPath]: '',\r\n\t\t\t\t\t[walletImportTypePath]: activeAddress_o.importType,\r\n\t\t\t\t\ttransactionID: null,\r\n\t\t\t\t\tledgerStatus: null,\r\n\t\t\t\t\ttransactionError: null,\r\n\t\t\t\t\taddressToReinitialize: activeAddress_o.address,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tsendFactoidAmount,\r\n\t\t\t\t\t\trecipientAddress,\r\n\t\t\t\t\t\tprivateKey,\r\n\t\t\t\t\t\tseed,\r\n\t\t\t\t\t} = values;\r\n\t\t\t\t\tlet transaction = {};\r\n\t\t\t\t\tconst importType = _get(values, walletImportTypePath);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (importType === 'standard') {\r\n\t\t\t\t\t\t\ttransaction = await factomCli.createFactoidTransaction(\r\n\t\t\t\t\t\t\t\tprivateKey,\r\n\t\t\t\t\t\t\t\trecipientAddress,\r\n\t\t\t\t\t\t\t\tMath.round(FACTOID_MULTIPLIER * sendFactoidAmount)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else if (importType === 'seed') {\r\n\t\t\t\t\t\t\tconst mnemonic = seed.trim();\r\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\r\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\r\n\t\t\t\t\t\t\tconst amount = Math.round(sendFactoidAmount * FACTOID_MULTIPLIER);\r\n\t\t\t\t\t\t\tconst type = 'sendFCT';\r\n\r\n\t\t\t\t\t\t\tconst seedTrans_o = {\r\n\t\t\t\t\t\t\t\tmnemonic,\r\n\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\ttoAddr,\r\n\t\t\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\ttransaction = await signWithSeed(seedTrans_o);\r\n\t\t\t\t\t\t} else if (importType === 'ledger') {\r\n\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t'ledgerStatus',\r\n\t\t\t\t\t\t\t\t'Connecting to Ledger Nano S'\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst ledgerConnected = await this.props.ledgerController.isLedgerConnected();\r\n\r\n\t\t\t\t\t\t\tif (ledgerConnected) {\r\n\t\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t\t'ledgerStatus',\r\n\t\t\t\t\t\t\t\t\t'Waiting 30s for Confirmation'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tactions.resetForm();\r\n\t\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t\t'transactionError',\r\n\t\t\t\t\t\t\t\t\t'Ledger Nano S Not Found. Please connect your Ledger Nano S and try again.'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst fromAddr = activeAddress_o.address;\r\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\r\n\t\t\t\t\t\t\tconst amount = Math.round(sendFactoidAmount * FACTOID_MULTIPLIER);\r\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\r\n\r\n\t\t\t\t\t\t\tconst ledgerTrans_o = {\r\n\t\t\t\t\t\t\t\tfromAddr,\r\n\t\t\t\t\t\t\t\ttoAddr,\r\n\t\t\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\ttransaction = await signTransaction(ledgerTrans_o);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst txId = await factomCli.sendTransaction(transaction);\r\n\t\t\t\t\t\tawait addAddressTransaction(activeAddressIndex_o, txId);\r\n\r\n\t\t\t\t\t\tactions.setFieldValue('transactionID', txId);\r\n\t\t\t\t\t\tupdateBalances();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\tactions.resetForm();\r\n\r\n\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t'transactionError',\r\n\t\t\t\t\t\t\t'An error occured. Please try again.'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[recipientAddressPath]: Yup.string()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\trecipientAddressPath,\r\n\t\t\t\t\t\t\t'Invalid Address',\r\n\t\t\t\t\t\t\tisValidPublicFctAddress\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t[sendFactoidAmountPath]: Yup.number()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.positive('Must be a positive number')\r\n\t\t\t\t\t\t.max(maxAmount, 'Insufficient Funds'),\r\n\t\t\t\t\t[walletImportTypePath]: Yup.string(),\r\n\t\t\t\t\t[privateKeyPath]: Yup.string().when(walletImportTypePath, {\r\n\t\t\t\t\t\tis: 'standard',\r\n\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t.test(privateKeyPath, 'Invalid Key', this.verifyKey),\r\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t[seedPath]: Yup.string().when(walletImportTypePath, {\r\n\t\t\t\t\t\tis: 'seed',\r\n\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t.test(seedPath, 'Invalid Seed Phrase', this.verifySeed),\r\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\thandleReset,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tautoComplete=\"nope\"\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<AddressInfoHeader />\r\n\t\t\t\t\t\t<Field name={recipientAddressPath}>\r\n\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors[recipientAddressPath] &&\r\n\t\t\t\t\t\t\t\t\t\ttouched[recipientAddressPath]\r\n\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t'Recipient ' + networkProps.factoidAbbreviation + ' address'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t'Enter ' + networkProps.factoidAbbreviationFull + ' Address'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\t\t\t\t\tmaxLength: FCT_ADDRESS_LENGTH,\r\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={recipientAddressPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<FactoidAddressMenu\r\n\t\t\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\t\t\tfactoidAddresses={factoidAddresses}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"caption\"\r\n\t\t\t\t\t\t\t\t\taria-owns={\r\n\t\t\t\t\t\t\t\t\t\tvalues[myFctWalletAnchorElPath] ? 'simple-menu' : null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\tmyFctWalletAnchorElPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\tevent.currentTarget\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.pointer}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSend to one of my addresses\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Field name={sendFactoidAmountPath}>\r\n\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors[sendFactoidAmountPath] &&\r\n\t\t\t\t\t\t\t\t\t\ttouched[sendFactoidAmountPath]\r\n\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t'Enter Amount (' + networkProps.factoidAbbreviation + ')'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Amount\"\r\n\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={sendFactoidAmountPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"caption\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(sendFactoidAmountPath, maxAmount);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.pointer}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUse Max\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'standard' && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Field name={privateKeyPath}>\r\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\terrors[privateKeyPath] && touched[privateKeyPath]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Private Key for ' + activeAddress_o.nickname\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Private Key\"\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: FCT_ADDRESS_LENGTH,\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={privateKeyPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'seed' && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Field name={seedPath}>\r\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, seedPath) && _get(touched, seedPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Seed Phrase for ' + activeAddress_o.nickname\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={seedPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{values.sendFactoidAmount ? (\r\n\t\t\t\t\t\t\t<SendTransactionPreview\r\n\t\t\t\t\t\t\t\tnetworkProps={networkProps}\r\n\t\t\t\t\t\t\t\tfactoidAmount={values.sendFactoidAmount}\r\n\t\t\t\t\t\t\t\tsendFactoidFee={this.state.sendFactoidFee}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{!_isNil(values.transactionError) && (\r\n\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\r\n\t\t\t\t\t\t\t\t{values.transactionError}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{isSubmitting ? (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t{values.transactionID !== null ? (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\r\n\t\t\t\t\t\t\t\t\t\t\t<CheckCircle\r\n\t\t\t\t\t\t\t\t\t\t\t\tnativeColor=\"#6fbf73\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.successIcon}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Transaction ID:</b> {values.transactionID}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\tThis transaction will be visible{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Open Factom Explorer\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'/transaction?txid=' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues.transactionID\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\there{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\tin 10-15 minutes, after being included in the next\r\n\t\t\t\t\t\t\t\t\t\t\t\tFactom block currently being processed by the\r\n\t\t\t\t\t\t\t\t\t\t\t\tblockchain. Funds are available for use immediately.\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"outline\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReset}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tNew Transaction\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={7} />\r\n\t\t\t\t\t\t\t\t\t\t{values.ledgerStatus}\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.sendButton}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{'Send ' + networkProps.factoidAbbreviationFull + 's'}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tPlease verify all details are correct before hitting send.\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\tNobody can reverse mistaken transactions.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction FactoidAddressMenu(props) {\r\n\tconst { values, setFieldValue, factoidAddresses } = props;\r\n\r\n\tconst addressList = factoidAddresses.map((address_o, index) => (\r\n\t\t<MenuItem\r\n\t\t\tkey={index}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\r\n\t\t\t\tsetFieldValue(recipientAddressPath, address_o.address);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{address_o.nickname}\r\n\t\t</MenuItem>\r\n\t));\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tid=\"simple-menu\"\r\n\t\t\tanchorEl={values[myFctWalletAnchorElPath]}\r\n\t\t\topen={Boolean(values[myFctWalletAnchorElPath])}\r\n\t\t\tonClose={() => {\r\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{addressList}\r\n\t\t</Menu>\r\n\t);\r\n}\r\n\r\nSendFactoidForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = {\r\n\tsendButton: {\r\n\t\twidth: '50%',\r\n\t},\r\n\terrorText: { color: 'red', fontSize: '12px', textAlign: 'left' },\r\n\ttransactionErrorText: { color: 'red', fontSize: '16px' },\r\n\tpointer: {\r\n\t\tcursor: 'pointer',\r\n\t},\r\n\ttransaction: {\r\n\t\tborderColor: '#6fbf73',\r\n\t\tborderStyle: 'solid',\r\n\r\n\t\tpaddingTop: 3,\r\n\t\tpaddingBottom: 8,\r\n\t},\r\n\tsuccessIcon: {\r\n\t\tposition: 'relative',\r\n\t\ttop: '5px',\r\n\t},\r\n};\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithLedger,\r\n\twithSeed,\r\n\twithWalletContext,\r\n\twithFactomCli,\r\n\twithStyles(styles)\r\n);\r\n\r\nexport default enhancer(SendFactoidForm);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ConvertTransactionPreview = (props) => {\r\n\tconst {\r\n\t\tecAmount,\r\n\t\tfactoidAmount,\r\n\t\tclasses,\r\n\t\tnetworkProps,\r\n\t\tsendFactoidFee,\r\n\t} = props;\r\n\r\n\t// total send amount\r\n\tconst totalFactoidAmount = factoidAmount + sendFactoidFee;\r\n\r\n\t// format output\r\n\tconst convertECAmountText = ecAmount.toLocaleString(undefined, {\r\n\t\tmaximumFractionDigits: 8,\r\n\t});\r\n\r\n\tconst totalFactoidCostText =\r\n\t\ttotalFactoidAmount.toLocaleString(undefined, {\r\n\t\t\tmaximumFractionDigits: 8,\r\n\t\t}) +\r\n\t\t' ' +\r\n\t\tnetworkProps.factoidAbbreviation;\r\n\r\n\tconst feeFactoidAmountText =\r\n\t\tsendFactoidFee.toLocaleString(undefined, {\r\n\t\t\tmaximumFractionDigits: 8,\r\n\t\t}) +\r\n\t\t' ' +\r\n\t\tnetworkProps.factoidAbbreviation;\r\n\r\n\treturn (\r\n\t\t<Paper className={classes.root} elevation={2}>\r\n\t\t\t<div>Transaction Preview</div>\r\n\t\t\t<br />\r\n\t\t\t<span className={classes.convertECAmountText}>{convertECAmountText}</span>\r\n\t\t\t<span className={classes.ecUnitText}>\r\n\t\t\t\t{' ' + networkProps.ecAbbreviation}\r\n\t\t\t</span>\r\n\t\t\t<hr className={classes.divider} />\r\n\t\t\t<div className={classes.detail}>\r\n\t\t\t\t<div>Total Cost:</div>\r\n\t\t\t\t<div className={classes.factoidCostSmallText}>\r\n\t\t\t\t\t{totalFactoidCostText}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.detail}>\r\n\t\t\t\t<div>Network Fee:</div>\r\n\t\t\t\t<div className={classes.factoidCostSmallText}>\r\n\t\t\t\t\t{feeFactoidAmountText}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Paper>\r\n\t);\r\n};\r\nConvertTransactionPreview.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\nconst styles = {\r\n\troot: {\r\n\t\twidth: '75%',\r\n\t\tmargin: '0 auto',\r\n\t\tpaddingTop: '26px',\r\n\t\tmarginTop: '39px',\r\n\t\theight: '194px',\r\n\t\tborderRadius: '10px',\r\n\t\tbackgroundColor: '#eef1f4',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tconvertECAmountText: {\r\n\t\tfontSize: '50px',\r\n\t\tcolor: '#007eff',\r\n\t},\r\n\tecUnitText: {\r\n\t\twidth: '55px',\r\n\t\theight: '24px',\r\n\t\tfontSize: '20px',\r\n\t\tcolor: '#007eff',\r\n\t},\r\n\tfactoidCostSmallText: {\r\n\t\tcolor: '#001830',\r\n\t\tpaddingTop: '7px',\r\n\t},\r\n\tdetail: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tpaddingLeft: '65px',\r\n\t\tpaddingRight: '65px',\r\n\t},\r\n\tdivider: {\r\n\t\twidth: '50%',\r\n\t\topacity: 0.15,\r\n\t\tborder: 'solid 1px #103152',\r\n\t},\r\n};\r\n\r\nconst enhancer = _flowRight(withStyles(styles));\r\n\r\nexport default enhancer(ConvertTransactionPreview);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport _get from 'lodash/get';\r\nimport _isNil from 'lodash/isNil';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withFactomCli } from '../context/FactomCliContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddressInfoHeader from './shared/AddressInfoHeader';\r\nimport { withLedger } from '../context/LedgerContext';\r\nimport { withSeed } from '../context/SeedContext';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport { isValidPublicEcAddress } from 'factom/dist/factom';\r\nimport ConvertTransactionPreview from './ConvertTransactionPreview';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CheckCircle from '@material-ui/icons/CheckCircleOutlined';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst entryCreditAmountPath = 'entryCreditAmount';\r\nconst recipientAddressPath = 'recipientAddress';\r\nconst myFctWalletAnchorElPath = 'myFctWalletAnchorEl';\r\nconst privateKeyPath = 'privateKey';\r\nconst walletImportTypePath = 'walletImportType';\r\nconst seedPath = 'seed';\r\n\r\nconst FACTOSHI_MULTIPLIER = 0.00000001;\r\nconst EC_ADDRESS_LENGTH = 52;\r\n\r\nclass ConvertECForm extends Component {\r\n\tstate = { sendFactoshiFee: null, ecRate: null };\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst sendFactoshiFee = await this.props.walletController.getFactoshiFee();\r\n\t\tconst ecRate = await this.props.walletController.getEntryCreditRate();\r\n\t\tthis.setState({ sendFactoshiFee, ecRate });\r\n\t}\r\n\r\n\tgetMaxEC(balance, fee) {\r\n\t\tconst maxFactoshis = balance - fee;\r\n\t\tlet maxEntryCredits = maxFactoshis / this.state.ecRate;\r\n\t\tif (maxEntryCredits < 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn maxEntryCredits;\r\n\t}\r\n\r\n\tverifyKey = (privateKey) => {\r\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\r\n\r\n\t\treturn this.props.walletController.verifyKey(privateKey, activeAddress_o);\r\n\t};\r\n\r\n\tverifySeed = (seed) => {\r\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\r\n\r\n\t\treturn this.props.seedController.verifySeed(seed, activeAddress_o);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: {\r\n\t\t\t\tupdateBalances,\r\n\t\t\t\tgetEntryCreditAddresses,\r\n\t\t\t\tgetActiveAddress,\r\n\t\t\t\tactiveAddressIndex_o,\r\n\t\t\t\taddAddressTransaction,\r\n\t\t\t},\r\n\t\t\tledgerController: { signTransaction },\r\n\t\t\tfactomCliController: { factomCli },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t\tseedController: { signWithSeed },\r\n\t\t} = this.props;\r\n\r\n\t\tconst activeAddress_o = getActiveAddress();\r\n\t\tconst ecAddresses = getEntryCreditAddresses();\r\n\r\n\t\tconst maxAmount = this.getMaxEC(\r\n\t\t\tactiveAddress_o.balance,\r\n\t\t\tthis.state.sendFactoshiFee\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tentryCreditAmount: '',\r\n\t\t\t\t\trecipientAddress: '',\r\n\t\t\t\t\t[myFctWalletAnchorElPath]: null,\r\n\t\t\t\t\tprivateKey: '',\r\n\t\t\t\t\t[seedPath]: '',\r\n\t\t\t\t\t[walletImportTypePath]: activeAddress_o.importType,\r\n\t\t\t\t\ttransactionID: null,\r\n\t\t\t\t\tledgerStatus: null,\r\n\t\t\t\t\ttransactionError: null,\r\n\t\t\t\t\taddressToReinitialize: activeAddress_o.address,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tentryCreditAmount,\r\n\t\t\t\t\t\trecipientAddress,\r\n\t\t\t\t\t\tprivateKey,\r\n\t\t\t\t\t\tseed,\r\n\t\t\t\t\t} = values;\r\n\t\t\t\t\tlet transaction = {};\r\n\t\t\t\t\tconst importType = _get(values, walletImportTypePath);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (importType === 'standard') {\r\n\t\t\t\t\t\t\ttransaction = await factomCli.createEntryCreditPurchaseTransaction(\r\n\t\t\t\t\t\t\t\tprivateKey,\r\n\t\t\t\t\t\t\t\trecipientAddress,\r\n\t\t\t\t\t\t\t\tentryCreditAmount\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else if (importType === 'seed') {\r\n\t\t\t\t\t\t\tconst mnemonic = seed.trim();\r\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\r\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\r\n\t\t\t\t\t\t\tconst amount = entryCreditAmount;\r\n\t\t\t\t\t\t\tconst type = 'convertFCT';\r\n\r\n\t\t\t\t\t\t\tconst seedTrans_o = {\r\n\t\t\t\t\t\t\t\tmnemonic,\r\n\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\ttoAddr,\r\n\t\t\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\ttransaction = await signWithSeed(seedTrans_o);\r\n\t\t\t\t\t\t} else if (importType === 'ledger') {\r\n\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t'ledgerStatus',\r\n\t\t\t\t\t\t\t\t'Connecting to Ledger Nano S'\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst ledgerConnected = await this.props.ledgerController.isLedgerConnected();\r\n\r\n\t\t\t\t\t\t\tif (ledgerConnected) {\r\n\t\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t\t'ledgerStatus',\r\n\t\t\t\t\t\t\t\t\t'Waiting 30s for Confirmation'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tactions.resetForm();\r\n\t\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t\t'transactionError',\r\n\t\t\t\t\t\t\t\t\t'Ledger Nano S Not Found. Please connect your Ledger Nano S and try again.'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst fromAddr = activeAddress_o.address;\r\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\r\n\t\t\t\t\t\t\tconst amount = Math.round(this.state.ecRate * entryCreditAmount);\r\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\r\n\r\n\t\t\t\t\t\t\tconst ledgerTrans_o = {\r\n\t\t\t\t\t\t\t\tfromAddr,\r\n\t\t\t\t\t\t\t\ttoAddr,\r\n\t\t\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\ttransaction = await signTransaction(ledgerTrans_o);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst txId = await factomCli.sendTransaction(transaction);\r\n\t\t\t\t\t\tawait addAddressTransaction(activeAddressIndex_o, txId);\r\n\r\n\t\t\t\t\t\tactions.setFieldValue('transactionID', txId);\r\n\t\t\t\t\t\tupdateBalances();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\tactions.resetForm();\r\n\r\n\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t'transactionError',\r\n\t\t\t\t\t\t\t'An error occured. Please try again.'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[recipientAddressPath]: Yup.string()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\trecipientAddressPath,\r\n\t\t\t\t\t\t\t'Invalid Address',\r\n\t\t\t\t\t\t\tisValidPublicEcAddress\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t[entryCreditAmountPath]: Yup.number()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.positive('Must be a positive number')\r\n\t\t\t\t\t\t.max(maxAmount, 'Insufficient Funds'),\r\n\t\t\t\t\t[walletImportTypePath]: Yup.string(),\r\n\t\t\t\t\t[privateKeyPath]: Yup.string().when(walletImportTypePath, {\r\n\t\t\t\t\t\tis: 'standard',\r\n\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t.test(privateKeyPath, 'Invalid Key', this.verifyKey),\r\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t[seedPath]: Yup.string().when(walletImportTypePath, {\r\n\t\t\t\t\t\tis: 'seed',\r\n\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t.test(seedPath, 'Invalid Seed Phrase', this.verifySeed),\r\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\thandleReset,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tautoComplete=\"nope\"\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<AddressInfoHeader />\r\n\t\t\t\t\t\t<Field name={recipientAddressPath}>\r\n\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors[recipientAddressPath] &&\r\n\t\t\t\t\t\t\t\t\t\ttouched[recipientAddressPath]\r\n\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t'Recipient ' + networkProps.ecAbbreviation + ' address'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t'Enter ' + networkProps.ecAbbreviationFull + ' address'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\t\t\t\t\tmaxLength: EC_ADDRESS_LENGTH,\r\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={recipientAddressPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{!_isEmpty(ecAddresses) && (\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<ECAddressMenu\r\n\t\t\t\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\t\t\t\tecAddresses={ecAddresses}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"caption\"\r\n\t\t\t\t\t\t\t\t\t\taria-owns={\r\n\t\t\t\t\t\t\t\t\t\t\tvalues[myFctWalletAnchorElPath] ? 'simple-menu' : null\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyFctWalletAnchorElPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tevent.currentTarget\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.pointer}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSend to one of my addresses\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Field name={entryCreditAmountPath}>\r\n\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors[entryCreditAmountPath] &&\r\n\t\t\t\t\t\t\t\t\t\ttouched[entryCreditAmountPath]\r\n\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t'Enter Amount (' + networkProps.ecAbbreviation + ')'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Amount\"\r\n\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={entryCreditAmountPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'standard' && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Field name={privateKeyPath}>\r\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\terrors[privateKeyPath] && touched[privateKeyPath]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Private Key for ' + activeAddress_o.nickname\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Private Key\"\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: EC_ADDRESS_LENGTH,\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={privateKeyPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'seed' && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Field name={seedPath}>\r\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, seedPath) && _get(touched, seedPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Seed Phrase for ' + activeAddress_o.nickname\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={seedPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{_get(values, entryCreditAmountPath) ? (\r\n\t\t\t\t\t\t\t<ConvertTransactionPreview\r\n\t\t\t\t\t\t\t\tnetworkProps={networkProps}\r\n\t\t\t\t\t\t\t\tecAmount={_get(values, entryCreditAmountPath)}\r\n\t\t\t\t\t\t\t\tfactoidAmount={\r\n\t\t\t\t\t\t\t\t\tthis.state.ecRate *\r\n\t\t\t\t\t\t\t\t\t_get(values, entryCreditAmountPath) *\r\n\t\t\t\t\t\t\t\t\tFACTOSHI_MULTIPLIER\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tsendFactoidFee={\r\n\t\t\t\t\t\t\t\t\tthis.state.sendFactoshiFee * FACTOSHI_MULTIPLIER\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{!_isNil(values.transactionError) && (\r\n\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\r\n\t\t\t\t\t\t\t\t{values.transactionError}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t{isSubmitting ? (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t{values.transactionID !== null ? (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\r\n\t\t\t\t\t\t\t\t\t\t\t<CheckCircle\r\n\t\t\t\t\t\t\t\t\t\t\t\tnativeColor=\"#6fbf73\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.successIcon}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Transaction ID:</b> {values.transactionID}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\tThis transaction will be visible{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Open Factom Explorer\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'/transaction?txid=' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues.transactionID\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\there{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\tin 10-15 minutes, after being included in the next\r\n\t\t\t\t\t\t\t\t\t\t\t\tFactom block currently being processed by the\r\n\t\t\t\t\t\t\t\t\t\t\t\tblockchain. Funds are available for use immediately.\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"outline\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReset}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tNew Transaction\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={7} />\r\n\t\t\t\t\t\t\t\t\t\t{values.ledgerStatus}\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.sendButton}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{'Convert ' +\r\n\t\t\t\t\t\t\t\t\tnetworkProps.factoidAbbreviation +\r\n\t\t\t\t\t\t\t\t\t' to ' +\r\n\t\t\t\t\t\t\t\t\tnetworkProps.ecAbbreviation}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tPlease verify all details are correct before hitting send.\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\tNobody can reverse mistaken transactions.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction ECAddressMenu(props) {\r\n\tconst { values, setFieldValue, ecAddresses } = props;\r\n\r\n\tconst addressList = ecAddresses.map((address_o, index) => (\r\n\t\t<MenuItem\r\n\t\t\tkey={index}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\r\n\t\t\t\tsetFieldValue(recipientAddressPath, address_o.address);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{address_o.nickname}\r\n\t\t</MenuItem>\r\n\t));\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tid=\"simple-menu\"\r\n\t\t\tanchorEl={values[myFctWalletAnchorElPath]}\r\n\t\t\topen={Boolean(values[myFctWalletAnchorElPath])}\r\n\t\t\tonClose={() => {\r\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{addressList}\r\n\t\t</Menu>\r\n\t);\r\n}\r\n\r\nConvertECForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = {\r\n\tsendButton: {\r\n\t\twidth: '50%',\r\n\t},\r\n\terrorText: { color: 'red', fontSize: '12px', textAlign: 'left' },\r\n\tpointer: {\r\n\t\tcursor: 'pointer',\r\n\t},\r\n\ttransactionErrorText: { color: 'red', fontSize: '16px' },\r\n\ttransaction: {\r\n\t\tborderColor: '#6fbf73',\r\n\t\tborderStyle: 'solid',\r\n\r\n\t\tpaddingTop: 3,\r\n\t\tpaddingBottom: 8,\r\n\t},\r\n\tsuccessIcon: {\r\n\t\tposition: 'relative',\r\n\t\ttop: '5px',\r\n\t},\r\n};\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithLedger,\r\n\twithSeed,\r\n\twithWalletContext,\r\n\twithFactomCli,\r\n\twithStyles(styles)\r\n);\r\n\r\nexport default enhancer(ConvertECForm);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _get from 'lodash/get';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withSeed } from '../context/SeedContext';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport AddressInfoHeader from './shared/AddressInfoHeader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst privateKeyPath = 'privateKey';\r\nconst showPasswordPath = 'showPassword;';\r\nconst seedPath = 'seed';\r\n\r\nclass ViewPrivateKeyForm extends Component {\r\n\tverifySeed = (seed) => {\r\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\r\n\t\treturn this.props.seedController.verifySeed(seed, activeAddress_o);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: { getActiveAddress },\r\n\t\t\tseedController: { getPrivateKey },\r\n\t\t} = this.props;\r\n\r\n\t\tconst activeAddress_o = getActiveAddress();\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\t[privateKeyPath]: '',\r\n\t\t\t\t\t[seedPath]: '',\r\n\t\t\t\t\t[showPasswordPath]: false,\r\n\t\t\t\t\taddressToReinitialize: activeAddress_o.address,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tconst { seed } = values;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst mnemonic = seed.trim();\r\n\t\t\t\t\t\tconst privateKey = getPrivateKey(mnemonic, activeAddress_o);\r\n\t\t\t\t\t\tactions.setFieldValue(privateKeyPath, privateKey);\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[seedPath]: Yup.string()\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(seedPath, 'Invalid Seed Phrase', this.verifySeed),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched, values, setFieldValue }) => (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tautoComplete=\"nope\"\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<AddressInfoHeader />\r\n\t\t\t\t\t\t{_isEmpty(_get(values, privateKeyPath)) && (\r\n\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\tname={seedPath}\r\n\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t'Enter Seed Phrase for ' + activeAddress_o.nickname\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\terror={_get(errors, seedPath) && _get(touched, seedPath)}\r\n\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{!_isEmpty(_get(values, privateKeyPath)) && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" style={{ fontSize: 15 }}>\r\n\t\t\t\t\t\t\t\t\tPrivate Key:&nbsp;\r\n\t\t\t\t\t\t\t\t\t{_get(values, privateKeyPath) && (\r\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, showPasswordPath) ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(values, privateKeyPath)\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Display Private Key\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(showPasswordPath, true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Visibility\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 35 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t{isSubmitting ? (\r\n\t\t\t\t\t\t\t<React.Fragment />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.sendButton}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Field name={props.name}>\r\n\t\t\t\t{({ field }) => (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tstyle={{ width: props.width }}\r\n\t\t\t\t\t\trequired={props.required}\r\n\t\t\t\t\t\tdisabled={props.disabled}\r\n\t\t\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\ttype={props.type}\r\n\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\tspellCheck: props.enableSpellCheck,\r\n\t\t\t\t\t\t\tmaxLength: props.maxLength,\r\n\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terror={props.error}\r\n\t\t\t\t\t\tlabel={props.label}\r\n\t\t\t\t\t\tfullWidth={props.fullWidth}\r\n\t\t\t\t\t\tmultiline={props.multiline}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Field>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname={props.name}\r\n\t\t\t\trender={(msg) => <div className={props.errorClass}>{msg}</div>}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nViewPrivateKeyForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = {\r\n\tsendButton: {\r\n\t\twidth: '50%',\r\n\t},\r\n\terrorText: { color: 'red', fontSize: '12px', textAlign: 'left' },\r\n};\r\n\r\nconst enhancer = _flowRight(withSeed, withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(ViewPrivateKeyForm);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _get from 'lodash/get';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst NICKNAME_MAX_LENGTH = 25;\r\nconst nicknamePath = 'nickname';\r\nconst saveLocallyPath = 'saveLocally';\r\nconst deleteAnchorElPath = 'deleteAnchorEl';\r\n\r\nclass AddressInfoForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: {\r\n\t\t\t\tgetActiveAddress,\r\n\t\t\t\tgetFactoidAddresses,\r\n\t\t\t\tgetEntryCreditAddresses,\r\n\t\t\t\tactiveAddressIndex_o,\r\n\t\t\t\tupdateAddress,\r\n\t\t\t\tdeleteAddress,\r\n\t\t\t},\r\n\t\t} = this.props;\r\n\r\n\t\tconst activeAddress_o = getActiveAddress();\r\n\r\n\t\tlet userAddressList = [];\r\n\t\tif (activeAddressIndex_o.type === 'fct') {\r\n\t\t\tuserAddressList = getFactoidAddresses();\r\n\t\t} else if (activeAddressIndex_o.type === 'ec') {\r\n\t\t\tuserAddressList = getEntryCreditAddresses();\r\n\t\t}\r\n\r\n\t\tconst userAddressNicknames = userAddressList\r\n\t\t\t.filter((addr_o) => addr_o.address !== activeAddress_o.address)\r\n\t\t\t.map((addr_o) => addr_o.nickname);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\t[saveLocallyPath]: activeAddress_o.saveLocally,\r\n\t\t\t\t\t[nicknamePath]: activeAddress_o.nickname,\r\n\t\t\t\t\t[deleteAnchorElPath]: null,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\twindow.setTimeout(() => {\r\n\t\t\t\t\t\tupdateAddress(\r\n\t\t\t\t\t\t\tactiveAddressIndex_o,\r\n\t\t\t\t\t\t\t_get(values, nicknamePath).trim(),\r\n\t\t\t\t\t\t\t_get(values, saveLocallyPath)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tactions.resetForm();\r\n\t\t\t\t\t}, 500);\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[nicknamePath]: Yup.string()\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\tnicknamePath,\r\n\t\t\t\t\t\t\t'Enter unique nickname',\r\n\t\t\t\t\t\t\t(value) => userAddressNicknames.indexOf(value) === -1\r\n\t\t\t\t\t\t),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">Edit Address</Typography>\r\n\t\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors[nicknamePath] && touched[nicknamePath] ? true : false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Nickname\"\r\n\t\t\t\t\t\t\t\t\tmaxLength={NICKNAME_MAX_LENGTH}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>{msg}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\tname={saveLocallyPath}\r\n\t\t\t\t\t\t\t\t\trender={({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={saveLocallyPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={field.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Save to local browser storage\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSubmit{' '}\r\n\t\t\t\t\t\t\t\t\t{isSubmitting && (\r\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t<CircularProgress size={20} />\r\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\taria-owns={values[deleteAnchorElPath] ? 'simple-menu' : null}\r\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\t\tclassName={classes.deleteButton}\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(deleteAnchorElPath, event.currentTarget);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\t\tid=\"simple-menu\"\r\n\t\t\t\t\t\t\t\t\tanchorEl={values[deleteAnchorElPath]}\r\n\t\t\t\t\t\t\t\t\topen={Boolean(values[deleteAnchorElPath])}\r\n\t\t\t\t\t\t\t\t\tonClose={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(deleteAnchorElPath, null);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tdeleteAddress(activeAddressIndex_o);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(deleteAnchorElPath, null);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.deleteConfirmationText}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tConfirm Delete\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<Field name={props.name}>\r\n\t\t\t{({ field }) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\tmaxLength: props.maxLength,\r\n\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...field}\r\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\terror={props.error}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Field>\r\n\t);\r\n};\r\n\r\nAddressInfoForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '12px' },\r\n\tdeleteButton: { marginLeft: 15 },\r\n\tdeleteConfirmationText: { color: 'red' },\r\n});\r\n\r\nconst enhancer = _flowRight(withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(AddressInfoForm);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass TransactionList extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: { getActiveAddress },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tconst activeAddress_o = getActiveAddress();\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{!_isEmpty(activeAddress_o.transactions) && (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">Recent Transactions</Typography>\r\n\t\t\t\t\t\t{activeAddress_o.transactions.map(function(transaction, index) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\t\t\tclassName={classes.transaction}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<b>Tx ID:</b> {transaction}{' '}\r\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Open Factom Explorer\">\r\n\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t'/transaction?txid=' +\r\n\t\t\t\t\t\t\t\t\t\t\t\ttransaction\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nTransactionList.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\ttransaction: { overflowWrap: 'break-word' },\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(TransactionList);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddressInfoHeader from './shared/AddressInfoHeader';\r\nimport AddressInfoForm from './AddressInfoForm';\r\nimport TransactionList from './TransactionList';\r\n\r\nconst AddressInfoTab = (props) => {\r\n\treturn (\r\n\t\t<div className={props.classes.root}>\r\n\t\t\t<AddressInfoHeader />\r\n\t\t\t<br />\r\n\t\t\t<Grid container spacing={8}>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<AddressInfoForm />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<TransactionList />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nAddressInfoTab.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\troot: { textAlign: 'left' },\r\n});\r\n\r\nexport default withStyles(styles)(AddressInfoTab);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SendFactoidForm from './SendFactoidForm';\r\nimport ConvertECForm from './ConvertECForm';\r\nimport ViewPrivateKeyForm from './ViewPrivateKeyForm';\r\nimport AddressInfoTab from './AddressInfoTab';\r\nimport { withNetwork } from '../context/NetworkContext';\r\n\r\nclass WalletTabContent extends React.Component {\r\n\tstate = {\r\n\t\ttabValue: 0,\r\n\t};\r\n\r\n\thandleChange = (event, tabValue) => {\r\n\t\tthis.setState({ tabValue });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\ttype,\r\n\t\t\tactiveAddress,\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tlet tabValue = this.state.tabValue;\r\n\r\n\t\t// handle invalid FCT tab value\r\n\t\tif (\r\n\t\t\ttype === 'fct' &&\r\n\t\t\ttabValue >= 3 &&\r\n\t\t\tactiveAddress.importType !== 'seed'\r\n\t\t) {\r\n\t\t\t//only seeds have tab 3\r\n\t\t\ttabValue = 0;\r\n\t\t}\r\n\r\n\t\t// handle invalid EC tab value\r\n\t\tif (\r\n\t\t\ttype === 'ec' &&\r\n\t\t\t(tabValue > 1 || (tabValue === 1 && activeAddress.importType !== 'seed'))\r\n\t\t) {\r\n\t\t\ttabValue = 0;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t{type === 'fct' && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\tvalue={tabValue}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\t\t\ttextColor=\"primary\"\r\n\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tab label=\"Address Info\" />\r\n\t\t\t\t\t\t\t<Tab label={'Send ' + networkProps.factoidAbbreviationFull} />\r\n\t\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t'Convert ' +\r\n\t\t\t\t\t\t\t\t\tnetworkProps.factoidAbbreviation +\r\n\t\t\t\t\t\t\t\t\t' to ' +\r\n\t\t\t\t\t\t\t\t\tnetworkProps.ecAbbreviation\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{activeAddress.importType === 'seed' && (\r\n\t\t\t\t\t\t\t\t<Tab label=\"View Private Key\" />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t{tabValue === 0 && (\r\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\r\n\t\t\t\t\t\t\t\t<AddressInfoTab />\r\n\t\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{tabValue === 1 && (\r\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\r\n\t\t\t\t\t\t\t\t<SendFactoidForm />\r\n\t\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{tabValue === 2 && (\r\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\r\n\t\t\t\t\t\t\t\t<ConvertECForm />\r\n\t\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{tabValue === 3 && (\r\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\r\n\t\t\t\t\t\t\t\t<ViewPrivateKeyForm />\r\n\t\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{type === 'ec' && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\tvalue={tabValue}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\t\t\ttextColor=\"primary\"\r\n\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tab label=\"Address Info\" />\r\n\t\t\t\t\t\t\t{activeAddress.importType === 'seed' && (\r\n\t\t\t\t\t\t\t\t<Tab label=\"View Private Key\" />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t{tabValue === 0 && (\r\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\r\n\t\t\t\t\t\t\t\t<AddressInfoTab />\r\n\t\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{tabValue === 1 && (\r\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\r\n\t\t\t\t\t\t\t\t<ViewPrivateKeyForm />\r\n\t\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nWalletTabContent.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction TabContainer(props) {\r\n\treturn (\r\n\t\t<Typography component=\"div\" className={props.classes.tabContainer}>\r\n\t\t\t{props.children}\r\n\t\t</Typography>\r\n\t);\r\n}\r\nTabContainer.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nconst styles = {\r\n\troot: { textAlign: 'center' },\r\n\ttabContainer: {\r\n\t\tpaddingLeft: 55,\r\n\t\tpaddingRight: 55,\r\n\t\tpaddingTop: 18,\r\n\t\tpaddingBottom: 10,\r\n\t},\r\n};\r\n\r\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\r\nexport default enhancer(WalletTabContent);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isNil from 'lodash/isNil';\r\nimport Sidebar from './Sidebar.js';\r\nimport WalletTabContent from './WalletTabContent.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withWalletContext } from '../context/WalletContext';\r\n\r\nclass WalletManager extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.walletController.updateBalances();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\twalletController: { getActiveAddress, activeAddressIndex_o },\r\n\t\t} = this.props;\r\n\r\n\t\tconst activeAddress = getActiveAddress();\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{!_isNil(activeAddress) && (\r\n\t\t\t\t\t<Grid container spacing={24} item xs={12}>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Sidebar />\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t<Paper>\r\n\t\t\t\t\t\t\t\t<WalletTabContent\r\n\t\t\t\t\t\t\t\t\ttype={activeAddressIndex_o.type}\r\n\t\t\t\t\t\t\t\t\tactiveAddress={activeAddress}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nWalletManager.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({});\r\n\r\nconst enhancer = _flowRight(withWalletContext, withStyles(styles));\r\nexport default enhancer(WalletManager);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AddWalletStepper from './AddWalletStepper';\r\n\r\nclass AddInitialWallet extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.setReadyToManageWallet(false);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tconst handleCloseText =\r\n\t\t\tnetworkProps.network === 'testnet'\r\n\t\t\t\t? 'Manage Testnet Wallet'\r\n\t\t\t\t: 'Manage Wallet';\r\n\r\n\t\treturn (\r\n\t\t\t<Grid container item xs={12} justify=\"center\">\r\n\t\t\t\t<AddWalletStepper\r\n\t\t\t\t\thandleClose={() => this.props.setReadyToManageWallet(true)}\r\n\t\t\t\t\thandleCloseText={handleCloseText}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\nAddInitialWallet.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({});\r\n\r\nconst enhancer = _flowRight(\r\n\twithRouter,\r\n\twithNetwork,\r\n\twithWalletContext,\r\n\twithStyles(styles)\r\n);\r\nexport default enhancer(AddInitialWallet);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography } from '@material-ui/core';\r\nimport { POLL_STATUSES } from '../create/VOTE_CONSTANTS';\r\nimport { withVote } from '../../context/VoteContext';\r\nimport { withNetwork } from '../../context/NetworkContext';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst RPP_OPTIONS = [5, 10, 25, 50];\r\n\r\nlet id = 0;\r\nconst createRow = (\r\n\tvoteID,\r\n\tadminID,\r\n\ttitle,\r\n\tstatus,\r\n\tcommitPhase,\r\n\trevealPhase\r\n) => {\r\n\tid += 1;\r\n\treturn { id, voteID, adminID, title, status, commitPhase, revealPhase };\r\n};\r\n\r\nclass VoteTable extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tdata,\r\n\t\t\ttitle,\r\n\t\t\tstatus,\r\n\t\t\tinitiatorId,\r\n\t\t\tpollChainId,\r\n\t\t\thandleFilterChange,\r\n\t\t\tfilterTable,\r\n\t\t\tvoteController: { getPollStatus },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\t\tconst expanded = this.props.expanded;\r\n\r\n\t\tlet tableRows = [];\r\n\r\n\t\tdata.voteList.forEach((poll_o) => {\r\n\t\t\tconst row = createRow(\r\n\t\t\t\tpoll_o.voteChainId,\r\n\t\t\t\tpoll_o.admin.voteInitiator,\r\n\t\t\t\tpoll_o.proposal.title,\r\n\t\t\t\tgetPollStatus(poll_o.vote.phasesBlockHeights).displayValue,\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{poll_o.vote.phasesBlockHeights.commitStart +\r\n\t\t\t\t\t\t' - ' +\r\n\t\t\t\t\t\tpoll_o.vote.phasesBlockHeights.commitEnd}\r\n\t\t\t\t</span>,\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{poll_o.vote.phasesBlockHeights.commitEnd +\r\n\t\t\t\t\t\t1 +\r\n\t\t\t\t\t\t' - ' +\r\n\t\t\t\t\t\tpoll_o.vote.phasesBlockHeights.revealEnd}\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t\ttableRows.push(row);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={12} className={classes.tableWrapper}>\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<th className={classes.expandColumn}>\r\n\t\t\t\t\t\t\t\t\t{expanded ? (\r\n\t\t\t\t\t\t\t\t\t\t<ExpandLess\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\t\ttitleAccess=\"Collapse Table\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.toggleExpand}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Collapse Table\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.expandIcon}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<ExpandMore\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\t\ttitleAccess=\"Expand Table\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.toggleExpand}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Expand Table\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.expandIcon}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={`${classes.titleColumn} ${classes.columnHeader}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tTitle\r\n\t\t\t\t\t\t\t\t\t{expanded && (\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleFilterChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={`${classes.statusColumn} ${classes.columnHeader}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tStatus\r\n\t\t\t\t\t\t\t\t\t{expanded && (\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"status\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={status}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={async (e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait handleFilterChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfilterTable();\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option defaultValue value=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{Object.values(POLL_STATUSES).map((option_o, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={option_o.value}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option_o.displayValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={`${classes.dateColumn} ${classes.columnHeader}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCommit Phase\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={`${classes.dateColumn} ${classes.columnHeader}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tReveal Phase\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{expanded ? (\r\n\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\tclassName={`${classes.pollChainIDColumn} ${\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.columnHeader\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPoll Chain ID\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"pollChainId\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={pollChainId}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleFilterChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\tclassName={`${classes.shortPollChainIDColumn} ${\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.columnHeader\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPoll Chain ID\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{expanded ? (\r\n\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\tclassName={`${classes.adminIDColumn} ${\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.columnHeader\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPoll Initiator ID\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"initiatorId\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={initiatorId}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleFilterChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\tclassName={`${classes.shortAdminIDColumn} ${\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.columnHeader\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPoll Initiator ID\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{_isEmpty(tableRows) && (\r\n\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t<td className={classes.expandColumn} />\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<Typography>No Matching Results</Typography>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell />\r\n\t\t\t\t\t\t\t\t\t<TableCell />\r\n\t\t\t\t\t\t\t\t\t<TableCell />\r\n\t\t\t\t\t\t\t\t\t<TableCell />\r\n\t\t\t\t\t\t\t\t\t<TableCell />\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{tableRows.map((row) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<TableRow key={row.id} hover={true}>\r\n\t\t\t\t\t\t\t\t\t\t<td className={classes.expandColumn} />\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.titleColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'/viewVote?network=' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnetworkProps.network +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'&id=' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trow.voteID\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.title}\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.statusColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t{row.status}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.dateColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ width: '104px' }}>{row.commitPhase}</div>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.dateColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ width: '104px' }}>{row.revealPhase}</div>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{expanded ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.pollChainIDColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.voteID}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.shortPollChainIDColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.voteID}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t{expanded ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.adminIDColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.adminID}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.shortAdminIDColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.adminID}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t<TablePagination\r\n\t\t\t\t\t\tcomponent={Grid}\r\n\t\t\t\t\t\tonChangePage={(event, page) => {\r\n\t\t\t\t\t\t\tthis.props.handlePageChange(page);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonChangeRowsPerPage={(e) => {\r\n\t\t\t\t\t\t\tthis.props.handleRowsPerPageChange(e.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcount={this.props.count}\r\n\t\t\t\t\t\trowsPerPage={this.props.rowsPerPage}\r\n\t\t\t\t\t\trowsPerPageOptions={RPP_OPTIONS}\r\n\t\t\t\t\t\tpage={this.props.page}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nVoteTable.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\ttableWrapper: {\r\n\t\toverflowX: 'auto',\r\n\t},\r\n\ttitleColumn: {\r\n\t\tminWidth: '252',\r\n\t\tpaddingRight: '1px',\r\n\t},\r\n\tadminIDColumn: {\r\n\t\tpaddingRight: '0px',\r\n\t},\r\n\tshortAdminIDColumn: {\r\n\t\tmaxWidth: '207px',\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t\tpaddingRight: '0px',\r\n\t},\r\n\tshortPollChainIDColumn: {\r\n\t\tmaxWidth: '207px',\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t\tpaddingRight: '0px',\r\n\t},\r\n\tpollChainIDColumn: {\r\n\t\tpaddingRight: '0px',\r\n\t},\r\n\tstatusColumn: {\r\n\t\tmaxWidth: '165px',\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t},\r\n\tdateColumn: {\r\n\t\tmaxWidth: '129px',\r\n\t\tpaddingRight: '1px',\r\n\t},\r\n\texpandIcon: {\r\n\t\tmargin: '-5px',\r\n\t},\r\n\texpandColumn: {\r\n\t\tmaxWidth: '3px',\r\n\t},\r\n\tfooterPagination: {\r\n\t\tmaxWidth: '345px',\r\n\t},\r\n\tcolumnHeader: {\r\n\t\tfontSize: '13px',\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withVote, withStyles(styles));\r\nexport default enhancer(VoteTable);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport _get from 'lodash/get';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport VoteTable from './VoteTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\n\r\nconst GET_LISTING = gql`\r\n\tquery Listing(\r\n\t\t$limit: Int\r\n\t\t$offset: Int\r\n\t\t$title: String\r\n\t\t$status: String\r\n\t\t$voteInitiator: String\r\n\t\t$voteChain: String\r\n\t\t$voter: String\r\n\t) {\r\n\t\tallProposals(\r\n\t\t\tsort: \"blockHeight\"\r\n\t\t\tsortOrder: \"DESC\"\r\n\t\t\tregistered: true\r\n\t\t\tlimit: $limit\r\n\t\t\toffset: $offset\r\n\t\t\ttitle: $title\r\n\t\t\tstatus: $status\r\n\t\t\tvoteInitiator: $voteInitiator\r\n\t\t\tvoteChain: $voteChain\r\n\t\t\tvoter: $voter\r\n\t\t) {\r\n\t\t\tlistInfo\r\n\t\t\tvoteList {\r\n\t\t\t\tadmin {\r\n\t\t\t\t\tvoteInitiator\r\n\t\t\t\t}\r\n\t\t\t\tproposal {\r\n\t\t\t\t\ttitle\r\n\t\t\t\t}\r\n\t\t\t\tvote {\r\n\t\t\t\t\tphasesBlockHeights {\r\n\t\t\t\t\t\tcommitStart\r\n\t\t\t\t\t\tcommitEnd\r\n\t\t\t\t\t\trevealEnd\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvoteChainId\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nclass VoteListing extends Component {\r\n\tstate = {\r\n\t\texpanded: false,\r\n\t\trowsPerPage: 5,\r\n\t\tpage: 0,\r\n\t\tactiveFilters: {\r\n\t\t\ttitle: '',\r\n\t\t\tstatus: '',\r\n\t\t\tinitiatorId: '',\r\n\t\t\tpollChainId: '',\r\n\t\t\tvoterId: '',\r\n\t\t},\r\n\t\ttitle: '',\r\n\t\tstatus: '',\r\n\t\tinitiatorId: '',\r\n\t\tpollChainId: '',\r\n\t\tvoterId: '',\r\n\t};\r\n\r\n\thandleFilterChange = (event) => {\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name;\r\n\t\tconst value = name === 'title' ? target.value : target.value.trim();\r\n\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\r\n\tfilterTable = () => {\r\n\t\tthis.handleExpand();\r\n\r\n\t\tthis.setState({\r\n\t\t\tactiveFilters: {\r\n\t\t\t\ttitle: this.state.title,\r\n\t\t\t\tstatus: this.state.status,\r\n\t\t\t\tinitiatorId: this.state.initiatorId,\r\n\t\t\t\tpollChainId: this.state.pollChainId,\r\n\t\t\t\tvoterId: this.state.voterId,\r\n\t\t\t},\r\n\t\t\tpage: 0,\r\n\t\t});\r\n\t};\r\n\r\n\tresetFilters = () => {\r\n\t\tthis.setState({\r\n\t\t\tactiveFilters: {\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tstatus: '',\r\n\t\t\t\tinitiatorId: '',\r\n\t\t\t\tpollChainId: '',\r\n\t\t\t\tvoterId: '',\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\ttoggleExpand = () => {\r\n\t\tthis.setState((prevState) => {\r\n\t\t\treturn {\r\n\t\t\t\texpanded: !prevState.expanded,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\thandleKeyPress = (event) => {\r\n\t\tif (event.which === 13 /* Enter */) {\r\n\t\t\tthis.filterTable();\r\n\t\t}\r\n\t};\r\n\r\n\thandleExpand = () => {\r\n\t\tthis.setState({\r\n\t\t\texpanded: true,\r\n\t\t});\r\n\t};\r\n\r\n\thandlePageChange = (page) => {\r\n\t\tthis.setState({\r\n\t\t\tpage,\r\n\t\t});\r\n\t};\r\n\r\n\thandleRowsPerPageChange = (rowsPerPage) => {\r\n\t\tthis.setState({\r\n\t\t\trowsPerPage,\r\n\t\t\tpage: 0,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<form onKeyPress={this.handleKeyPress} className={classes.body}>\r\n\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t<Query\r\n\t\t\t\t\t\tquery={GET_LISTING}\r\n\t\t\t\t\t\tvariables={{\r\n\t\t\t\t\t\t\tlimit: this.state.rowsPerPage,\r\n\t\t\t\t\t\t\toffset: this.state.rowsPerPage * this.state.page,\r\n\t\t\t\t\t\t\ttitle: this.state.activeFilters.title,\r\n\t\t\t\t\t\t\tstatus: this.state.activeFilters.status,\r\n\t\t\t\t\t\t\tvoteInitiator: this.state.activeFilters.initiatorId,\r\n\t\t\t\t\t\t\tvoteChain: this.state.activeFilters.pollChainId,\r\n\t\t\t\t\t\t\tvoter: this.state.activeFilters.voterId,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({ loading, error, data }) => {\r\n\t\t\t\t\t\t\tif (loading) return <PreLoadHeader message=\"Loading...\" />;\r\n\t\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<PreLoadHeader\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\tmessage={'Error: ' + error.message}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst totalCount = _get(data, 'allProposals.listInfo.totalCount');\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Grid container direction=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid container item xs={3} className={classes.topFilters}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.filterTable}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FilterList /> Advanced Search\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.expanded && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ paddingTop: '10px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tVoter ID:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"voterId\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.voterId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleFilterChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\tWelcome to Factom On-Chain Voting\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={3} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<VoteTable\r\n\t\t\t\t\t\t\t\t\t\tdata={data.allProposals}\r\n\t\t\t\t\t\t\t\t\t\texpanded={this.state.expanded}\r\n\t\t\t\t\t\t\t\t\t\ttoggleExpand={this.toggleExpand}\r\n\t\t\t\t\t\t\t\t\t\trowsPerPage={this.state.rowsPerPage}\r\n\t\t\t\t\t\t\t\t\t\thandleRowsPerPageChange={this.handleRowsPerPageChange}\r\n\t\t\t\t\t\t\t\t\t\tcount={totalCount}\r\n\t\t\t\t\t\t\t\t\t\tpage={this.state.page}\r\n\t\t\t\t\t\t\t\t\t\thandlePageChange={this.handlePageChange}\r\n\t\t\t\t\t\t\t\t\t\thandleFilterChange={this.handleFilterChange}\r\n\t\t\t\t\t\t\t\t\t\tfilterTable={this.filterTable}\r\n\t\t\t\t\t\t\t\t\t\ttitle={this.state.title}\r\n\t\t\t\t\t\t\t\t\t\tstatus={this.state.status}\r\n\t\t\t\t\t\t\t\t\t\tinitiatorId={this.state.initiatorId}\r\n\t\t\t\t\t\t\t\t\t\tpollChainId={this.state.pollChainId}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t</Query>\r\n\t\t\t\t</Paper>\r\n\t\t\t\t<br />\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst PreLoadHeader = (props) => {\r\n\treturn (\r\n\t\t<Grid container direction=\"row\">\r\n\t\t\t<Grid item xs={3} />\r\n\t\t\t<Grid item xs={6}>\r\n\t\t\t\t<Typography variant=\"h5\" gutterBottom>\r\n\t\t\t\t\tWelcome to Factom On-Chain Voting\r\n\t\t\t\t</Typography>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={3} />\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Typography className={props.className}>{props.message}</Typography>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nVoteListing.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tbody: {\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: '0 auto',\r\n\t\tmarginTop: '20px',\r\n\t},\r\n\tform: {\r\n\t\ttextAlign: 'left',\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: '15px',\r\n\t},\r\n\ttopFilters: {},\r\n\terrorText: { color: 'red' },\r\n});\r\n\r\nexport default withStyles(styles)(VoteListing);\r\n\r\n/*\r\nconst GET_VOTERS = gql`\r\n\tquery Voters($chain: String!) {\r\n\t\teligibleVoters(chain: $chain) {\r\n\t\t\tvoters\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst ExchangeRates = ({\r\n\tchain = '84444341e0e60a496f75c98c57357805ec86e9f8e232348f1e60704e83bca2b0',\r\n}) => (\r\n\t<Query query={GET_VOTERS} variables={{ chain }}>\r\n\t\t{({ loading, error, data }) => {\r\n\t\t\tif (loading) return <p>Loading...</p>;\r\n\t\t\tif (error) return <p>Error :(</p>;\r\n\r\n\t\t\tconst voterList = data.eligibleVoters.voters.map((voter_o, index) => (\r\n\t\t\t\t<li key={index}>\r\n\t\t\t\t\tVoter ID: {voter_o.voterId}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tVoter Weight: {voter_o.weight}\r\n\t\t\t\t</li>\r\n\t\t\t));\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\thi<ul>{voterList}</ul>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}}\r\n\t</Query>\r\n);\r\n*/\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { SVGLogo } from '../../component/logo/SVGLogo';\r\nimport FactomProtocolLogo from '../../component/logo/factomProtocolLogo.svg';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\n\r\nclass ExplorerLink extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tisHovered: false,\r\n\t\t};\r\n\t\tthis.handleHover = this.handleHover.bind(this);\r\n\t}\r\n\r\n\thandleHover = () => {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tisHovered: !prevState.isHovered,\r\n\t\t}));\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes, label, value, href, extend = false } = this.props;\r\n\r\n\t\tconst valueClass =\r\n\t\t\tthis.state.isHovered || extend\r\n\t\t\t\t? classes.value\r\n\t\t\t\t: classes.value + ' ' + classes.short;\r\n\r\n\t\treturn (\r\n\t\t\t<Grid container alignItems=\"center\" className={classes.root}>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<SVGLogo\r\n\t\t\t\t\t\tclassName={classes.logo}\r\n\t\t\t\t\t\tsrc={FactomProtocolLogo}\r\n\t\t\t\t\t\talt=\"Factom Protocol Logo\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<Typography className={classes.label}>\r\n\t\t\t\t\t\t&nbsp;{label}:&nbsp;\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tonMouseEnter={this.handleHover}\r\n\t\t\t\t\t\tonMouseLeave={this.handleHover}\r\n\t\t\t\t\t\tclassName={valueClass}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{value}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={href}>\r\n\t\t\t\t\t\t<OpenInNew color=\"primary\" className={classes.openInNew} />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\topenInNew: { fontSize: 15 },\r\n\troot: { color: 'black' },\r\n\tvalue: {\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t},\r\n\tshort: {\r\n\t\tmaxWidth: '200px',\r\n\t},\r\n\tlabel: { fontWeight: 500 },\r\n\tlogo: { height: 20 },\r\n\ttooltip: {\r\n\t\tmaxWidth: 'none',\r\n\t\tfontSize: 12,\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(ExplorerLink);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Field, FastField, ErrorMessage } from 'formik';\r\n\r\nconst FormTextField = ({\r\n\taccept,\r\n\tautoComplete = false,\r\n\tclasses,\r\n\tdisabled = false,\r\n\tdisplayError = true,\r\n\terror = false,\r\n\tfullWidth = false,\r\n\tisNotFast,\r\n\tlabel,\r\n\tmaxLength,\r\n\tmultiline,\r\n\tname,\r\n\tonChange,\r\n\tonKeyPress,\r\n\tshrink = false,\r\n\tspellCheck = false,\r\n\tstep = false,\r\n\ttype = 'text',\r\n\tvalidate,\r\n\twidth,\r\n}) => {\r\n\tconst FieldType = isNotFast ? Field : FastField;\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<FieldType name={name} {...(validate ? { validate } : {})}>\r\n\t\t\t\t{({ field }) => (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t{...(onChange ? { onChange } : {})}\r\n\t\t\t\t\t\t{...{\r\n\t\t\t\t\t\t\terror,\r\n\t\t\t\t\t\t\tdisabled,\r\n\t\t\t\t\t\t\tfullWidth,\r\n\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\tmultiline,\r\n\t\t\t\t\t\t\tonKeyPress,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\tautoComplete: autoComplete ? 'on' : 'off',\r\n\t\t\t\t\t\t\tmaxLength,\r\n\t\t\t\t\t\t\tspellCheck,\r\n\t\t\t\t\t\t\t...(accept ? { accept } : {}),\r\n\t\t\t\t\t\t\t...(step ? { step } : {}),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tstyle={{ width }}\r\n\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t...(shrink ? { shrink } : {}),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</FieldType>\r\n\t\t\t{displayError && (\r\n\t\t\t\t<ErrorMessage\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\trender={(msg) => <div className={classes.errorText}>{msg}</div>}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '13px' },\r\n});\r\n\r\nexport default withStyles(styles)(FormTextField);\r\n","import React from 'react';\r\nimport _get from 'lodash/get';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { BINARY_CONFIG } from '../create/VOTE_CONSTANTS';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst selectedOptionPath = 'selectedOption';\r\n\r\nconst optionsPath = 'pollJSON.vote.config.options';\r\n\r\nclass BinaryVoteForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tpoll,\r\n\t\t\tparentIsSubmitting,\r\n\t\t\tparentArrayHelpers,\r\n\t\t\tparentReset,\r\n\t\t} = this.props;\r\n\r\n\t\tconst options = _get(poll, optionsPath);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tselectedOption: '',\r\n\t\t\t\t\treinitialize: parentReset,\r\n\t\t\t\t}}\r\n\t\t\t\trender={({ values, handleChange }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Typography>Type: {BINARY_CONFIG.name}</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"Option\"\r\n\t\t\t\t\t\t\t\t\t\tname={selectedOptionPath}\r\n\t\t\t\t\t\t\t\t\t\tvalue={_get(values, selectedOptionPath)}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tparentArrayHelpers.replace(0, e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{options.map((option, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={option}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio disabled={parentIsSubmitting} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={option}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nBinaryVoteForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({});\r\n\r\nconst enhancer = _flowRight(withStyles(styles));\r\nexport default enhancer(BinaryVoteForm);\r\n","import React from 'react';\r\nimport _get from 'lodash/get';\r\nimport _remove from 'lodash/remove';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { APPROVAL_CONFIG } from '../create/VOTE_CONSTANTS';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst abstainCheckboxPath = 'abstainCheckbox';\r\n\r\nconst parentVotePath = 'vote';\r\n\r\nconst optionsPath = 'pollJSON.vote.config.options';\r\nconst minOptionsPath = 'pollJSON.vote.config.minOptions';\r\nconst maxOptionsPath = 'pollJSON.vote.config.maxOptions';\r\nconst abstentionPath = 'pollJSON.vote.config.allowAbstention';\r\n\r\nclass ApprovalVoteForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tpoll,\r\n\t\t\tparentIsSubmitting,\r\n\t\t\tparentArrayHelpers,\r\n\t\t\tparentReset,\r\n\t\t\tparentSetFieldValue,\r\n\t\t\tparentVoteArray,\r\n\t\t} = this.props;\r\n\r\n\t\tconst options = _get(poll, optionsPath);\r\n\t\tconst allowAbstain = _get(poll, abstentionPath);\r\n\t\tconst minOptions = _get(poll, minOptionsPath);\r\n\t\tconst maxOptions = _get(poll, maxOptionsPath);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\treinitialize: parentReset,\r\n\t\t\t\t\tabstainCheckbox: false,\r\n\t\t\t\t}}\r\n\t\t\t\trender={({ values, handleChange, setFieldValue }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Typography>Type: {APPROVAL_CONFIG.name}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>Minimum Options Allowed: {minOptions}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>Maximum Options Allowed: {maxOptions}</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t{options.map((option, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={option + '_checkbox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, option + '_checkbox') === true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentIsSubmitting ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, abstainCheckboxPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.target.checked) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentArrayHelpers.push(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst newVote = _remove(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentVoteArray,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(value) => value !== e.target.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue(parentVotePath, newVote);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={option}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{allowAbstain && (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={abstainCheckboxPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={_get(values, abstainCheckboxPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={parentIsSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.target.checked) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions.forEach((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(option + '_checkbox', false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue(parentVotePath, []);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tabstainCheckboxPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.checked\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Abstain\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nApprovalVoteForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({});\r\n\r\nconst enhancer = _flowRight(withStyles(styles));\r\nexport default enhancer(ApprovalVoteForm);\r\n","import React from 'react';\r\nimport _get from 'lodash/get';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { SINGLE_OPTION_CONFIG } from '../create/VOTE_CONSTANTS';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst selectedOptionPath = 'selectedOption';\r\nconst abstainCheckboxPath = 'abstainCheckbox';\r\n\r\nconst optionsPath = 'pollJSON.vote.config.options';\r\nconst abstentionPath = 'pollJSON.vote.config.allowAbstention';\r\n\r\nclass SingleOptionVoteForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tpoll,\r\n\t\t\tparentIsSubmitting,\r\n\t\t\tparentArrayHelpers,\r\n\t\t\tparentReset,\r\n\t\t\tparentSetFieldValue,\r\n\t\t} = this.props;\r\n\r\n\t\tconst options = _get(poll, optionsPath);\r\n\t\tconst allowAbstain = _get(poll, abstentionPath);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tselectedOption: '',\r\n\t\t\t\t\treinitialize: parentReset,\r\n\t\t\t\t\tabstainCheckbox: false,\r\n\t\t\t\t}}\r\n\t\t\t\trender={({ values, handleChange, setFieldValue }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Typography>Type: {SINGLE_OPTION_CONFIG.name}</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"Option\"\r\n\t\t\t\t\t\t\t\t\t\tname={selectedOptionPath}\r\n\t\t\t\t\t\t\t\t\t\tvalue={_get(values, selectedOptionPath)}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tparentArrayHelpers.replace(0, e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{options.map((option, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={option}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentIsSubmitting ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, abstainCheckboxPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={option}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{allowAbstain && (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={abstainCheckboxPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={_get(values, abstainCheckboxPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={parentIsSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(selectedOptionPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tparentArrayHelpers.remove(0);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tabstainCheckboxPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.checked\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Abstain\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nSingleOptionVoteForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({});\r\n\r\nconst enhancer = _flowRight(withStyles(styles));\r\nexport default enhancer(SingleOptionVoteForm);\r\n","import React from 'react';\r\nimport _get from 'lodash/get';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { INSTANT_RUNOFF_CONFIG } from '../create/VOTE_CONSTANTS';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst abstainCheckboxPath = 'abstainCheckbox';\r\nconst itemsPath = 'items';\r\nconst selectedPath = 'selected';\r\n\r\nconst parentVotePath = 'vote';\r\n\r\nconst optionsPath = 'pollJSON.vote.config.options';\r\nconst minOptionsPath = 'pollJSON.vote.config.minOptions';\r\nconst maxOptionsPath = 'pollJSON.vote.config.maxOptions';\r\nconst abstentionPath = 'pollJSON.vote.config.allowAbstention';\r\n\r\nclass InstantRunoffVoteForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tpoll,\r\n\t\t\tparentIsSubmitting,\r\n\t\t\tparentReset,\r\n\t\t\tparentSetFieldValue,\r\n\t\t} = this.props;\r\n\r\n\t\tconst options = _get(poll, optionsPath);\r\n\t\tconst allowAbstain = _get(poll, abstentionPath);\r\n\t\tconst minOptions = _get(poll, minOptionsPath);\r\n\t\tconst maxOptions = _get(poll, maxOptionsPath);\r\n\r\n\t\tconst items = options.map((option) => ({\r\n\t\t\tid: option,\r\n\t\t\tcontent: option,\r\n\t\t}));\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\treinitialize: parentReset,\r\n\t\t\t\t\tabstainCheckbox: false,\r\n\t\t\t\t\titems: items,\r\n\t\t\t\t\tselected: [],\r\n\t\t\t\t}}\r\n\t\t\t\trender={({ values, handleChange, setFieldValue }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Typography>Type: {INSTANT_RUNOFF_CONFIG.name}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>Minimum Options Allowed: {minOptions}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>Maximum Options Allowed: {maxOptions}</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<DragAndDrop\r\n\t\t\t\t\t\t\t\t\tformValues={values}\r\n\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\t_get(values, abstainCheckboxPath) || parentIsSubmitting\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tirvSetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\t\t\tparentSetFieldValue={parentSetFieldValue}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{allowAbstain && (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={abstainCheckboxPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={_get(values, abstainCheckboxPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={parentIsSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tabstainCheckboxPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.checked\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.target.checked) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//reset drag and drop\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(itemsPath, items);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(selectedPath, []);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//clear vote\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue(parentVotePath, []);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Abstain\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nInstantRunoffVoteForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({});\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n\tconst result = Array.from(list);\r\n\tconst [removed] = result.splice(startIndex, 1);\r\n\tresult.splice(endIndex, 0, removed);\r\n\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n\tconst sourceClone = Array.from(source);\r\n\tconst destClone = Array.from(destination);\r\n\tconst [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n\tdestClone.splice(droppableDestination.index, 0, removed);\r\n\r\n\tconst result = {};\r\n\tresult[droppableSource.droppableId] = sourceClone;\r\n\tresult[droppableDestination.droppableId] = destClone;\r\n\r\n\treturn result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n\t// some basic styles to make the items look a bit nicer\r\n\tuserSelect: 'none',\r\n\tpadding: 16,\r\n\tmargin: `0 0 8px 0`,\r\n\toverflowWrap: 'break-word',\r\n\r\n\t// change background colour if dragging\r\n\tbackground: isDragging ? 'mediumpurple' : 'lightgrey',\r\n\r\n\t// styles we need to apply on draggables\r\n\t...draggableStyle,\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n\t//background: isDraggingOver ? 'lightblue' : 'white',\r\n\twidth: 250,\r\n\tminHeight: 50,\r\n\tpaddingBottom: 10,\r\n});\r\n\r\nclass DragAndDrop extends React.Component {\r\n\t/**\r\n\t * A semi-generic way to handle multiple lists. Matches\r\n\t * the IDs of the droppable container to the names of the\r\n\t * source arrays stored in the state.\r\n\t */\r\n\tid2List = {\r\n\t\tdroppable: 'items',\r\n\t\tdroppable2: 'selected',\r\n\t};\r\n\r\n\tgetList = (id) => _get(this.props.formValues, this.id2List[id]);\r\n\r\n\tonDragEnd = async (result) => {\r\n\t\tconst { source, destination } = result;\r\n\r\n\t\t// dropped outside the list\r\n\t\tif (!destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (source.droppableId === destination.droppableId) {\r\n\t\t\tconst items = reorder(\r\n\t\t\t\tthis.getList(source.droppableId),\r\n\t\t\t\tsource.index,\r\n\t\t\t\tdestination.index\r\n\t\t\t);\r\n\r\n\t\t\tawait this.props.irvSetFieldValue(\r\n\t\t\t\tthis.id2List[source.droppableId],\r\n\t\t\t\titems\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst result = move(\r\n\t\t\t\tthis.getList(source.droppableId),\r\n\t\t\t\tthis.getList(destination.droppableId),\r\n\t\t\t\tsource,\r\n\t\t\t\tdestination\r\n\t\t\t);\r\n\r\n\t\t\tthis.props.irvSetFieldValue(itemsPath, result.droppable);\r\n\t\t\tawait this.props.irvSetFieldValue(selectedPath, result.droppable2);\r\n\t\t}\r\n\r\n\t\t// update commit form value\r\n\t\tthis.props.parentSetFieldValue(\r\n\t\t\tparentVotePath,\r\n\t\t\t_get(this.props.formValues, selectedPath).map((value) => value.content)\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { formValues, disabled } = this.props;\r\n\r\n\t\tconst items = _get(formValues, itemsPath);\r\n\t\tconst selected = _get(formValues, selectedPath);\r\n\r\n\t\tconst titleStyle = disabled ? { color: 'grey' } : { fontWeight: 500 };\r\n\r\n\t\treturn (\r\n\t\t\t<DragDropContext onDragEnd={this.onDragEnd}>\r\n\t\t\t\t<Grid container spacing={24}>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Paper style={{ padding: 10 }}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom style={titleStyle}>\r\n\t\t\t\t\t\t\t\tAvailable Options\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Droppable droppableId=\"droppable\">\r\n\t\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\tstyle={getListStyle(snapshot.isDraggingOver)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{items.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Draggable\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdraggableId={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisDragDisabled={disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={getItemStyle(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsnapshot.isDragging,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprovided.draggableProps.style\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.content}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Draggable>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Droppable>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Paper style={{ padding: 10 }}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom style={titleStyle}>\r\n\t\t\t\t\t\t\t\tSelected Options\r\n\t\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t\t<Droppable droppableId=\"droppable2\">\r\n\t\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\tstyle={getListStyle(snapshot.isDraggingOver)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{selected.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Draggable\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdraggableId={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisDragDisabled={disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={getItemStyle(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsnapshot.isDragging,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprovided.draggableProps.style\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{index + 1 + ': ' + item.content}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Draggable>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Droppable>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<br />\r\n\t\t\t</DragDropContext>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst enhancer = _flowRight(withStyles(styles));\r\nexport default enhancer(InstantRunoffVoteForm);\r\n","import React from 'react';\r\nimport _get from 'lodash/get';\r\nimport _isNil from 'lodash/isNil';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _includes from 'lodash/includes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Form, FieldArray } from 'formik';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withVote } from '../../context/VoteContext';\r\nimport { withNetwork } from '../../context/NetworkContext';\r\nimport { withFactomCli } from '../../context/FactomCliContext';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withLedger } from '../../context/LedgerContext';\r\nimport SectionHeader from '../shared/SectionHeader';\r\nimport ExplorerLink from '../shared/ExplorerLink';\r\nimport { isValidPrivateEcAddress } from 'factom/dist/factom';\r\nimport {\r\n\tREGEX_CHAIN_ID,\r\n\tBINARY_CONFIG,\r\n\tCOMMIT_HMAC_ALGO,\r\n\tSINGLE_OPTION_CONFIG,\r\n\tAPPROVAL_CONFIG,\r\n\tINSTANT_RUNOFF_CONFIG,\r\n} from '../create/VOTE_CONSTANTS';\r\nimport { app } from 'factom-identity-lib';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormTextField from '../../component/form/FormTextField';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport Save from '@material-ui/icons/Save';\r\nimport BinaryVoteForm from './BinaryVoteForm';\r\nimport { randomBytes } from 'crypto-browserify';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ApprovalVoteForm from './ApprovalVoteForm';\r\nimport SingleOptionVoteForm from './SingleOptionVoteForm';\r\nimport InstantRunoffVoteForm from './InstantRunoffVoteForm';\r\nimport fileDownload from 'js-file-download';\r\nimport sanitize from 'sanitize-filename';\r\nimport LedgerLogo from '../../component/logo/ledgerLogo.svg';\r\nimport Create from '@material-ui/icons/Create';\r\nimport { SVGLogo } from '../../component/logo/SVGLogo';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst MANUAL_SIG = 'manual';\r\nconst LEDGER_SIG = 'ledger';\r\n\r\nconst identityChainIDPath = 'identityChainID';\r\nconst identityKeyPath = 'identityKey';\r\nconst ecPrivateKeyPath = 'ecPrivateKey';\r\nconst transactionErrorPath = 'transactionError';\r\nconst processingPath = 'processing';\r\nconst votePath = 'vote';\r\nconst secretPath = 'secret';\r\nconst resultPath = 'result';\r\nconst resetAnswerFormPath = 'resetAnswerForm';\r\nconst abstainCheckboxPath = 'abstainCheckbox';\r\nconst revealDataPath = 'revealData';\r\nconst signatureTypePath = 'signatureType';\r\nconst ledgerStatusPath = 'ledgerStatus';\r\n\r\nconst titlePath = 'pollJSON.proposal.title';\r\nconst pollChainIdPath = 'pollJSON.voteChainId';\r\nconst voteTypePath = 'pollJSON.vote.type';\r\nconst maxOptionsPath = 'pollJSON.vote.config.maxOptions';\r\nconst textPath = 'pollJSON.proposal.text';\r\nconst hrefPath = 'pollJSON.proposal.externalRef.href';\r\nconst hashValuePath = 'pollJSON.proposal.externalRef.hash.value';\r\nconst hashAlgoPath = 'pollJSON.proposal.externalRef.hash.algo';\r\n\r\nclass CommitVoteForm extends React.Component {\r\n\thandleKeyPress(event) {\r\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tpoll,\r\n\t\t\tproposalEntries,\r\n\t\t\tvoteController: { commitVote, getPollType },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t\tledgerController: { signMessageRaw },\r\n\t\t\tfactomCliController: { blockHeight },\r\n\t\t} = this.props;\r\n\r\n\t\tconst voterList = proposalEntries.map((value) => value.voterId);\r\n\r\n\t\tconst entryHashURL = networkProps.explorerURL + '/entry?hash=';\r\n\r\n\t\tconst revealFileName = sanitize('Reveal_' + _get(poll, titlePath) + '.txt');\r\n\r\n\t\tconst pollType_o = getPollType(\r\n\t\t\t_get(poll, voteTypePath),\r\n\t\t\t_get(poll, maxOptionsPath)\r\n\t\t);\r\n\r\n\t\tlet AnswerForm;\r\n\t\tif (pollType_o.name === BINARY_CONFIG.name) {\r\n\t\t\tAnswerForm = BinaryVoteForm;\r\n\t\t} else if (pollType_o.name === SINGLE_OPTION_CONFIG.name) {\r\n\t\t\tAnswerForm = SingleOptionVoteForm;\r\n\t\t} else if (pollType_o.name === APPROVAL_CONFIG.name) {\r\n\t\t\tAnswerForm = ApprovalVoteForm;\r\n\t\t} else if (pollType_o.name === INSTANT_RUNOFF_CONFIG.name) {\r\n\t\t\tAnswerForm = InstantRunoffVoteForm;\r\n\t\t} else {\r\n\t\t\tAnswerForm = NoFormFound;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tvote: [],\r\n\t\t\t\t\tsecret: randomBytes(16).toString('hex'),\r\n\t\t\t\t\tidentityChainID: '',\r\n\t\t\t\t\tidentityKey: '',\r\n\t\t\t\t\tecPrivateKey: '',\r\n\t\t\t\t\tprocessing: false,\r\n\t\t\t\t\ttransactionError: null,\r\n\t\t\t\t\tresult: null,\r\n\t\t\t\t\tresetAnswerForm: false,\r\n\t\t\t\t\tabstainCheckbox: false,\r\n\t\t\t\t\trevealData: '',\r\n\t\t\t\t\tsignatureType: null,\r\n\t\t\t\t\tledgerStatus: null,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tactions.setFieldValue(transactionErrorPath, null);\r\n\t\t\t\t\tactions.setFieldValue(processingPath, true);\r\n\r\n\t\t\t\t\tconst signatureType = _get(values, signatureTypePath);\r\n\t\t\t\t\tlet identityChainId;\r\n\r\n\t\t\t\t\tconst commit_args = {\r\n\t\t\t\t\t\tvoteChainId: _get(poll, pollChainIdPath),\r\n\t\t\t\t\t\tvote: {\r\n\t\t\t\t\t\t\tvote: _get(values, votePath),\r\n\t\t\t\t\t\t\tsecret: _get(values, secretPath),\r\n\t\t\t\t\t\t\thmacAlgo: COMMIT_HMAC_ALGO,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tecPrivateAddress: _get(values, ecPrivateKeyPath),\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t// set voter identity\r\n\t\t\t\t\t\tif (signatureType === MANUAL_SIG) {\r\n\t\t\t\t\t\t\tidentityChainId = _get(values, identityChainIDPath);\r\n\r\n\t\t\t\t\t\t\tcommit_args.voter = {\r\n\t\t\t\t\t\t\t\tchainId: identityChainId,\r\n\t\t\t\t\t\t\t\tkey: _get(values, identityKeyPath),\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else if (signatureType === LEDGER_SIG) {\r\n\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\tledgerStatusPath,\r\n\t\t\t\t\t\t\t\t'Connecting to Ledger Nano S'\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst ledgerConnected = await this.props.ledgerController.isLedgerConnected();\r\n\r\n\t\t\t\t\t\t\tif (ledgerConnected) {\r\n\t\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t\tledgerStatusPath,\r\n\t\t\t\t\t\t\t\t\t'Waiting for user to confirm signature on Ledger Nano S device.'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\t\t\t'Ledger Nano S Not Found. Please connect your Ledger Nano S and try again.'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst ledgerIdentity_o = await this.props.ledgerController.getLedgerIdentityAddress(\r\n\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tidentityChainId = ledgerIdentity_o.chainid;\r\n\r\n\t\t\t\t\t\t\tcommit_args.voter = {\r\n\t\t\t\t\t\t\t\tchainId: ledgerIdentity_o.chainid,\r\n\t\t\t\t\t\t\t\tkey: ledgerIdentity_o.address,\r\n\t\t\t\t\t\t\t\tsign: signMessageRaw,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//commit vote\r\n\t\t\t\t\t\tconst result = await commitVote(commit_args);\r\n\r\n\t\t\t\t\t\tactions.setFieldValue(resultPath, result);\r\n\t\t\t\t\t\tactions.setFieldValue(processingPath, false);\r\n\t\t\t\t\t\tactions.setFieldValue(ledgerStatusPath, '');\r\n\r\n\t\t\t\t\t\t// setup reveal file data\r\n\t\t\t\t\t\tconst reveal_args = {\r\n\t\t\t\t\t\t\tvoteChainId: _get(poll, pollChainIdPath),\r\n\t\t\t\t\t\t\tvote: {\r\n\t\t\t\t\t\t\t\tvote: _get(values, votePath),\r\n\t\t\t\t\t\t\t\tsecret: _get(values, secretPath),\r\n\t\t\t\t\t\t\t\thmacAlgo: COMMIT_HMAC_ALGO,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvoterId: identityChainId,\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tactions.setFieldValue(revealDataPath, JSON.stringify(reveal_args));\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tawait actions.setFieldValue(resetAnswerFormPath, true);\r\n\t\t\t\t\t\tawait actions.resetForm();\r\n\t\t\t\t\t\tactions.setFieldValue(transactionErrorPath, 'Error: ' + e.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[abstainCheckboxPath]: Yup.boolean(),\r\n\t\t\t\t\t[votePath]: Yup.array().when(abstainCheckboxPath, {\r\n\t\t\t\t\t\tis: false,\r\n\t\t\t\t\t\tthen: Yup.array().required('Required'),\r\n\t\t\t\t\t\totherwise: Yup.array().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t[signatureTypePath]: Yup.string(),\r\n\t\t\t\t\t[identityChainIDPath]: Yup.string().when(signatureTypePath, {\r\n\t\t\t\t\t\tis: MANUAL_SIG,\r\n\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t.matches(REGEX_CHAIN_ID, {\r\n\t\t\t\t\t\t\t\tmessage: 'Invalid Chain ID',\r\n\t\t\t\t\t\t\t\texcludeEmptyString: true,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.test(identityChainIDPath, 'Not an eligible voter', (value) =>\r\n\t\t\t\t\t\t\t\t_includes(voterList, value)\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t[identityKeyPath]: Yup.string().when(signatureTypePath, {\r\n\t\t\t\t\t\tis: MANUAL_SIG,\r\n\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\t\tidentityKeyPath,\r\n\t\t\t\t\t\t\t\t'Invalid Identity Key',\r\n\t\t\t\t\t\t\t\tapp.isValidSecretIdentityKey\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t[ecPrivateKeyPath]: Yup.string()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(ecPrivateKeyPath, 'Invalid Key', isValidPrivateEcAddress),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\tsubmitCount,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tresetForm,\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tlet signTransactionTitle = 'Sign Transaction';\r\n\t\t\t\t\tif (_get(values, signatureTypePath) === LEDGER_SIG) {\r\n\t\t\t\t\t\tsignTransactionTitle += ' with Ledger Nano S';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\r\n\t\t\t\t\t\t\t<Grid container className={classes.pad}>\r\n\t\t\t\t\t\t\t\t<Grid item container xs={12}>\r\n\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Question\" />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item container xs={12}>\r\n\t\t\t\t\t\t\t\t\t{_get(poll, textPath) && (\r\n\t\t\t\t\t\t\t\t\t\t<Typography>{_get(poll, textPath)}</Typography>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{_get(poll, hrefPath) && (\r\n\t\t\t\t\t\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={2} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>URL Link:</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={_get(poll, hrefPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, hrefPath)}&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: 15,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttop: '1px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={2} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tHash Algorithm:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>{_get(poll, hashAlgoPath)}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={2} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>Hash Value:&nbsp;</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>{_get(poll, hashValuePath)}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t{_get(errors, votePath) && submitCount > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<SectionHeader\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\t\ttext=\"Answer *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography className={classes.errorText}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tRequired\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Answer\" />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FieldArray\r\n\t\t\t\t\t\t\t\t\t\tname={votePath}\r\n\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<AnswerForm\r\n\t\t\t\t\t\t\t\t\t\t\t\tpoll={poll}\r\n\t\t\t\t\t\t\t\t\t\t\t\tparentArrayHelpers={arrayHelpers}\r\n\t\t\t\t\t\t\t\t\t\t\t\tparentIsSubmitting={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\tparentReset={_get(values, resetAnswerFormPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tparentVoteArray={_get(values, votePath)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t{_get(errors, signatureTypePath) && submitCount > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t<SectionHeader\r\n\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\ttext={signTransactionTitle + ' *'}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<SectionHeader\r\n\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\ttext={signTransactionTitle}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{_isNil(_get(values, signatureTypePath)) && (\r\n\t\t\t\t\t\t\t\t\t<Grid xs={12} item>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(transactionErrorPath, null);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(signatureTypePath, MANUAL_SIG);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Create\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: 17 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitleAccess={'Manual Entry'}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;Manual Entry\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(transactionErrorPath, null);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(signatureTypePath, LEDGER_SIG);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t<SVGLogo\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.ledgerLogo}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={LedgerLogo}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"Ledger Logo\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Ledger Nano S\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{_get(values, signatureTypePath) === MANUAL_SIG && (\r\n\t\t\t\t\t\t\t\t\t<Grid xs={12} item container>\r\n\t\t\t\t\t\t\t\t\t\t<Grid xs={9} item>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={identityChainIDPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Voter Identity Chain ID *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, identityChainIDPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, identityChainIDPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid xs={3} item />\r\n\t\t\t\t\t\t\t\t\t\t<Grid xs={9} item>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={identityKeyPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Voter Identity Private Key *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, identityKeyPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, identityKeyPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid xs={3} item />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{_get(values, signatureTypePath) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t\t\t\t\t\t<Grid xs={9} item>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={ecPrivateKeyPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"EC Private Key *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, ecPrivateKeyPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, ecPrivateKeyPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid xs={3} item />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, transactionErrorPath)) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\r\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, transactionErrorPath)}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{_get(values, resultPath) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\r\n\t\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Success!\" color=\"green\" />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\tYour vote is pending confirmation. The entry will be\r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible in 10-15 minutes, after being included in block\r\n\t\t\t\t\t\t\t\t\t\t\t\t{' ' + (blockHeight + 1)}, currently being processed by\r\n\t\t\t\t\t\t\t\t\t\t\t\tthe Factom blockchain.\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<ExplorerLink\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Vote Commit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={_get(values, resultPath).entryHash}\r\n\t\t\t\t\t\t\t\t\t\t\t\thref={entryHashURL + _get(values, resultPath).entryHash}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfileDownload(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, revealDataPath),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trevealFileName\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Save />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp; Download Reveal File\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{_get(values, signatureTypePath) === LEDGER_SIG\r\n\t\t\t\t\t\t\t\t\t\t\t? 'Sign and Submit'\r\n\t\t\t\t\t\t\t\t\t\t\t: 'Submit'}\r\n\t\t\t\t\t\t\t\t\t\t{_get(values, processingPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={5} size={20} />\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t{isSubmitting && _get(values, ledgerStatusPath) && (\r\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.ledgerStatus}>\r\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, ledgerStatusPath)}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{isSubmitting && _get(values, resultPath) && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.resetButton}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tawait setFieldValue(resetAnswerFormPath, true);\r\n\t\t\t\t\t\t\t\t\t\t\t\tawait resetForm();\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst NoFormFound = (props) => (\r\n\t<div>\r\n\t\t<Typography style={{ color: 'red' }}>Invalid Vote Configuration</Typography>\r\n\t</div>\r\n);\r\n\r\nCommitVoteForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: '15px',\r\n\t},\r\n\ttransaction: {\r\n\t\tborderColor: '#6fbf73',\r\n\t\tborderStyle: 'solid',\r\n\t\tpadding: 10,\r\n\t},\r\n\ttransactionErrorText: { color: 'red', fontSize: '16px' },\r\n\terrorText: { color: 'red', fontSize: '13px' },\r\n\tledgerStatus: { display: 'inline-block', paddingLeft: '10px' },\r\n\tresetButton: { marginLeft: 2 },\r\n\tledgerLogo: { height: 16 },\r\n});\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithFactomCli,\r\n\twithVote,\r\n\twithLedger,\r\n\twithStyles(styles)\r\n);\r\nexport default enhancer(CommitVoteForm);\r\n","import React from 'react';\r\nimport _get from 'lodash/get';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isNil from 'lodash/isNil';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Form } from 'formik';\r\nimport Button from '@material-ui/core/Button';\r\nimport SectionHeader from '../shared/SectionHeader';\r\nimport FormTextField from '../../component/form/FormTextField';\r\nimport { withVote } from '../../context/VoteContext';\r\nimport { withNetwork } from '../../context/NetworkContext';\r\nimport { withFactomCli } from '../../context/FactomCliContext';\r\nimport { isValidPrivateEcAddress } from 'factom/dist/factom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExplorerLink from '../shared/ExplorerLink';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst workingFilePath = 'workingFile';\r\nconst workingFileNamePath = 'workingFileName';\r\nconst ecPrivateKeyPath = 'ecPrivateKey';\r\nconst transactionErrorPath = 'transactionError';\r\nconst revealJSONPath = 'revealJSON';\r\nconst processingPath = 'processing';\r\nconst resultPath = 'result';\r\nconst fileUploadErrorPath = 'fileUploadError';\r\n\r\nconst pollChainIdPath = 'voteChainId';\r\n\r\nclass RevealVoteForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.reader = new FileReader();\r\n\t}\r\n\r\n\thandleFile = async (file) => {\r\n\t\tawait this.reader.readAsText(file);\r\n\r\n\t\tthis.reader.onloadend = async (e) => {\r\n\t\t\tconst content = this.reader.result;\r\n\t\t\tconst json = JSON.parse(content);\r\n\r\n\t\t\tconst fileChainId = _get(json, pollChainIdPath);\r\n\r\n\t\t\tconst pollChainId = _get(this.props.poll, pollChainIdPath);\r\n\r\n\t\t\tif (fileChainId === pollChainId) {\r\n\t\t\t\t//correct reveal\r\n\t\t\t\tthis.setFieldValue(revealJSONPath, json);\r\n\t\t\t\tthis.setFieldValue(fileUploadErrorPath, null);\r\n\t\t\t} else {\r\n\t\t\t\t//invalid reveal\r\n\t\t\t\tawait this.resetForm();\r\n\t\t\t\tthis.setFieldValue(fileUploadErrorPath, 'Invalid Poll Chain ID');\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\thandleKeyPress(event) {\r\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t\tfactomCliController: { blockHeight },\r\n\t\t} = this.props;\r\n\r\n\t\tconst entryHashURL = networkProps.explorerURL + '/entry?hash=';\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tecPrivateKey: '',\r\n\t\t\t\t\tworkingFile: '',\r\n\t\t\t\t\tworkingFileName: '',\r\n\t\t\t\t\tprocessing: false,\r\n\t\t\t\t\ttransactionError: null,\r\n\t\t\t\t\trevealJSON: null,\r\n\t\t\t\t\tresult: null,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tactions.setFieldValue(transactionErrorPath, null);\r\n\t\t\t\t\tactions.setFieldValue(processingPath, true);\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t//reveal vote\r\n\t\t\t\t\t\tconst reveal = _get(values, revealJSONPath);\r\n\t\t\t\t\t\treveal.ecPrivateAddress = _get(values, ecPrivateKeyPath);\r\n\r\n\t\t\t\t\t\tconst result = await this.props.voteController.revealVote(reveal);\r\n\t\t\t\t\t\tconsole.log(result);\r\n\r\n\t\t\t\t\t\tactions.setFieldValue(resultPath, result);\r\n\t\t\t\t\t\tactions.setFieldValue(processingPath, false);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tawait actions.resetForm();\r\n\t\t\t\t\t\tactions.setFieldValue(transactionErrorPath, 'Error: ' + e.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[ecPrivateKeyPath]: Yup.string()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(ecPrivateKeyPath, 'Invalid Key', isValidPrivateEcAddress),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tresetForm,\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tthis.setFieldValue = setFieldValue;\r\n\t\t\t\t\tthis.resetForm = resetForm;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\r\n\t\t\t\t\t\t\t<Grid container className={classes.pad}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Reveal Vote\" />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\tname={workingFileNamePath}\r\n\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\taccept=\".txt\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={async (e) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingFilePath, e.target.files[0]);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tthis.handleFile(e.target.files[0]);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{!_isNil(_get(values, fileUploadErrorPath)) && (\r\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\r\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, fileUploadErrorPath)}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3} />\r\n\t\t\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\tname={ecPrivateKeyPath}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"EC Private Key *\"\r\n\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t_get(errors, ecPrivateKeyPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t_get(touched, ecPrivateKeyPath)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3} />\r\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, transactionErrorPath)) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\r\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, transactionErrorPath)}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{_get(values, resultPath) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\r\n\t\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Success!\" color=\"green\" />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\tYour vote is pending confirmation. The entry will be\r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible in 10-15 minutes, after being included in block\r\n\t\t\t\t\t\t\t\t\t\t\t\t{' ' + (blockHeight + 1)}, currently being processed by\r\n\t\t\t\t\t\t\t\t\t\t\t\tthe Factom blockchain.\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<ExplorerLink\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Vote Reveal\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={_get(values, resultPath).entryHash}\r\n\t\t\t\t\t\t\t\t\t\t\t\thref={entryHashURL + _get(values, resultPath).entryHash}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\t\tisSubmitting || !_get(values, workingFileNamePath)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tReveal Vote\r\n\t\t\t\t\t\t\t\t\t\t{_get(values, processingPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={5} size={20} />\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t{isSubmitting && _get(values, resultPath) && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.resetButton}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tresetForm();\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nRevealVoteForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: '15px',\r\n\t},\r\n\ttransactionErrorText: { color: 'red', fontSize: '16px' },\r\n\tresetButton: { marginLeft: 2 },\r\n\ttransaction: {\r\n\t\tborderColor: '#6fbf73',\r\n\t\tborderStyle: 'solid',\r\n\t\tpadding: 10,\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithFactomCli,\r\n\twithVote,\r\n\twithStyles(styles)\r\n);\r\nexport default enhancer(RevealVoteForm);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport Person from '@material-ui/icons/Person';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nclass EligibleVotersList extends React.Component {\r\n\trender() {\r\n\t\tconst { classes, eligibleVoters, arrayHelpers, errorMessage } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Paper elevation={2} className={classes.listContainer}>\r\n\t\t\t\t<Typography variant=\"subtitle1\">Eligible Voter List</Typography>\r\n\t\t\t\t{errorMessage}\r\n\t\t\t\t<List className={classes.list} dense>\r\n\t\t\t\t\t{eligibleVoters.length > 0 ? (\r\n\t\t\t\t\t\teligibleVoters.map((voter, index) => (\r\n\t\t\t\t\t\t\t<ListItem key={index} disableGutters divider>\r\n\t\t\t\t\t\t\t\t<Person />\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={'Voter ID: ' + voter.voterId}\r\n\t\t\t\t\t\t\t\t\tsecondary={voter.weight && 'Weight: ' + voter.weight}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{arrayHelpers && (\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.remove(index);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"Clear\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Clear />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ListItem disableGutters divider>\r\n\t\t\t\t\t\t\t<ListItemText primary={'No Voters have been added'} />\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</List>\r\n\t\t\t</Paper>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nEligibleVotersList.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tlist: {\r\n\t\toverflow: 'auto',\r\n\t\tmaxHeight: 350,\r\n\t},\r\n\tlistContainer: {\r\n\t\tmarginTop: '10px',\r\n\t\tpadding: '15px',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(EligibleVotersList);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport _get from 'lodash/get';\r\nimport _isNil from 'lodash/isNil';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport LabelImportant from '@material-ui/icons/LabelImportant';\r\nimport SectionHeader from '../shared/SectionHeader';\r\nimport { withNetwork } from '../../context/NetworkContext';\r\nimport { withFactomCli } from '../../context/FactomCliContext';\r\nimport { withVote } from '../../context/VoteContext';\r\nimport EligibleVotersList from '../shared/EligibleVotersList';\r\nimport ExplorerLink from './ExplorerLink';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport * as moment from 'moment';\r\n\r\nimport {\r\n\tBINARY_CONFIG,\r\n\tAPPROVAL_CONFIG,\r\n\tINSTANT_RUNOFF_CONFIG,\r\n\tALL_ELIGIBLE_VOTERS,\r\n\tPARTICIPANTS_ONLY,\r\n} from '../create/VOTE_CONSTANTS';\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\n//duplicates\r\nconst titlePath = 'pollJSON.proposal.title';\r\nconst commitStartPath = 'pollJSON.vote.phasesBlockHeights.commitStart';\r\nconst commitEndPath = 'pollJSON.vote.phasesBlockHeights.commitEnd';\r\nconst revealEndPath = 'pollJSON.vote.phasesBlockHeights.revealEnd';\r\nconst hrefPath = 'pollJSON.proposal.externalRef.href';\r\nconst hashValuePath = 'pollJSON.proposal.externalRef.hash.value';\r\nconst hashAlgoPath = 'pollJSON.proposal.externalRef.hash.algo';\r\nconst textPath = 'pollJSON.proposal.text';\r\nconst optionsPath = 'pollJSON.vote.config.options';\r\nconst voteTypePath = 'pollJSON.vote.type';\r\nconst abstentionPath = 'pollJSON.vote.config.allowAbstention';\r\nconst computeResultsAgainstPath = 'pollJSON.vote.config.computeResultsAgainst';\r\nconst minOptionsPath = 'pollJSON.vote.config.minOptions';\r\nconst maxOptionsPath = 'pollJSON.vote.config.maxOptions';\r\nconst minSupportPath = 'pollJSON.vote.config.winnerCriteria.minSupport';\r\nconst minTurnoutPath = 'pollJSON.vote.config.acceptanceCriteria.minTurnout';\r\n\r\nconst weightedMinTurnoutPath =\r\n\t'pollJSON.vote.config.acceptanceCriteria.minTurnout.weighted';\r\nconst unweightedMinTurnoutPath =\r\n\t'pollJSON.vote.config.acceptanceCriteria.minTurnout.unweighted';\r\nconst pollChainIdPath = 'pollJSON.voteChainId';\r\n\r\n//unique so far\r\nconst pollInitiatorIdPath = 'pollJSON.admin.voteInitiator';\r\n\r\nclass VoteSummary extends React.Component {\r\n\tasync componentDidMount() {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\tcalculateWriteTimeDisplay = (writeHeight) => {\r\n\t\tconst eventTimestamp = this.props.factomCliController.getEstimatedBlockTimestamp(\r\n\t\t\twriteHeight\r\n\t\t);\r\n\r\n\t\tconst eventDate = moment(eventTimestamp).utc();\r\n\r\n\t\tconst displayValue = eventDate.format('MMM DD YYYY, h:mm A');\r\n\r\n\t\treturn displayValue;\r\n\t};\r\n\r\n\tsupportsMinSupportCriteria = (voteType) => {\r\n\t\tlet result = true;\r\n\r\n\t\tif (voteType === INSTANT_RUNOFF_CONFIG.type) {\r\n\t\t\tresult = false;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tsupportsWeightedMinTurnoutCriteria = (voteType) => {\r\n\t\tlet result = true;\r\n\r\n\t\tif (voteType === INSTANT_RUNOFF_CONFIG.type) {\r\n\t\t\tresult = false;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\teligibleVoters,\r\n\t\t\tpoll,\r\n\t\t\tfactomCliController: { blockHeight },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t\tvoteController: { getPollType },\r\n\t\t} = this.props;\r\n\r\n\t\t// poll type text\r\n\t\tconst pollType_o = getPollType(\r\n\t\t\t_get(poll, voteTypePath),\r\n\t\t\t_get(poll, maxOptionsPath)\r\n\t\t);\r\n\r\n\t\tconst pollTypeText = pollType_o.name;\r\n\r\n\t\t// minimum support\r\n\t\tconst supportsMinSupportConfig = this.supportsMinSupportCriteria(\r\n\t\t\tpollType_o.type\r\n\t\t);\r\n\r\n\t\tlet minSupportOption;\r\n\t\tlet weightedMinSupportPath;\r\n\t\tlet unweightedMinSupportPath;\r\n\r\n\t\tif (supportsMinSupportConfig) {\r\n\t\t\tminSupportOption = Object.keys(_get(poll, minSupportPath))[0];\r\n\r\n\t\t\tweightedMinSupportPath =\r\n\t\t\t\tminSupportPath + '.' + minSupportOption + '.weighted';\r\n\t\t\tunweightedMinSupportPath =\r\n\t\t\t\tminSupportPath + '.' + minSupportOption + '.unweighted';\r\n\t\t}\r\n\r\n\t\t// minimum turnout\r\n\t\tconst hasMinTurnoutCriteria = !_isNil(_get(poll, minTurnoutPath));\r\n\t\tconst supportsWeightedMinTurnoutCriteria = this.supportsWeightedMinTurnoutCriteria(\r\n\t\t\tpollType_o.type\r\n\t\t);\r\n\r\n\t\t// date estimations\r\n\t\tlet commitStartDate = null;\r\n\t\tlet commitEndDate = null;\r\n\t\tlet revealStartDate = null;\r\n\t\tlet revealEndDate = null;\r\n\r\n\t\tif (blockHeight) {\r\n\t\t\tcommitStartDate = this.calculateWriteTimeDisplay(\r\n\t\t\t\t_get(poll, commitStartPath)\r\n\t\t\t);\r\n\t\t\tcommitEndDate = this.calculateWriteTimeDisplay(_get(poll, commitEndPath));\r\n\t\t\trevealStartDate = this.calculateWriteTimeDisplay(\r\n\t\t\t\t_get(poll, commitEndPath) + 1\r\n\t\t\t);\r\n\t\t\trevealEndDate = this.calculateWriteTimeDisplay(_get(poll, revealEndPath));\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<SectionHeader text=\"Poll Configuration\" />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{_get(poll, pollChainIdPath) && (\r\n\t\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t\t<ExplorerLink\r\n\t\t\t\t\t\t\tlabel=\"Poll Chain ID\"\r\n\t\t\t\t\t\t\tvalue={_get(poll, pollChainIdPath)}\r\n\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\r\n\t\t\t\t\t\t\t\t'/data?type=chain&key=' +\r\n\t\t\t\t\t\t\t\t_get(poll, pollChainIdPath)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t{_get(poll, pollInitiatorIdPath) && (\r\n\t\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t\t<ExplorerLink\r\n\t\t\t\t\t\t\tlabel=\"Poll Initiator\"\r\n\t\t\t\t\t\t\tvalue={_get(poll, pollInitiatorIdPath)}\r\n\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\r\n\t\t\t\t\t\t\t\t'/data?type=chain&key=' +\r\n\t\t\t\t\t\t\t\t_get(poll, pollInitiatorIdPath)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<Grid item container xs={5}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography gutterBottom>Title: {_get(poll, titlePath)}</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography gutterBottom>Type: {pollTypeText}</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\tAllow Abstain:&nbsp;\r\n\t\t\t\t\t\t\t{_get(poll, abstentionPath) ? 'True' : 'False'}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t{supportsMinSupportConfig && (\r\n\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\tCompute Results Against:&nbsp;\r\n\t\t\t\t\t\t\t\t{_get(poll, computeResultsAgainstPath) ===\r\n\t\t\t\t\t\t\t\tALL_ELIGIBLE_VOTERS.value\r\n\t\t\t\t\t\t\t\t\t? ALL_ELIGIBLE_VOTERS.text\r\n\t\t\t\t\t\t\t\t\t: PARTICIPANTS_ONLY.text}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item container xs={3}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\tCommit Start:&nbsp;{_get(poll, commitStartPath)}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\tCommit End:&nbsp;&nbsp;&nbsp;{_get(poll, commitEndPath)}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\tReveal Start:&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t{_get(poll, commitEndPath) + 1}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\tReveal End:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t{_get(poll, revealEndPath)}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item container xs={4}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography>{commitStartDate} UTC</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography>{commitEndDate} UTC</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography>{revealStartDate} UTC</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography>{revealEndDate} UTC</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<SectionHeader text=\"Question\" />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{_get(poll, hrefPath) && (\r\n\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom>URL Link:</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\thref={_get(poll, hrefPath)}\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t{_get(poll, hrefPath)}&nbsp;\r\n\t\t\t\t\t\t\t\t\t<OpenInNew\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: 15,\r\n\t\t\t\t\t\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\t\t\t\t\t\ttop: '1px',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom>Hash Algorithm:&nbsp;</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t<Typography>{_get(poll, hashAlgoPath)}</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom>Hash Value:&nbsp;</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t<Typography>{_get(poll, hashValuePath)}</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t{_get(poll, textPath) && (\r\n\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\tQuestion: {_get(poll, textPath)}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<SectionHeader text=\"Answers\" />\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Paper elevation={1} className={classes.pad}>\r\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">Options</Typography>\r\n\t\t\t\t\t\t<Grid container spacing={24}>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<List dense>\r\n\t\t\t\t\t\t\t\t\t{_get(poll, optionsPath) &&\r\n\t\t\t\t\t\t\t\t\t\t_get(poll, optionsPath).map((option, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdivider={index < _get(poll, optionsPath).length - 1}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<LabelImportant style={{ fontSize: 15 }} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tprimary={option}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.option}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{(pollType_o.name === APPROVAL_CONFIG.name ||\r\n\t\t\t\t\t\t\t\t\tpollType_o.name === INSTANT_RUNOFF_CONFIG.name) && (\r\n\t\t\t\t\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\tMinimum Options Allowed:&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, minOptionsPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\tMaximum Options Allowed:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, maxOptionsPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<SectionHeader text=\"Winner Criteria\" />\r\n\t\t\t\t\t{supportsMinSupportConfig ? (\r\n\t\t\t\t\t\t<List dense>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.defaultCursor}\r\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.defaultCursor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Minimum Support\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t\t{!_isNil(_get(poll, weightedMinSupportPath)) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{!_get(poll, unweightedMinSupportPath) && <br />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWeighted Ratio:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, weightedMinSupportPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{!_isNil(_get(poll, unweightedMinSupportPath)) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{!_get(poll, weightedMinSupportPath) && <br />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnweighted Ratio:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, unweightedMinSupportPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t{pollType_o.name === BINARY_CONFIG.name ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\tApplies to option: {minSupportOption}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>Applies to all options</Typography>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Typography>Not Applicable</Typography>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<SectionHeader text=\"Acceptance Criteria\" />\r\n\t\t\t\t\t{hasMinTurnoutCriteria ? (\r\n\t\t\t\t\t\t<List dense>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.defaultCursor}\r\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={hasMinTurnoutCriteria}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.defaultCursor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Minimum Turnout\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t\t{supportsWeightedMinTurnoutCriteria &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t!_isNil(_get(poll, weightedMinTurnoutPath)) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!_get(poll, unweightedMinTurnoutPath) && <br />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWeighted Ratio:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, weightedMinTurnoutPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{!_isNil(_get(poll, unweightedMinTurnoutPath)) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{!_get(poll, weightedMinTurnoutPath) && <br />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnweighted Ratio:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, unweightedMinTurnoutPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography>Applies to all options</Typography>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Typography>None</Typography>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{eligibleVoters && (\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<EligibleVotersList eligibleVoters={eligibleVoters} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nVoteSummary.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: 15,\r\n\t},\r\n\tsmallGridColumn: {\r\n\t\tflexBasis: '19%',\r\n\t},\r\n\toption: {\r\n\t\toverflowWrap: 'break-word',\r\n\t},\r\n\tdefaultCursor: {\r\n\t\tcursor: 'default',\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithFactomCli,\r\n\twithVote,\r\n\twithStyles(styles)\r\n);\r\nexport default enhancer(VoteSummary);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport _isNil from 'lodash/isNil';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Done from '@material-ui/icons/Done';\r\nimport Close from '@material-ui/icons/Close';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport { withNetwork } from '../../context/NetworkContext';\r\nimport ExplorerLink from '../shared/ExplorerLink';\r\nimport { POLL_STATUSES } from '../create/VOTE_CONSTANTS';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\n\r\nconst createVoterRow = (voterID, commit, reveal, weight) => {\r\n\treturn { voterID, commit, reveal, weight };\r\n};\r\n\r\nclass ParticipantsTab extends React.Component {\r\n\tstate = {\r\n\t\texpand: false,\r\n\t};\r\n\r\n\ttoggleExpand = () => {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\texpand: !prevState.expand,\r\n\t\t}));\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\teligibleVotersChainId,\r\n\t\t\tproposalEntries,\r\n\t\t\tstatus_o,\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tconst entryHashURL = networkProps.explorerURL + '/entry?hash=';\r\n\r\n\t\tlet tableRows = [];\r\n\r\n\t\tproposalEntries.forEach((voter_o) => {\r\n\t\t\tconst row = createVoterRow(\r\n\t\t\t\tvoter_o.voterId,\r\n\t\t\t\tvoter_o.commit,\r\n\t\t\t\tvoter_o.reveal,\r\n\t\t\t\tvoter_o.weight\r\n\t\t\t);\r\n\t\t\ttableRows.push(row);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.tableWrapper}>\r\n\t\t\t\t<Grid item xs={12} container className={classes.voterChain}>\r\n\t\t\t\t\t<ExplorerLink\r\n\t\t\t\t\t\tlabel=\"Eligible Voters Chain\"\r\n\t\t\t\t\t\tvalue={eligibleVotersChainId}\r\n\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\tnetworkProps.explorerURL +\r\n\t\t\t\t\t\t\t'/data?type=chain&key=' +\r\n\t\t\t\t\t\t\teligibleVotersChainId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<th className={classes.expandColumn}>\r\n\t\t\t\t\t\t\t\t{this.state.expand ? (\r\n\t\t\t\t\t\t\t\t\t<ExpandLess\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.toggleExpand}\r\n\t\t\t\t\t\t\t\t\t\ttitleAccess=\"Collapse Table\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMore\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.toggleExpand}\r\n\t\t\t\t\t\t\t\t\t\ttitleAccess=\"Expand Table\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t{this.state.expand ? (\r\n\t\t\t\t\t\t\t\t<TableCell>Voter ID</TableCell>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<TableCell className={classes.chainIDColumn}>\r\n\t\t\t\t\t\t\t\t\tVoter ID\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<TableCell>Commit</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Reveal</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Weight</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{_isEmpty(tableRows) && (\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<td className={classes.expandColumn} />\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<Typography>No Eligible Voters</Typography>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell />\r\n\t\t\t\t\t\t\t\t<TableCell />\r\n\t\t\t\t\t\t\t\t<TableCell />\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{tableRows.map((row) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableRow key={row.voterID}>\r\n\t\t\t\t\t\t\t\t\t<td className={classes.expandColumn} />\r\n\t\t\t\t\t\t\t\t\t{this.state.expand ? (\r\n\t\t\t\t\t\t\t\t\t\t<TableCell>{row.voterID}</TableCell>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.chainIDColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t{row.voterID}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<TableCell style={{ minWidth: 131 }}>\r\n\t\t\t\t\t\t\t\t\t\t{!_isNil(row.commit) && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container alignItems=\"flex-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Done\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'green', display: 'inline-block' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'inline-block' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={entryHashURL + row.commit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.openInNew}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t{_isNil(row.commit) &&\r\n\t\t\t\t\t\t\t\t\t\t\t(status_o.value === POLL_STATUSES['reveal'].value ||\r\n\t\t\t\t\t\t\t\t\t\t\t\tstatus_o.value === POLL_STATUSES['complete'].value) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Close color=\"secondary\" />\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell style={{ minWidth: 131 }}>\r\n\t\t\t\t\t\t\t\t\t\t{!_isNil(row.reveal) && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container alignItems=\"flex-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Done\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'green', display: 'inline-block' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'inline-block' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={entryHashURL + row.reveal}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.openInNew}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t{_isNil(row.reveal) &&\r\n\t\t\t\t\t\t\t\t\t\t\tstatus_o.value === POLL_STATUSES['complete'].value && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Close color=\"secondary\" />\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row.weight}</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nParticipantsTab.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\ttableWrapper: {\r\n\t\toverflowX: 'auto',\r\n\t},\r\n\texpandColumn: {\r\n\t\tmaxWidth: '3px',\r\n\t},\r\n\tchainIDColumn: {\r\n\t\tmaxWidth: '265px',\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t},\r\n\terrorText: {\r\n\t\tcolor: 'red',\r\n\t},\r\n\tvoterChain: {\r\n\t\tpaddingTop: '20px',\r\n\t\tpaddingLeft: '5px',\r\n\t},\r\n\topenInNew: { fontSize: 15 },\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\r\nexport default enhancer(ParticipantsTab);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst VoteResult = ({ result }) => {\r\n\treturn (\r\n\t\t<ExpansionPanel>\r\n\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n\t\t\t\t<Typography style={{ fontWeight: 500 }}>Result</Typography>\r\n\t\t\t</ExpansionPanelSummary>\r\n\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={12} />\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<pre>{JSON.stringify(result, null, 2)}</pre>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</ExpansionPanelDetails>\r\n\t\t</ExpansionPanel>\r\n\t);\r\n};\r\n\r\nconst styles = (theme) => ({});\r\n\r\nexport default withStyles(styles)(VoteResult);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CommitVoteForm from './CommitVoteForm';\r\nimport RevealVoteForm from './RevealVoteForm';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport QS from 'qs';\r\nimport VoteSummary from '../shared/VoteSummary';\r\nimport ParticipantsTab from './ParticipantsTab';\r\nimport VoteResult from './VoteResult';\r\nimport { withVote } from '../../context/VoteContext';\r\nimport { withFactomCli } from '../../context/FactomCliContext';\r\nimport { withWalletContext } from '../../context/WalletContext';\r\nimport { withNetwork } from '../../context/NetworkContext';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport SectionHeader from '../shared/SectionHeader';\r\nimport Countdown from 'react-countdown-now';\r\n\r\nconst GET_VOTE = gql`\r\n\tquery Vote($chain: String!) {\r\n\t\tproposal(chain: $chain) {\r\n\t\t\tvoteChainId\r\n\r\n\t\t\tadmin {\r\n\t\t\t\tvoteInitiator\r\n\t\t\t\tprotocolVersion\r\n\t\t\t}\r\n\r\n\t\t\tproposal {\r\n\t\t\t\ttitle\r\n\t\t\t\ttext\r\n\t\t\t\texternalRef\r\n\t\t\t}\r\n\r\n\t\t\tvote {\r\n\t\t\t\tphasesBlockHeights {\r\n\t\t\t\t\tcommitStart\r\n\t\t\t\t\tcommitEnd\r\n\t\t\t\t\trevealEnd\r\n\t\t\t\t}\r\n\t\t\t\teligibleVotersChainId\r\n\t\t\t\ttype\r\n\t\t\t\tconfig {\r\n\t\t\t\t\toptions\r\n\t\t\t\t\tallowAbstention\r\n\t\t\t\t\tcomputeResultsAgainst\r\n\t\t\t\t\tminOptions\r\n\t\t\t\t\tmaxOptions\r\n\t\t\t\t\twinnerCriteria\r\n\t\t\t\t\tacceptanceCriteria\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst GET_RESULT = gql`\r\n\tquery Result($voteChain: String!) {\r\n\t\tresult(voteChain: $voteChain) {\r\n\t\t\tabstain\r\n\t\t\tchainId\r\n\t\t\tinvalidReason\r\n\t\t\toptions\r\n\t\t\tsupport\r\n\t\t\ttotal\r\n\t\t\tturnout\r\n\t\t\tvalid\r\n\t\t\tvoted\r\n\t\t\tweightedWinners\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst GET_VOTERS = gql`\r\n\tquery Voters($chain: String!) {\r\n\t\tproposalEntries(chain: $chain) {\r\n\t\t\tvoterId\r\n\t\t\tcommit\r\n\t\t\treveal\r\n\t\t\tweight\r\n\t\t\t# entryHash\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nclass VoteTabContent extends React.Component {\r\n\tstate = {\r\n\t\ttabValue: 0,\r\n\t\tpollChainId: null,\r\n\t};\r\n\r\n\thandleTabChange = (event, value) => {\r\n\t\tthis.setState({ tabValue: value });\r\n\t};\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tconst queryParams = QS.parse(this.props.location.search, {\r\n\t\t\tignoreQueryPrefix: true,\r\n\t\t});\r\n\r\n\t\tthis.setState({ pollChainId: queryParams.id });\r\n\r\n\t\t// check network\r\n\t\tconst requestedNetwork = queryParams.network;\r\n\t\tconst currentNetwork = this.props.networkController.networkProps.network;\r\n\r\n\t\tif (requestedNetwork !== currentNetwork) {\r\n\t\t\t//switch networks\r\n\t\t\tthis.props.walletController.handleNetworkChange(requestedNetwork);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tvoteController: { getPollStatus, getPhaseEndBlock },\r\n\t\t\tfactomCliController: { getEstimatedBlockTimestamp },\r\n\t\t} = this.props;\r\n\r\n\t\tconst pollChainId = this.state.pollChainId;\r\n\r\n\t\treturn (\r\n\t\t\t<Grid container spacing={24}>\r\n\t\t\t\t<Grid item xs={2} />\r\n\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t<Paper className={classes.pad}>\r\n\t\t\t\t\t\t{pollChainId && (\r\n\t\t\t\t\t\t\t<Query\r\n\t\t\t\t\t\t\t\tquery={GET_VOTE}\r\n\t\t\t\t\t\t\t\tvariables={{\r\n\t\t\t\t\t\t\t\t\tchain: pollChainId,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{({ loading, error, data }) => {\r\n\t\t\t\t\t\t\t\t\tif (loading) return <PreLoadHeader message=\"Loading...\" />;\r\n\t\t\t\t\t\t\t\t\tif (error)\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<PreLoadHeader\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmessage={'Error: ' + error.message}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\tconst poll_o = data.proposal;\r\n\r\n\t\t\t\t\t\t\t\t\tconst phasesBlockHeights = poll_o.vote.phasesBlockHeights;\r\n\r\n\t\t\t\t\t\t\t\t\tconst status_o = getPollStatus(phasesBlockHeights);\r\n\t\t\t\t\t\t\t\t\tconst phaseEndBlock = getPhaseEndBlock(phasesBlockHeights);\r\n\r\n\t\t\t\t\t\t\t\t\tconst countdownTimestamp = getEstimatedBlockTimestamp(\r\n\t\t\t\t\t\t\t\t\t\tphaseEndBlock + 1\r\n\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Query\r\n\t\t\t\t\t\t\t\t\t\t\tquery={GET_VOTERS}\r\n\t\t\t\t\t\t\t\t\t\t\tvariables={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tchain: poll_o.voteChainId,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{({ loading, error, data }) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (loading)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <PreLoadHeader message=\"Loading...\" />;\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (error)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PreLoadHeader\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage={'Error: ' + error.message}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst proposalEntries_o = data.proposalEntries;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{poll_o.proposal.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={classes.pad}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{status_o.value === 'complete' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SectionHeader\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext=\"Poll Complete\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStatus:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{status_o.displayValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Countdown\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={countdownTimestamp}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderer={RenderCountdown}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{status_o.value === 'complete' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Query\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquery={GET_RESULT}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariables={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteChain: poll_o.voteChainId,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{({ loading, error, data }) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (loading)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLoading result...\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (error)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tError loading result:{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{error.message}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<VoteResult result={data.result} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Query>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={classes.pad}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.tabValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleTabChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextColor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tab label=\"Poll Configuration\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tab label=\"View Voters\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{status_o.value === 'commit' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tab label=\"Commit Vote\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{status_o.value === 'reveal' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tab label=\"Reveal Vote\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.tabValue === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container className={classes.pad}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<VoteSummary poll={{ pollJSON: poll_o }} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.tabValue === 1 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ParticipantsTab\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teligibleVotersChainId={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpoll_o.vote.eligibleVotersChainId\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproposalEntries={proposalEntries_o}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatus_o={status_o}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.tabValue === 2 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatus_o.value === 'commit' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CommitVoteForm\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpoll={{ pollJSON: poll_o }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproposalEntries={proposalEntries_o}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.tabValue === 2 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatus_o.value === 'reveal' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RevealVoteForm poll={poll_o} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t</Query>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t</Query>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={2} />\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst PreLoadHeader = (props) => {\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Typography className={props.className}>{props.message}</Typography>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nVoteTabContent.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: 15,\r\n\t},\r\n\tsmallGridColumn: {\r\n\t\tflexBasis: '19%',\r\n\t},\r\n\terrorText: {\r\n\t\tcolor: 'red',\r\n\t},\r\n});\r\n\r\nconst RenderCountdown = ({ days, hours, minutes, seconds, completed }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<br />\r\n\t\t\t<Typography\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: 'inline',\r\n\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t}}\r\n\t\t\t\tgutterBottom\r\n\t\t\t>\r\n\t\t\t\tRemaining Time:{' '}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t{completed ? (\r\n\t\t\t\t\t'The final block in this phase is almost complete.'\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{days} days, {hours} hours, {minutes} minutes, {seconds} seconds\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)}\r\n\t\t\t</Typography>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithFactomCli,\r\n\twithWalletContext,\r\n\twithVote,\r\n\twithStyles(styles)\r\n);\r\nexport default enhancer(VoteTabContent);\r\n","import React from 'react';\r\nimport _get from 'lodash/get';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport _isFinite from 'lodash/isFinite';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Form, FieldArray } from 'formik';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport SectionHeader from '../shared/SectionHeader';\r\nimport FormTextField from '../../component/form/FormTextField';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport { ApolloConsumer } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport EligibleVotersList from '../shared/EligibleVotersList';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { REGEX_CHAIN_ID } from './VOTE_CONSTANTS';\r\n\r\n/**\r\n * Queries\r\n */\r\nconst GET_VOTERS = gql`\r\n\tquery Voters($chain: String!) {\r\n\t\teligibleVoters(chain: $chain) {\r\n\t\t\tvoters {\r\n\t\t\t\tvoterId\r\n\t\t\t\tweight\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\n/**\r\n * Constants\r\n */\r\nconst eligibleVotersPath = 'eligibleVoters';\r\n// form specific fields\r\nconst selectedListPath = 'formFields.selectedList';\r\nconst workingIdentityChainIdPath = 'formFields.workingIdentityChainId';\r\nconst workingWeightPath = 'formFields.workingWeight';\r\nconst workingEligibleChainIdPath = 'formFields.workingEligibleChainId';\r\nconst loadingVotersPath = 'formFields.loadingVoters';\r\nconst loadErrorMessagePath = 'formFields.loadErrorMessage';\r\nconst loadSuccessMessagePath = 'formFields.loadSuccessMessage';\r\nconst workingFileNamePath = 'formFields.workingFileName';\r\nconst workingFilePath = 'formFields.workingFile';\r\n\r\nfunction formatVoter(voterId, weight) {\r\n\treturn {\r\n\t\tvoterId,\r\n\t\tweight,\r\n\t};\r\n}\r\n\r\nclass EligibleVotersForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.reader = new FileReader();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\thandleKeyPress(event) {\r\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tisValidVoter = (voter_o) => {\r\n\t\t// test weight\r\n\t\tconst weight = _get(voter_o, 'weight');\r\n\t\tif (!_isFinite(weight) || !(weight > 0)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// test voter Id\r\n\t\tconst voterId = _get(voter_o, 'voterId');\r\n\t\tif (!REGEX_CHAIN_ID.test(voterId)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\thandleFile = (file) => {\r\n\t\tthis.reader.readAsText(file);\r\n\r\n\t\tthis.reader.onloadend = (e) => {\r\n\t\t\tconst content = this.reader.result;\r\n\t\t\tconst voterList = content.trim().split('\\n');\r\n\r\n\t\t\tlet newVoterList = [];\r\n\t\t\tlet invalidData = false;\r\n\r\n\t\t\tfor (let index = 1; index < voterList.length; index++) {\r\n\t\t\t\tconst attributes = voterList[index].trim().split(',');\r\n\t\t\t\tconst voter_o = formatVoter(attributes[0], parseInt(attributes[1]));\r\n\t\t\t\tif (this.isValidVoter(voter_o)) {\r\n\t\t\t\t\tnewVoterList.push(voter_o);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinvalidData = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (invalidData || _isEmpty(newVoterList)) {\r\n\t\t\t\tthis.setFieldValue(loadErrorMessagePath, '* Invalid CSV data');\r\n\t\t\t} else {\r\n\t\t\t\tnewVoterList.forEach((voter_o) => {\r\n\t\t\t\t\tthis.handleVoter(voter_o);\r\n\t\t\t\t});\r\n\t\t\t\tthis.setFieldValue(\r\n\t\t\t\t\tloadSuccessMessagePath,\r\n\t\t\t\t\tnewVoterList.length + ' voters loaded'\r\n\t\t\t\t);\r\n\t\t\t\tthis.setFieldValue(workingFilePath, '');\r\n\t\t\t\tthis.setFieldValue(workingFileNamePath, '');\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\thandleVoterChainId = async (chain) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tdata: { eligibleVoters },\r\n\t\t\t} = await this.apolloClient.query({\r\n\t\t\t\tquery: GET_VOTERS,\r\n\t\t\t\tvariables: { chain },\r\n\t\t\t});\r\n\t\t\tconst voterData = _get(eligibleVoters, 'voters');\r\n\r\n\t\t\tif (!_isEmpty(voterData)) {\r\n\t\t\t\t// data found\r\n\t\t\t\tvoterData.forEach(({ voterId, weight }) => {\r\n\t\t\t\t\tthis.handleVoter(formatVoter(voterId, weight));\r\n\t\t\t\t});\r\n\t\t\t\tthis.setFieldValue(\r\n\t\t\t\t\tloadSuccessMessagePath,\r\n\t\t\t\t\tvoterData.length + ' voters loaded'\r\n\t\t\t\t);\r\n\t\t\t\tthis.setFieldValue(workingEligibleChainIdPath, '');\r\n\t\t\t} else {\r\n\t\t\t\t// no data found\r\n\t\t\t\tthis.setFieldValue(loadErrorMessagePath, '* No voters found');\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.setFieldValue(loadErrorMessagePath, '* An Error has occured');\r\n\t\t}\r\n\t};\r\n\r\n\thandleVoter = (voter_o) => {\r\n\t\tif (this.isValidVoter(voter_o)) {\r\n\t\t\tconst voterIndex = this.findVoter(voter_o.voterId);\r\n\r\n\t\t\t// if voter exists\r\n\t\t\tif (voterIndex !== -1) {\r\n\t\t\t\t// replace voter\r\n\t\t\t\tthis.arrayHelpers.replace(voterIndex, voter_o);\r\n\t\t\t} else {\r\n\t\t\t\t// add new voter\r\n\t\t\t\tthis.arrayHelpers.push(voter_o);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tfindVoter = (voterId) =>\r\n\t\tthis.currentEligibleVoters.findIndex(\r\n\t\t\t(voter_o) => voter_o.voterId === voterId\r\n\t\t);\r\n\r\n\tresetAddVoterFields = () => {\r\n\t\tthis.setFieldValue(workingIdentityChainIdPath, '');\r\n\t\tthis.setFieldValue(workingWeightPath, '');\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { eligibleVotersForm, classes, updateParticipants } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={eligibleVotersForm}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\t// update participants\r\n\t\t\t\t\tupdateParticipants(values);\r\n\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\teligibleVoters: Yup.array().required('* Add at least one voter'),\r\n\t\t\t\t\tformFields: Yup.object().shape({\r\n\t\t\t\t\t\tworkingWeight: Yup.number()\r\n\t\t\t\t\t\t\t.transform((currentValue, originalValue) => {\r\n\t\t\t\t\t\t\t\treturn originalValue === '' ? undefined : currentValue;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.moreThan(0, 'Must be a positive number'),\r\n\t\t\t\t\t\tworkingIdentityChainId: Yup.string().matches(REGEX_CHAIN_ID, {\r\n\t\t\t\t\t\t\tmessage: 'Invalid Chain ID',\r\n\t\t\t\t\t\t\texcludeEmptyString: true,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tworkingEligibleChainId: Yup.string().matches(REGEX_CHAIN_ID, {\r\n\t\t\t\t\t\t\tmessage: 'Invalid Chain ID',\r\n\t\t\t\t\t\t\texcludeEmptyString: true,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t}),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\tsubmitCount,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tthis.setFieldValue = setFieldValue;\r\n\t\t\t\t\tthis.currentEligibleVoters = _get(values, eligibleVotersPath);\r\n\t\t\t\t\tthis.workingAddVoter_o = formatVoter(\r\n\t\t\t\t\t\t_get(values, workingIdentityChainIdPath),\r\n\t\t\t\t\t\t_get(values, workingWeightPath)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\r\n\t\t\t\t\t\t\t<ApolloConsumer>\r\n\t\t\t\t\t\t\t\t{(client) => {\r\n\t\t\t\t\t\t\t\t\tthis.apolloClient = client;\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<FieldArray\r\n\t\t\t\t\t\t\t\t\t\t\tname={eligibleVotersPath}\r\n\t\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.arrayHelpers = arrayHelpers;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container className={classes.pad}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Select Voters\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item container xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={selectedListPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={_get(values, selectedListPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"custom\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Custom List\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"standing\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Standing Parties\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, selectedListPath) === 'custom' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.borders}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontWeight: 500 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Voter\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Identity Chain ID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingIdentityChainIdPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingIdentityChainIdPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingIdentityChainIdPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.which === 13 /* Enter */ &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.isValidVoter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleVoter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.resetAddVoterFields();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Weight\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingWeightPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingWeightPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingWeightPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.which === 13 /* Enter */ &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.isValidVoter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleVoter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.resetAddVoterFields();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleVoter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.resetAddVoterFields();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.isValidVoter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingIdentityChainIdPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.findVoter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o.voterId\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) !== -1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'Replace'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'Add'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, selectedListPath) === 'custom' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txs={5}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.padLoadVoters}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontWeight: 500 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLoad Voters\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingFileNamePath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccept=\".csv\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset working chain ID field\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingFilePath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.files[0]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'https://docs.google.com/spreadsheets/d/1vK0277pI7BlGKGRFf93C5wwBb1O0K1KuFH8XkeB9IFI/edit?usp=sharing'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ fontSize: 12 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: 13,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlign: 'text-top',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Eligible Voters Chain ID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingEligibleChainIdPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset file field\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingFilePath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingFileNamePath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// start loading indicator\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tloadingVotersPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tloadErrorMessagePath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tloadSuccessMessagePath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handle voter chain ID\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleVoterChainId(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingFileNamePath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handle file upload\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleFile(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingFilePath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// stop loading indicator\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.setTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tloadingVotersPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}, 500);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!REGEX_CHAIN_ID.test(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!_get(values, workingFileNamePath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLoad\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, loadingVotersPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthickness={5}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={20}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, loadErrorMessagePath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, loadErrorMessagePath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, loadSuccessMessagePath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.successText}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, loadSuccessMessagePath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={5} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, selectedListPath) === 'custom' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EligibleVotersList\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teligibleVoters={_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teligibleVotersPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers={arrayHelpers}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessage={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubmitCount > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeof _get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teligibleVotersPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) === 'string' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(errors, eligibleVotersPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.stepperButtons}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.handleBack}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t</ApolloConsumer>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nEligibleVotersForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: '15px',\r\n\t},\r\n\tborders: {\r\n\t\tborderRightStyle: 'solid',\r\n\t\tborderRightColor: 'lightgray',\r\n\t\tborderRightWidth: '1px',\r\n\t\tborderLeftStyle: 'solid',\r\n\t\tborderLeftColor: 'lightgray',\r\n\t\tborderLeftWidth: '1px',\r\n\t\tpadding: '10px',\r\n\t},\r\n\tpadLoadVoters: {\r\n\t\tpadding: '10px',\r\n\t},\r\n\tstepperButtons: {\r\n\t\tmarginLeft: '-15px',\r\n\t},\r\n\terrorText: {\r\n\t\tcolor: 'red',\r\n\t\tfontSize: '14px',\r\n\t\tborderColor: 'red',\r\n\t\tborderStyle: 'solid',\r\n\t\tpadding: 8,\r\n\t\twidth: 168,\r\n\t},\r\n\tsuccessText: {\r\n\t\tcolor: 'green',\r\n\t\tfontSize: '14px',\r\n\t\tborderColor: 'green',\r\n\t\tborderStyle: 'solid',\r\n\t\tpadding: 8,\r\n\t\twidth: 168,\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(EligibleVotersForm);\r\n","import React from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport _isNil from 'lodash/isNil';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _get from 'lodash/get';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withVote } from '../../context/VoteContext';\r\nimport { withNetwork } from '../../context/NetworkContext';\r\nimport { withFactomCli } from '../../context/FactomCliContext';\r\nimport { withLedger } from '../../context/LedgerContext';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport SectionHeader from '../shared/SectionHeader';\r\nimport FormTextField from '../../component/form/FormTextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { isValidPrivateEcAddress } from 'factom/dist/factom';\r\nimport { computeVoteCreationCost } from 'factom-vote/dist/factom-vote';\r\nimport { app } from 'factom-identity-lib';\r\nimport { REGEX_CHAIN_ID } from './VOTE_CONSTANTS';\r\nimport LedgerLogo from '../../component/logo/ledgerLogo.svg';\r\nimport Create from '@material-ui/icons/Create';\r\nimport { SVGLogo } from '../../component/logo/SVGLogo';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst MANUAL_SIG = 'manual';\r\nconst LEDGER_SIG = 'ledger';\r\nconst identityChainIDPath = 'identityChainID';\r\nconst identityKeyPath = 'identityKey';\r\nconst ecPrivateKeyPath = 'ecPrivateKey';\r\nconst commitStartBlockPath = 'commitStartBlock';\r\nconst transactionErrorPath = 'transactionError';\r\nconst ledgerStatusPath = 'ledgerStatus';\r\nconst signatureTypePath = 'signatureType';\r\n\r\nconst commitStartPath = 'pollJSON.vote.phasesBlockHeights.commitStart';\r\n\r\nconst EXAMPLE_IDENTITY = {\r\n\tchainId: '039b14a782008c1b1543b1542941756e6f01a0d68372ff61163642382af70fc9',\r\n\tkey: 'idsec2wH72BNR9QZhTMGDbxwLWGrghZQexZvLTros2wCekkc62N9h7s',\r\n};\r\n\r\nclass SubmitVoteForm extends React.Component {\r\n\tstate = { voteCreationCost: null };\r\n\r\n\tcomponentDidMount = async () => {\r\n\t\tconst voteData = {\r\n\t\t\tdefinition: this.props.poll.pollJSON,\r\n\t\t\tregistrationChainId: this.props.networkController.networkProps\r\n\t\t\t\t.voteRegistrationChainID,\r\n\t\t\teligibleVoters: this.props.eligibleVoters,\r\n\t\t\tidentity: EXAMPLE_IDENTITY,\r\n\t\t};\r\n\t\tconst voteCreationCost = await computeVoteCreationCost(voteData);\r\n\t\tthis.setState({ voteCreationCost });\r\n\t};\r\n\r\n\tvalidateEcPrivateKey = async (value) => {\r\n\t\tif (!isValidPrivateEcAddress(value)) {\r\n\t\t\treturn 'Invalid Key';\r\n\t\t}\r\n\r\n\t\tconst balance = await this.props.factomCliController.factomCli.getBalance(\r\n\t\t\tvalue\r\n\t\t);\r\n\r\n\t\tif (this.state.voteCreationCost > balance) {\r\n\t\t\treturn 'Insufficient balance of ' + balance + ' Entry Credits.';\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tpoll,\r\n\t\t\teligibleVoters,\r\n\t\t\tupdateCreatePollResult,\r\n\t\t\thandleBack,\r\n\t\t\thandleNext,\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t\tvoteController: { submitVote },\r\n\t\t\tledgerController: { signMessageRaw },\r\n\t\t} = this.props;\r\n\r\n\t\tconst commitStartBlock = _get(poll, commitStartPath);\r\n\r\n\t\tconst currentBlockHeight = this.props.factomCliController.blockHeight;\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tidentityChainID: '',\r\n\t\t\t\t\tidentityKey: '',\r\n\t\t\t\t\tecPrivateKey: '',\r\n\t\t\t\t\tcommitStartBlock: commitStartBlock,\r\n\t\t\t\t\ttransactionError: null,\r\n\t\t\t\t\tsignatureType: null,\r\n\t\t\t\t\tledgerStatus: null,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tactions.setFieldValue(transactionErrorPath, null);\r\n\r\n\t\t\t\t\tconst signatureType = _get(values, signatureTypePath);\r\n\r\n\t\t\t\t\tconst voteData = {\r\n\t\t\t\t\t\tdefinition: poll.pollJSON,\r\n\t\t\t\t\t\tregistrationChainId: networkProps.voteRegistrationChainID,\r\n\t\t\t\t\t\teligibleVoters,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (signatureType === MANUAL_SIG) {\r\n\t\t\t\t\t\t\tvoteData.identity = {\r\n\t\t\t\t\t\t\t\tchainId: _get(values, identityChainIDPath),\r\n\t\t\t\t\t\t\t\tkey: _get(values, identityKeyPath),\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else if (signatureType === LEDGER_SIG) {\r\n\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\tledgerStatusPath,\r\n\t\t\t\t\t\t\t\t'Connecting to Ledger Nano S'\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst ledgerConnected = await this.props.ledgerController.isLedgerConnected();\r\n\r\n\t\t\t\t\t\t\tif (ledgerConnected) {\r\n\t\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t\tledgerStatusPath,\r\n\t\t\t\t\t\t\t\t\t'Waiting for user to confirm signature two times on Ledger Nano S device.'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\t\t\t'Ledger Nano S Not Found. Please connect your Ledger Nano S and try again.'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst ledgerIdentity_o = await this.props.ledgerController.getLedgerIdentityAddress(\r\n\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tvoteData.identity = {\r\n\t\t\t\t\t\t\t\tchainId: ledgerIdentity_o.chainid,\r\n\t\t\t\t\t\t\t\tkey: ledgerIdentity_o.address,\r\n\t\t\t\t\t\t\t\tsign: signMessageRaw,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst result = await submitVote(\r\n\t\t\t\t\t\t\tvoteData,\r\n\t\t\t\t\t\t\t_get(values, ecPrivateKeyPath)\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconsole.log(result);\r\n\r\n\t\t\t\t\t\t// update result data\r\n\t\t\t\t\t\tupdateCreatePollResult(result);\r\n\r\n\t\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\t\thandleNext();\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tactions.resetForm();\r\n\t\t\t\t\t\tactions.setFieldValue(transactionErrorPath, 'Error: ' + e.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[signatureTypePath]: Yup.string(),\r\n\t\t\t\t\t[identityChainIDPath]: Yup.string().when(signatureTypePath, {\r\n\t\t\t\t\t\tis: MANUAL_SIG,\r\n\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t.matches(REGEX_CHAIN_ID, {\r\n\t\t\t\t\t\t\t\tmessage: 'Invalid Chain ID',\r\n\t\t\t\t\t\t\t\texcludeEmptyString: true,\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t[identityKeyPath]: Yup.string().when(signatureTypePath, {\r\n\t\t\t\t\t\tis: MANUAL_SIG,\r\n\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\t\tidentityKeyPath,\r\n\t\t\t\t\t\t\t\t'Invalid Identity Key',\r\n\t\t\t\t\t\t\t\tapp.isValidSecretIdentityKey\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t[commitStartBlockPath]: Yup.number().moreThan(\r\n\t\t\t\t\t\tcurrentBlockHeight + 2,\r\n\t\t\t\t\t\t'Commit Start Block must be at least 3 blocks greater than the Current Height. Please go back and update the Commit Start Block to continue.'\r\n\t\t\t\t\t),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\tsubmitCount,\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tlet title = 'Sign Transaction';\r\n\t\t\t\t\tif (_get(values, signatureTypePath) === LEDGER_SIG) {\r\n\t\t\t\t\t\ttitle += ' with Ledger Nano S';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t{_get(errors, signatureTypePath) && submitCount > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t<SectionHeader\r\n\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\ttext={title + ' *'}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<SectionHeader disableGutterBottom text={title} />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{_isNil(_get(values, signatureTypePath)) && (\r\n\t\t\t\t\t\t\t\t\t<Grid xs={12} item>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(transactionErrorPath, null);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(signatureTypePath, MANUAL_SIG);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Create\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: 17 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitleAccess={'Manual Entry'}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;Manual Entry\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(transactionErrorPath, null);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(signatureTypePath, LEDGER_SIG);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t<SVGLogo\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.ledgerLogo}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={LedgerLogo}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"Ledger Logo\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Ledger Nano S\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{_get(values, signatureTypePath) === MANUAL_SIG && (\r\n\t\t\t\t\t\t\t\t\t<Grid xs={12} item container>\r\n\t\t\t\t\t\t\t\t\t\t<Grid xs={9} item>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={identityChainIDPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Initiator Identity Chain ID *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, identityChainIDPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, identityChainIDPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid xs={3} item />\r\n\t\t\t\t\t\t\t\t\t\t<Grid xs={9} item>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={identityKeyPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Initiator Identity Private Key *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, identityKeyPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, identityKeyPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid xs={3} item />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{_get(values, signatureTypePath) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t\t\t\t\t\t<Grid xs={9} item>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={ecPrivateKeyPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"EC Private Key *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, ecPrivateKeyPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, ecPrivateKeyPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalidate={this.validateEcPrivateKey}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid xs={3} item>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.voteCreationCost && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{'Cost: ' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.voteCreationCost +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' Entry Credits'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={commitStartBlockPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography className={classes.errorText}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{msg}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, transactionErrorPath)) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.errorText}>\r\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, transactionErrorPath)}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.stepperButtons}>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<Button onClick={handleBack}>Back</Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{_get(values, signatureTypePath) === LEDGER_SIG\r\n\t\t\t\t\t\t\t\t\t\t\t? 'Sign and Submit'\r\n\t\t\t\t\t\t\t\t\t\t\t: 'Submit'}\r\n\t\t\t\t\t\t\t\t\t\t{isSubmitting && (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={5} size={20} />\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t{isSubmitting && _get(values, ledgerStatusPath) && (\r\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.ledgerStatus}>\r\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, ledgerStatusPath)}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nSubmitVoteForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tstepperButtons: {\r\n\t\tmarginLeft: '-15px',\r\n\t},\r\n\terrorText: { color: 'red', fontSize: '16px' },\r\n\tledgerStatus: { display: 'inline-block', paddingLeft: '10px' },\r\n\tledgerLogo: { height: 16 },\r\n});\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithFactomCli,\r\n\twithVote,\r\n\twithLedger,\r\n\twithStyles(styles)\r\n);\r\n\r\nexport default enhancer(SubmitVoteForm);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SubmitVoteForm from './SubmitVoteForm';\r\nimport VoteSummary from '../shared/VoteSummary';\r\n\r\nfunction PreviewVote(props) {\r\n\tconst { classes } = props;\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.pad}>\r\n\t\t\t<VoteSummary poll={props.poll} eligibleVoters={props.eligibleVoters} />\r\n\t\t\t<Grid item xs={12} className={classes.submitVoteForm}>\r\n\t\t\t\t<SubmitVoteForm\r\n\t\t\t\t\tpoll={props.poll}\r\n\t\t\t\t\teligibleVoters={props.eligibleVoters}\r\n\t\t\t\t\tupdateCreatePollResult={props.updateCreatePollResult}\r\n\t\t\t\t\thandleNext={props.handleNext}\r\n\t\t\t\t\thandleBack={props.handleBack}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nPreviewVote.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: 15,\r\n\t},\r\n\tsubmitVoteForm: {\r\n\t\tmarginTop: '25px',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(PreviewVote);\r\n","import React from 'react';\r\nimport { Formik, Form, FieldArray, Field } from 'formik';\r\nimport _isNil from 'lodash/isNil';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _get from 'lodash/get';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport LabelImportant from '@material-ui/icons/LabelImportant';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport SectionHeader from '../vote/shared/SectionHeader';\r\nimport FormTextField from '../component/form/FormTextField';\r\nimport FormSelectField from '../component/form/FormSelectField';\r\nimport { withLedger } from '../context/LedgerContext';\r\nimport { withIdentity } from '../context/IdentityContext';\r\nimport { withVote } from '../context/VoteContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { isValidPrivateEcAddress } from 'factom/dist/factom';\r\nimport ExplorerLink from '../vote/shared/ExplorerLink';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst transactionErrorPath = 'transactionError';\r\nconst workingNamePath = 'workingName';\r\nconst numberPath = 'number';\r\nconst identityNamesPath = 'identityNames';\r\nconst ecPrivateKeyPath = 'ecPrivateKey';\r\nconst statusPath = 'status';\r\n\r\nconst identityChainIdPath = 'identityChainId';\r\nconst entryHashPath = 'entryHash';\r\n\r\nconst MAX_NUMBER = 10;\r\nlet NUMBER_VALUES = new Array(MAX_NUMBER);\r\nfor (var i = 0; i < MAX_NUMBER; i++) {\r\n\tNUMBER_VALUES[i] = { value: i + 1, text: i + 1 + '' };\r\n}\r\n\r\nclass CreateLedgerIdForm extends React.Component {\r\n\thandleKeyPress(event) {\r\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tvalidateIdentityName = (value) => {\r\n\t\tlet error;\r\n\r\n\t\tif (this.hasItem(value, this.identityNames)) {\r\n\t\t\terror = 'Duplicate';\r\n\t\t}\r\n\r\n\t\treturn error;\r\n\t};\r\n\r\n\tvalidateEcPrivateKey = async (value) => {\r\n\t\tif (!isValidPrivateEcAddress(value)) {\r\n\t\t\treturn 'Invalid Key';\r\n\t\t}\r\n\t};\r\n\r\n\thasItem = (item, array) => array.findIndex((value) => value === item) !== -1;\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tledgerController: { getLedgerAddresses },\r\n\t\t\tidentityController: { registerIdentity },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tconst entryHashURL = networkProps.explorerURL + '/entry?hash=';\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tworkingName: '',\r\n\t\t\t\t\tidentityNames: [],\r\n\t\t\t\t\tnumber: '',\r\n\t\t\t\t\tecPrivateKey: '',\r\n\t\t\t\t\ttransactionError: null,\r\n\t\t\t\t\tstatus: null,\r\n\t\t\t\t\tidentityChainId: null,\r\n\t\t\t\t\tentryHash: null,\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\tnumber: Yup.string().required('Required'),\r\n\t\t\t\t\tidentityNames: Yup.array().required('Required *'),\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tactions.setFieldValue(transactionErrorPath, null);\r\n\r\n\t\t\t\t\tactions.setFieldValue(statusPath, 'Connecting to Ledger Nano S');\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t// setup identity data\r\n\t\t\t\t\t\tlet idPubKeys = await getLedgerAddresses(\r\n\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t_get(values, numberPath),\r\n\t\t\t\t\t\t\t'identity'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tidPubKeys = idPubKeys.map((value) => value.address);\r\n\r\n\t\t\t\t\t\tlet reg_id_args = {\r\n\t\t\t\t\t\t\tidPubKeys,\r\n\t\t\t\t\t\t\tidNames: _get(values, identityNamesPath),\r\n\t\t\t\t\t\t\tecPrivateKey: _get(values, ecPrivateKeyPath),\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\tstatusPath,\r\n\t\t\t\t\t\t\t'Registering new identity to Factom blockchain'\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t// create identity and get back hash\r\n\t\t\t\t\t\tconst result = await registerIdentity(reg_id_args);\r\n\r\n\t\t\t\t\t\t// success\r\n\t\t\t\t\t\tconst chainId = result.chainId;\r\n\t\t\t\t\t\tconst entryHash = result.entryHash;\r\n\t\t\t\t\t\tactions.setFieldValue(identityChainIdPath, chainId);\r\n\t\t\t\t\t\tactions.setFieldValue(entryHashPath, entryHash);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tawait actions.resetForm();\r\n\t\t\t\t\t\tawait actions.setFieldValue(\r\n\t\t\t\t\t\t\tidentityNamesPath,\r\n\t\t\t\t\t\t\t_get(values, identityNamesPath)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tawait actions.setFieldValue(numberPath, _get(values, numberPath));\r\n\t\t\t\t\t\tawait actions.setFieldValue(\r\n\t\t\t\t\t\t\tecPrivateKeyPath,\r\n\t\t\t\t\t\t\t_get(values, ecPrivateKeyPath)\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tactions.setFieldValue(transactionErrorPath, 'Error: ' + e.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\tsubmitCount,\r\n\t\t\t\t\thandleReset,\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tthis.identityNames = _get(values, identityNamesPath);\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<SectionHeader text=\"1. Select Identity Names\" />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t{submitCount > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\tname={identityNamesPath}\r\n\t\t\t\t\t\t\t\t\t\t\trender={({ form }) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst error = _get(form.errors, identityNamesPath);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn error ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{error}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : null;\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Paper elevation={2} className={classes.paper}>\r\n\t\t\t\t\t\t\t\t\t\t<List className={classes.identityNameList} dense>\r\n\t\t\t\t\t\t\t\t\t\t\t<FieldArray\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={identityNamesPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingNamePath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate={this.validateIdentityName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Identity Name *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingNamePath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingNamePath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.which === 13 /* Enter */ &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value.trim() &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_isNil(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.validateIdentityName(e.target.value)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.push(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingNamePath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingNamePath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_isNil(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.validateIdentityName(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingNamePath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.push(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingNamePath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingNamePath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!_get(values, workingNamePath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, identityNamesPath).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? _get(values, identityNamesPath).map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableGutters\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdivider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.identityNameListItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LabelImportant\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={option} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.remove(index);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Clear\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Clear />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<SectionHeader text=\"2. Select number of Ledger keys to activate\" />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FormSelectField\r\n\t\t\t\t\t\t\t\t\t\tname={numberPath}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Number of keys *\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t_get(errors, numberPath) && _get(touched, numberPath)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\twidth={215}\r\n\t\t\t\t\t\t\t\t\t\toptions={NUMBER_VALUES}\r\n\t\t\t\t\t\t\t\t\t\tminWidth=\"200px\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<SectionHeader text=\"3. Enter payment information\" />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\tname={ecPrivateKeyPath}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"EC Private Key *\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t_get(errors, ecPrivateKeyPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t_get(touched, ecPrivateKeyPath)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\tvalidate={this.validateEcPrivateKey}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, transactionErrorPath)) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.errorText}>\r\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, transactionErrorPath)}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, identityChainIdPath)) ? (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\r\n\t\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Success!\" color=\"green\" />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\tYour new Factom identity is pending confirmation. The\r\n\t\t\t\t\t\t\t\t\t\t\t\tentry will be visible in 10-15 minutes, after being\r\n\t\t\t\t\t\t\t\t\t\t\t\tincluded in the next block currently being processed by\r\n\t\t\t\t\t\t\t\t\t\t\t\tthe Factom blockchain.\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tRemember to copy down your Identity Chain ID.\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<ExplorerLink\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Identity Chain ID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={_get(values, identityChainIdPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\thref={entryHashURL + _get(values, entryHashPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\textend={true}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReset}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tCreate Identity\r\n\t\t\t\t\t\t\t\t\t\t\t{isSubmitting && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={5} size={20} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t{isSubmitting && _get(values, statusPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography className={classes.status}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, statusPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nCreateLedgerIdForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '16px' },\r\n\tstatus: { display: 'inline-block', paddingLeft: '10px' },\r\n\tidentityNameList: {\r\n\t\toverflow: 'auto',\r\n\t},\r\n\tidentityNameListItem: {\r\n\t\tpadding: '0px',\r\n\t\twordWrap: 'break-word',\r\n\t},\r\n\tpaper: { padding: 15, width: '50%' },\r\n\ttransaction: {\r\n\t\tborderColor: '#6fbf73',\r\n\t\tborderStyle: 'solid',\r\n\t\tpadding: '10px',\r\n\t},\r\n\tsuccessIcon: {\r\n\t\tposition: 'relative',\r\n\t\ttop: '5px',\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithVote,\r\n\twithIdentity,\r\n\twithLedger,\r\n\twithStyles(styles)\r\n);\r\n\r\nexport default enhancer(CreateLedgerIdForm);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withNetwork } from '../../context/NetworkContext';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport SectionHeader from '../shared/SectionHeader';\r\nimport ExplorerLink from '../shared/ExplorerLink';\r\n\r\nfunction FinalStep(props) {\r\n\tconst {\r\n\t\tclasses,\r\n\t\tcreatePollResult,\r\n\t\tnetworkController: { networkProps },\r\n\t} = props;\r\n\r\n\tconst entryHashURL = networkProps.explorerURL + '/entry?hash=';\r\n\r\n\treturn (\r\n\t\t<Grid className={classes.pad} container>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<SectionHeader text=\"Setup Complete!\" color=\"green\" />\r\n\r\n\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\tYour poll is pending confirmation. The entries will be visible in\r\n\t\t\t\t\t10-15 minutes, after being included in the next block currently being\r\n\t\t\t\t\tprocessed by the Factom blockchain.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<ExplorerLink\r\n\t\t\t\t\tlabel=\"Eligible Voters\"\r\n\t\t\t\t\tvalue={createPollResult.eligibleVoters.entryHash}\r\n\t\t\t\t\thref={entryHashURL + createPollResult.eligibleVoters.entryHash}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<ExplorerLink\r\n\t\t\t\t\tlabel=\"Vote Configuration\"\r\n\t\t\t\t\tvalue={createPollResult.vote.entryHash}\r\n\t\t\t\t\thref={entryHashURL + createPollResult.vote.entryHash}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<ExplorerLink\r\n\t\t\t\t\tlabel=\"Vote Registration\"\r\n\t\t\t\t\tvalue={createPollResult.registration.entryHash}\r\n\t\t\t\t\thref={entryHashURL + createPollResult.registration.entryHash}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: '15px',\r\n\t},\r\n});\r\n\r\nFinalStep.propTypes = {\r\n\tclasses: PropTypes.object,\r\n};\r\n\r\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\r\n\r\nexport default enhancer(FinalStep);\r\n","import React from 'react';\r\n\r\nexport default class VoteConfiguration extends React.Component {\r\n\tstate = {\r\n\t\tpollForm: {\r\n\t\t\tpollJSON: {\r\n\t\t\t\tproposal: {\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\ttext: '',\r\n\t\t\t\t\texternalRef: {\r\n\t\t\t\t\t\thref: '',\r\n\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\tvalue: '',\r\n\t\t\t\t\t\t\talgo: '',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tvote: {\r\n\t\t\t\t\tphasesBlockHeights: {\r\n\t\t\t\t\t\tcommitStart: '',\r\n\t\t\t\t\t\tcommitEnd: '',\r\n\t\t\t\t\t\trevealEnd: '',\r\n\t\t\t\t\t},\r\n\t\t\t\t\teligibleVotersChainId: null,\r\n\t\t\t\t\ttype: '',\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\toptions: [],\r\n\t\t\t\t\t\tallowAbstention: '',\r\n\t\t\t\t\t\tcomputeResultsAgainst: '',\r\n\t\t\t\t\t\tminOptions: '',\r\n\t\t\t\t\t\tmaxOptions: '',\r\n\t\t\t\t\t\twinnerCriteria: {},\r\n\t\t\t\t\t\tacceptanceCriteria: {},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tformFields: {\r\n\t\t\t\tcommitStartDate: '',\r\n\t\t\t\tcommitEndDate: '',\r\n\t\t\t\trevealEndDate: '',\r\n\t\t\t\tvoteTypeText: '',\r\n\t\t\t\tquestionSource: 'text',\r\n\t\t\t\tworkingText: '',\r\n\t\t\t\tworkingHref: '',\r\n\t\t\t\tworkingHashValue: '',\r\n\t\t\t\tworkingHashAlgo: '',\r\n\t\t\t\tworkingOption: '',\r\n\t\t\t\tcheckedTurnout: false,\r\n\t\t\t\tenableMinSupportConfig: true,\r\n\t\t\t\tworkingWeightMinTurnout: '',\r\n\t\t\t\tworkingUnweightMinTurnout: '',\r\n\t\t\t\tworkingWeightMinSupport: '',\r\n\t\t\t\tworkingUnweightMinSupport: '',\r\n\t\t\t\tworkingMinSupportOption: '',\r\n\t\t\t},\r\n\t\t},\r\n\t\teligibleVotersForm: {\r\n\t\t\teligibleVoters: [],\r\n\t\t\tformFields: {\r\n\t\t\t\tselectedList: 'custom',\r\n\t\t\t\tworkingIdentityChainId: '',\r\n\t\t\t\tworkingWeight: '',\r\n\t\t\t\tworkingEligibleChainId: '',\r\n\t\t\t\tloadingVoters: false,\r\n\t\t\t\tloadErrorMessage: '',\r\n\t\t\t\tloadSuccessMessage: '',\r\n\t\t\t\tworkingFileName: '',\r\n\t\t\t\tworkingFile: '',\r\n\t\t\t},\r\n\t\t},\r\n\t\tcreatePollResult: {},\r\n\t};\r\n\r\n\tupdatePoll = (form) => {\r\n\t\tthis.setState({ pollForm: form });\r\n\t};\r\n\r\n\tupdateParticipants = (form) => {\r\n\t\tthis.setState({ eligibleVotersForm: form });\r\n\t};\r\n\r\n\tupdateCreatePollResult = (result) => {\r\n\t\tthis.setState({ createPollResult: result });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn this.props.children({\r\n\t\t\t...this.state,\r\n\t\t\tupdatePoll: this.updatePoll,\r\n\t\t\tupdateParticipants: this.updateParticipants,\r\n\t\t\tupdateCreatePollResult: this.updateCreatePollResult,\r\n\t\t});\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Field, FastField, ErrorMessage } from 'formik';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst FormSelectField = ({\r\n\tclasses,\r\n\tdisabled = false,\r\n\terror = false,\r\n\tisNotFast,\r\n\tlabel,\r\n\tname,\r\n\tonChange,\r\n\toptions,\r\n\tminWidth,\r\n\tvalidate,\r\n}) => {\r\n\tconst FieldType = isNotFast ? Field : FastField;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<FieldType name={name} {...(validate ? { validate } : {})}>\r\n\t\t\t\t{({ field }) => (\r\n\t\t\t\t\t<FormControl {...{ disabled, error }}>\r\n\t\t\t\t\t\t<InputLabel htmlFor={name}>{label}</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t{...(onChange ? { onChange } : {})}\r\n\t\t\t\t\t\t\tstyle={{ minWidth }}\r\n\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\tid: name,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{options.map((value, index) => (\r\n\t\t\t\t\t\t\t\t<MenuItem key={index} value={value.value}>\r\n\t\t\t\t\t\t\t\t\t{value.text}\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t{/* <FormHelperText /> */}\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t)}\r\n\t\t\t</FieldType>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname={name}\r\n\t\t\t\trender={(msg) => <div className={classes.errorText}>{msg}</div>}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '13px' },\r\n});\r\n\r\nexport default withStyles(styles)(FormSelectField);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport _get from 'lodash/get';\r\nimport _omit from 'lodash/omit';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isNil from 'lodash/isNil';\r\nimport _isFinite from 'lodash/isFinite';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Field, Form, FieldArray } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport LabelImportant from '@material-ui/icons/LabelImportant';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport Button from '@material-ui/core/Button';\r\nimport SectionHeader from '../shared/SectionHeader';\r\nimport FormTextField from '../../component/form/FormTextField';\r\nimport FormSelectField from '../../component/form/FormSelectField';\r\nimport { withNetwork } from '../../context/NetworkContext';\r\nimport { withFactomCli } from '../../context/FactomCliContext';\r\nimport * as moment from 'moment';\r\n\r\nimport {\r\n\tBINARY_CONFIG,\r\n\tSINGLE_OPTION_CONFIG,\r\n\tAPPROVAL_CONFIG,\r\n\tINSTANT_RUNOFF_CONFIG,\r\n\tALL_ELIGIBLE_VOTERS,\r\n\tPARTICIPANTS_ONLY,\r\n\tHASH_ALGO_VALUES,\r\n} from './VOTE_CONSTANTS';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst VOTE_TYPE_VALUES = [\r\n\t{ value: BINARY_CONFIG.name, text: BINARY_CONFIG.name },\r\n\t{ value: SINGLE_OPTION_CONFIG.name, text: SINGLE_OPTION_CONFIG.name },\r\n\t{ value: APPROVAL_CONFIG.name, text: APPROVAL_CONFIG.name },\r\n\t{ value: INSTANT_RUNOFF_CONFIG.name, text: INSTANT_RUNOFF_CONFIG.name },\r\n];\r\n\r\nconst COMPUTE_AGAINST_VALUES = [\r\n\t{ value: ALL_ELIGIBLE_VOTERS.value, text: ALL_ELIGIBLE_VOTERS.text },\r\n\t{ value: PARTICIPANTS_ONLY.value, text: PARTICIPANTS_ONLY.text },\r\n];\r\n\r\nconst ABSTENTION_VALUES = [\r\n\t{ value: true, text: 'True' },\r\n\t{ value: false, text: 'False' },\r\n];\r\n\r\nconst TITLE_MAX_LENGTH = 32;\r\nconst QUESTION_MAX_LENGTH = 250;\r\n\r\n// poll config fields\r\nconst titlePath = 'pollJSON.proposal.title';\r\nconst commitStartPath = 'pollJSON.vote.phasesBlockHeights.commitStart';\r\nconst commitEndPath = 'pollJSON.vote.phasesBlockHeights.commitEnd';\r\nconst revealEndPath = 'pollJSON.vote.phasesBlockHeights.revealEnd';\r\nconst proposalPath = 'pollJSON.proposal';\r\nconst externalRefPath = 'pollJSON.proposal.externalRef';\r\nconst textPath = 'pollJSON.proposal.text';\r\nconst voteTypePath = 'pollJSON.vote.type';\r\nconst minOptionsPath = 'pollJSON.vote.config.minOptions';\r\nconst maxOptionsPath = 'pollJSON.vote.config.maxOptions';\r\nconst configPath = 'pollJSON.vote.config';\r\nconst optionsPath = 'pollJSON.vote.config.options';\r\nconst abstentionPath = 'pollJSON.vote.config.allowAbstention';\r\nconst computeResultsAgainstPath = 'pollJSON.vote.config.computeResultsAgainst';\r\nconst acceptanceCriteriaPath = 'pollJSON.vote.config.acceptanceCriteria';\r\nconst winnerCriteriaPath = 'pollJSON.vote.config.winnerCriteria';\r\nconst minSupportPath = 'pollJSON.vote.config.winnerCriteria.minSupport';\r\n\r\n// form specific fields\r\nconst commitStartDatePath = 'formFields.commitStartDate';\r\nconst commitEndDatePath = 'formFields.commitEndDate';\r\nconst revealEndDatePath = 'formFields.revealEndDate';\r\nconst voteTypeTextPath = 'formFields.voteTypeText';\r\nconst questionSourcePath = 'formFields.questionSource';\r\nconst workingOptionPath = 'formFields.workingOption';\r\nconst workingHrefPath = 'formFields.workingHref';\r\nconst workingHashValuePath = 'formFields.workingHashValue';\r\nconst workingHashAlgoPath = 'formFields.workingHashAlgo';\r\nconst workingTextPath = 'formFields.workingText';\r\nconst checkedTurnoutPath = 'formFields.checkedTurnout';\r\nconst workingWeightMinTurnoutPath = 'formFields.workingWeightMinTurnout';\r\nconst workingUnweightMinTurnoutPath = 'formFields.workingUnweightMinTurnout';\r\nconst requiredSupportPath = 'formFields.requiredSupport';\r\nconst workingWeightMinSupportPath = 'formFields.workingWeightMinSupport';\r\nconst workingUnweightMinSupportPath = 'formFields.workingUnweightMinSupport';\r\nconst workingMinSupportOptionPath = 'formFields.workingMinSupportOption';\r\nconst enableMinSupportConfigPath = 'formFields.enableMinSupportConfig';\r\n\r\nclass CreateVoteForm extends React.Component {\r\n\tasync componentDidMount() {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\thandleKeyPress(event) {\r\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tvalidateWriteHeight = (currentHeight, writeHeight) => {\r\n\t\tlet validate = true;\r\n\r\n\t\tif (isNaN(writeHeight)) {\r\n\t\t\tvalidate = false;\r\n\t\t}\r\n\r\n\t\tif (writeHeight < currentHeight) {\r\n\t\t\tvalidate = false;\r\n\t\t}\r\n\r\n\t\treturn validate;\r\n\t};\r\n\r\n\tvalidateWorkingOption = (value, optionList) => {\r\n\t\tlet error;\r\n\r\n\t\tif (this.hasOption(value, optionList)) {\r\n\t\t\treturn 'Duplicate';\r\n\t\t}\r\n\r\n\t\treturn error;\r\n\t};\r\n\r\n\tvalidateComputeResultsAgainst = (value) => {\r\n\t\tif (this.enableMinSupportConfig && !value) {\r\n\t\t\treturn 'Required';\r\n\t\t}\r\n\t};\r\n\r\n\thasOption = (option, optionList) =>\r\n\t\toptionList.findIndex((value) => value === option) !== -1;\r\n\r\n\thandleTime = (value, path) => {\r\n\t\tthis.setFieldValue(path, this.calculateWriteHeight(value));\r\n\t};\r\n\r\n\thandleBlock = (value, path) => {\r\n\t\tif (\r\n\t\t\tthis.validateWriteHeight(\r\n\t\t\t\tthis.props.factomCliController.blockHeight,\r\n\t\t\t\tvalue\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tthis.setFieldValue(path, this.calculateWriteTimeValue(value));\r\n\t\t} else {\r\n\t\t\tthis.setFieldValue(path, '');\r\n\t\t}\r\n\t};\r\n\r\n\tremoveOption = (\r\n\t\toption,\r\n\t\tindex,\r\n\t\tworkingMinSupportOption,\r\n\t\tarrayHelpers,\r\n\t\toptionsLength,\r\n\t\tminOptions,\r\n\t\tmaxOptions,\r\n\t\tvoteTypeText\r\n\t) => {\r\n\t\tarrayHelpers.remove(index);\r\n\t\tif (workingMinSupportOption === option) {\r\n\t\t\tthis.setFieldValue(workingMinSupportOptionPath, '');\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tvoteTypeText !== BINARY_CONFIG.name &&\r\n\t\t\tvoteTypeText !== SINGLE_OPTION_CONFIG.name\r\n\t\t) {\r\n\t\t\t// reset min/max options if needed\r\n\t\t\tif (minOptions > optionsLength) {\r\n\t\t\t\tthis.setFieldValue(minOptionsPath, '');\r\n\t\t\t}\r\n\t\t\tif (maxOptions > optionsLength) {\r\n\t\t\t\tthis.setFieldValue(maxOptionsPath, '');\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tgetMinimumOptions = (optionsList) => {\r\n\t\tlet minOptionsList = [];\r\n\r\n\t\tfor (let ii = 1; ii <= optionsList.length; ii++) {\r\n\t\t\tminOptionsList.push({ value: ii, text: ii });\r\n\t\t}\r\n\r\n\t\treturn minOptionsList;\r\n\t};\r\n\r\n\tgetMaximumOptions = (optionsList, minOptionLength = 1) => {\r\n\t\tlet maxOptionsList = [];\r\n\r\n\t\tfor (let ii = minOptionLength; ii <= optionsList.length; ii++) {\r\n\t\t\tmaxOptionsList.push({ value: ii, text: ii });\r\n\t\t}\r\n\r\n\t\treturn maxOptionsList;\r\n\t};\r\n\r\n\tcalculateWriteTimeValue = (writeHeight) => {\r\n\t\tlet result = '';\r\n\t\ttry {\r\n\t\t\tconst eventTimestamp = this.props.factomCliController.getEstimatedBlockTimestamp(\r\n\t\t\t\twriteHeight\r\n\t\t\t);\r\n\t\t\tconst eventDate = moment(eventTimestamp).utc();\r\n\r\n\t\t\t// //format for date field\r\n\t\t\tresult = eventDate.toISOString().replace('Z', '');\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tcalculateWriteHeight = (dateTime) => {\r\n\t\tconst currentBlock = this.props.factomCliController.blockHeight;\r\n\r\n\t\tconst currentDate = moment\r\n\t\t\t.unix(this.props.factomCliController.blockTimestamp)\r\n\t\t\t.utc();\r\n\r\n\t\tconst writeDate = moment(dateTime.concat('Z')).utc();\r\n\r\n\t\tconst diffMins = writeDate.diff(currentDate, 'minutes');\r\n\r\n\t\tconst diffBlocks = Math.floor(diffMins / 10);\r\n\r\n\t\tconst result = currentBlock + diffBlocks;\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tsupportsMinSupportCriteria = (voteType) => {\r\n\t\tlet result = true;\r\n\r\n\t\tif (voteType === INSTANT_RUNOFF_CONFIG.type) {\r\n\t\t\tresult = false;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tsupportsWeightedMinTurnoutCriteria = (voteType) => {\r\n\t\tlet result = true;\r\n\r\n\t\tif (voteType === INSTANT_RUNOFF_CONFIG.type) {\r\n\t\t\tresult = false;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tpollForm,\r\n\t\t\tupdatePoll,\r\n\t\t\tclasses,\r\n\t\t\tfactomCliController: { blockHeight },\r\n\t\t} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={pollForm}\r\n\t\t\t\tvalidateOnChange={false}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\tpollJSON: Yup.object().shape({\r\n\t\t\t\t\t\tproposal: Yup.object().shape({\r\n\t\t\t\t\t\t\ttitle: Yup.string().required('Required'),\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tvote: Yup.object().shape({\r\n\t\t\t\t\t\t\tphasesBlockHeights: Yup.object().shape({\r\n\t\t\t\t\t\t\t\tcommitStart: Yup.number()\r\n\t\t\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\r\n\t\t\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t\t\t.moreThan(\r\n\t\t\t\t\t\t\t\t\t\tblockHeight + 2,\r\n\t\t\t\t\t\t\t\t\t\t'Must be at least 3 blocks greater than Current Height'\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\tcommitEnd: Yup.number()\r\n\t\t\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\r\n\t\t\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t\t\t.moreThan(\r\n\t\t\t\t\t\t\t\t\t\tYup.ref('commitStart'),\r\n\t\t\t\t\t\t\t\t\t\t'Must be greater than Commit Start Block'\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\trevealEnd: Yup.number()\r\n\t\t\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\r\n\t\t\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t\t\t.moreThan(\r\n\t\t\t\t\t\t\t\t\t\tYup.ref('commitEnd'),\r\n\t\t\t\t\t\t\t\t\t\t'Must be greater than Commit End Block'\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tconfig: Yup.object().shape({\r\n\t\t\t\t\t\t\t\toptions: Yup.array()\r\n\t\t\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t\t\t.min(2, '* Select at least two options'),\r\n\t\t\t\t\t\t\t\tminOptions: Yup.number()\r\n\t\t\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\r\n\t\t\t\t\t\t\t\t\t.required('Required'),\r\n\t\t\t\t\t\t\t\tmaxOptions: Yup.number()\r\n\t\t\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\r\n\t\t\t\t\t\t\t\t\t.required('Required'),\r\n\t\t\t\t\t\t\t\tallowAbstention: Yup.string().required('Required'),\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tformFields: Yup.object().shape({\r\n\t\t\t\t\t\tenableMinSupportConfig: Yup.boolean(),\r\n\t\t\t\t\t\tworkingWeightMinSupport: Yup.number()\r\n\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\r\n\t\t\t\t\t\t\t.max(1, 'Too high')\r\n\t\t\t\t\t\t\t.min(0, 'Too low'),\r\n\t\t\t\t\t\tworkingUnweightMinSupport: Yup.number()\r\n\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\r\n\t\t\t\t\t\t\t.max(1, 'Too high')\r\n\t\t\t\t\t\t\t.min(0, 'Too low'),\r\n\t\t\t\t\t\trequiredSupport: Yup.mixed().test(\r\n\t\t\t\t\t\t\t'support-test',\r\n\t\t\t\t\t\t\t'* Select weighted and/or unweighted ratio',\r\n\t\t\t\t\t\t\tfunction(value) {\r\n\t\t\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\t\t\tworkingWeightMinSupport,\r\n\t\t\t\t\t\t\t\t\tworkingUnweightMinSupport,\r\n\t\t\t\t\t\t\t\t\tenableMinSupportConfig,\r\n\t\t\t\t\t\t\t\t} = this.parent;\r\n\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tenableMinSupportConfig &&\r\n\t\t\t\t\t\t\t\t\t!_isFinite(workingWeightMinSupport) &&\r\n\t\t\t\t\t\t\t\t\t!_isFinite(workingUnweightMinSupport)\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tvoteTypeText: Yup.string().required('Required'),\r\n\t\t\t\t\t\tquestionSource: Yup.string(),\r\n\t\t\t\t\t\tworkingText: Yup.string().when('questionSource', {\r\n\t\t\t\t\t\t\tis: 'text',\r\n\t\t\t\t\t\t\tthen: Yup.string().required('Required'),\r\n\t\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tworkingHref: Yup.string().when('questionSource', {\r\n\t\t\t\t\t\t\tis: 'href',\r\n\t\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t\t.url('Must be a valid URL'),\r\n\t\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tworkingHashValue: Yup.string().when('questionSource', {\r\n\t\t\t\t\t\t\tis: 'href',\r\n\t\t\t\t\t\t\tthen: Yup.string().required('Required'),\r\n\t\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tworkingHashAlgo: Yup.string().when('questionSource', {\r\n\t\t\t\t\t\t\tis: 'href',\r\n\t\t\t\t\t\t\tthen: Yup.string().required('Required'),\r\n\t\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tworkingMinSupportOption: Yup.string().when('voteTypeText', {\r\n\t\t\t\t\t\t\tis: BINARY_CONFIG.name,\r\n\t\t\t\t\t\t\tthen: Yup.string().required('Required'),\r\n\t\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tworkingWeightMinTurnout: Yup.number()\r\n\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\r\n\t\t\t\t\t\t\t.max(1, 'Too high')\r\n\t\t\t\t\t\t\t.min(0, 'Too low'),\r\n\t\t\t\t\t\tworkingUnweightMinTurnout: Yup.number()\r\n\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\r\n\t\t\t\t\t\t\t.max(1, 'Too high')\r\n\t\t\t\t\t\t\t.min(0, 'Too low'),\r\n\t\t\t\t\t\tcheckedTurnout: Yup.boolean().test(\r\n\t\t\t\t\t\t\t'turnout-test',\r\n\t\t\t\t\t\t\t'* Select a Minimum Turnout ratio',\r\n\t\t\t\t\t\t\tfunction(value) {\r\n\t\t\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\t\t\tworkingWeightMinTurnout,\r\n\t\t\t\t\t\t\t\t\tworkingUnweightMinTurnout,\r\n\t\t\t\t\t\t\t\t} = this.parent;\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tvalue &&\r\n\t\t\t\t\t\t\t\t\t!_isFinite(workingWeightMinTurnout) &&\r\n\t\t\t\t\t\t\t\t\t!_isFinite(workingUnweightMinTurnout)\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}),\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Handle text vs externalRef\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (_get(values, questionSourcePath) === 'text') {\r\n\t\t\t\t\t\t// delete href\r\n\t\t\t\t\t\tvalues = _omit(values, externalRefPath);\r\n\r\n\t\t\t\t\t\t// add text config\r\n\t\t\t\t\t\t_get(values, proposalPath).text = _get(values, workingTextPath);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// delete text\r\n\t\t\t\t\t\tvalues = _omit(values, textPath);\r\n\r\n\t\t\t\t\t\t// add externalRef config\r\n\t\t\t\t\t\t_get(values, proposalPath).externalRef = {\r\n\t\t\t\t\t\t\thref: _get(values, workingHrefPath),\r\n\t\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\t\tvalue: _get(values, workingHashValuePath),\r\n\t\t\t\t\t\t\t\talgo: _get(values, workingHashAlgoPath),\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Handle Acceptance Criteria\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (_get(values, checkedTurnoutPath)) {\r\n\t\t\t\t\t\t// reset acceptance criteria\r\n\t\t\t\t\t\t_get(values, configPath).acceptanceCriteria = { minTurnout: {} };\r\n\r\n\t\t\t\t\t\t// handle weighted turnout\r\n\t\t\t\t\t\tif (_isFinite(_get(values, workingWeightMinTurnoutPath))) {\r\n\t\t\t\t\t\t\t_get(values, acceptanceCriteriaPath).minTurnout.weighted = _get(\r\n\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\tworkingWeightMinTurnoutPath\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// handle unweighted turnout\r\n\t\t\t\t\t\tif (_isFinite(_get(values, workingUnweightMinTurnoutPath))) {\r\n\t\t\t\t\t\t\t_get(values, acceptanceCriteriaPath).minTurnout.unweighted = _get(\r\n\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\tworkingUnweightMinTurnoutPath\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// no acceptance criteria\r\n\t\t\t\t\t\tvalues = _omit(values, acceptanceCriteriaPath);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Handle Winner Criteria\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (_get(values, enableMinSupportConfigPath)) {\r\n\t\t\t\t\t\t// reset winner Criteria\r\n\t\t\t\t\t\t_get(values, configPath).winnerCriteria = { minSupport: {} };\r\n\r\n\t\t\t\t\t\tlet winnerCriteriaOption;\r\n\t\t\t\t\t\tif (_get(values, voteTypeTextPath) === BINARY_CONFIG.name) {\r\n\t\t\t\t\t\t\t// add criteria for specific option\r\n\t\t\t\t\t\t\twinnerCriteriaOption = _get(values, workingMinSupportOptionPath);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\twinnerCriteriaOption = '*';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_get(values, minSupportPath)[winnerCriteriaOption] = {};\r\n\r\n\t\t\t\t\t\t// handle weighted support\r\n\t\t\t\t\t\tif (_isFinite(_get(values, workingWeightMinSupportPath))) {\r\n\t\t\t\t\t\t\t_get(values, winnerCriteriaPath).minSupport[\r\n\t\t\t\t\t\t\t\twinnerCriteriaOption\r\n\t\t\t\t\t\t\t].weighted = _get(values, workingWeightMinSupportPath);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// handle unweighted support\r\n\t\t\t\t\t\tif (_isFinite(_get(values, workingUnweightMinSupportPath))) {\r\n\t\t\t\t\t\t\t_get(values, winnerCriteriaPath).minSupport[\r\n\t\t\t\t\t\t\t\twinnerCriteriaOption\r\n\t\t\t\t\t\t\t].unweighted = _get(values, workingUnweightMinSupportPath);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// no winner criteria\r\n\t\t\t\t\t\tvalues = _omit(values, winnerCriteriaPath);\r\n\t\t\t\t\t\tvalues = _omit(values, computeResultsAgainstPath);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// update Poll\r\n\t\t\t\t\tupdatePoll(values);\r\n\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\trender={({\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t\tsubmitCount,\r\n\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\tsetFieldError,\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tthis.setFieldValue = setFieldValue;\r\n\r\n\t\t\t\t\tthis.enableMinSupportConfig = _get(\r\n\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\tenableMinSupportConfigPath\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\r\n\t\t\t\t\t\t\t<Grid container className={classes.pad}>\r\n\t\t\t\t\t\t\t\t<Grid container item spacing={16} xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<SectionHeader\r\n\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom={true}\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Configure Poll\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid container item xs={5}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={titlePath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Title *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, titlePath) && _get(touched, titlePath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\tspellCheck\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength={TITLE_MAX_LENGTH}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={voteTypeTextPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Vote Type *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\toptions={VOTE_TYPE_VALUES}\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, voteTypeTextPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, voteTypeTextPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tminWidth={215}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t//update question type\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t//update dependent fields\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst newValue = e.target.value;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingMinSupportOptionPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet voteType;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (newValue === BINARY_CONFIG.name) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteType = BINARY_CONFIG.type;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(voteTypePath, voteType);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminOptionsPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBINARY_CONFIG.numOptions\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxOptionsPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBINARY_CONFIG.numOptions\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// abstention not allowed\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(abstentionPath, false);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// max two options allowed\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (_get(values, optionsPath).length > 2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(optionsPath, []);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (newValue === SINGLE_OPTION_CONFIG.name) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteType = SINGLE_OPTION_CONFIG.type;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(voteTypePath, voteType);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminOptionsPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSINGLE_OPTION_CONFIG.numOptions\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxOptionsPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSINGLE_OPTION_CONFIG.numOptions\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (newValue === APPROVAL_CONFIG.name) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteType = APPROVAL_CONFIG.type;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(voteTypePath, voteType);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(minOptionsPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(maxOptionsPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (newValue === INSTANT_RUNOFF_CONFIG.name) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteType = INSTANT_RUNOFF_CONFIG.type;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(voteTypePath, voteType);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(minOptionsPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(maxOptionsPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingWeightMinTurnoutPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// reset minSupport form fields\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (!this.supportsMinSupportCriteria(voteType)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(enableMinSupportConfigPath, false);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// remove compute results against\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(computeResultsAgainstPath, '');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// remove weight/unweight min support form values\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingWeightMinSupportPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingUnweightMinSupportPath, '');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// remove min support option form value\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingMinSupportOptionPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(enableMinSupportConfigPath, true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={abstentionPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Allow Abstention *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\toptions={ABSTENTION_VALUES}\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, abstentionPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, abstentionPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, voteTypePath) === BINARY_CONFIG.type\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tminWidth={215}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, enableMinSupportConfigPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={computeResultsAgainstPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate={this.validateComputeResultsAgainst}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Compute Results Against *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={COMPUTE_AGAINST_VALUES}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, computeResultsAgainstPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, computeResultsAgainstPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth={215}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t\t<Grid container item xs={7}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.blockFields}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={commitStartPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Commit Start Block *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, commitStartPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, commitStartPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleBlock(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommitStartDatePath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={commitStartDatePath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Estimated Date (UTC)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tshrink={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth={220}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleTime(e.target.value, commitStartPath);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched(commitStartPath, true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.blockFields}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={commitEndPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Commit End Block *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, commitEndPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, commitEndPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleBlock(e.target.value, commitEndDatePath);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={commitEndDatePath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Estimated Date (UTC)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tshrink={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth={220}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleTime(e.target.value, commitEndPath);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched(commitEndPath, true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.blockFields}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={revealEndPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Reveal End Block *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, revealEndPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, revealEndPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleBlock(e.target.value, revealEndDatePath);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={revealEndDatePath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Estimated Date (UTC)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tshrink={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth={220}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleTime(e.target.value, revealEndPath);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched(revealEndPath, true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ height: '48px' }} />\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<SectionHeader disableGutterBottom={true} text=\"Question\" />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={questionSourcePath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={_get(values, questionSourcePath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.target.value === 'text') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingHrefPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingHashValuePath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingHashAlgoPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingTextPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Plain Text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.raiseRadio}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"href\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"External Proposal\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t\t{_get(values, questionSourcePath) === 'text' && (\r\n\t\t\t\t\t\t\t\t\t\t<Grid item container xs={9}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={workingTextPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Question *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingTextPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingTextPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\t\t\t\tspellCheck\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength={QUESTION_MAX_LENGTH}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{_get(values, questionSourcePath) === 'href' && (\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={9} container>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingHrefPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"URL Link *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingHrefPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingHrefPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingHashAlgoPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Hash Algorithm *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={HASH_ALGO_VALUES}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingHashAlgoPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingHashAlgoPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth={182}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingHashValuePath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Hash Value *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingHashValuePath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingHashValuePath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid container spacing={8} item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<SectionHeader disableGutterBottom={true} text=\"Answers\" />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t{submitCount > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={optionsPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\trender={({ form }) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst error = _get(form.errors, optionsPath);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn error ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{error}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : null;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Paper elevation={2} className={classes.pad}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={24}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<List className={classes.optionList} dense>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FieldArray\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={optionsPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingOptionPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate={(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.validateWorkingOption(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth=\"250px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Option *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath).length ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t2 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, voteTypePath) ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBINARY_CONFIG.type\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingOptionPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingOptionPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.which === 13 /* Enter */ &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value.trim() &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_isNil(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.validateWorkingOption(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.push(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingOptionPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingOptionPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_isNil(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.validateWorkingOption(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingOptionPath),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.push(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingOptionPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingOptionPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!_get(values, workingOptionPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, optionsPath).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? _get(values, optionsPath).map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableGutters\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdivider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.optionListItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LabelImportant\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={option} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.removeOption(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toption,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingMinSupportOptionPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.length - 1,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminOptionsPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxOptionsPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteTypeTextPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Clear\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Clear />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/**\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t * Minimum Options\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t * Maximum Options\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(_get(values, voteTypeTextPath) ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAPPROVAL_CONFIG.name ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, voteTypeTextPath) ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tINSTANT_RUNOFF_CONFIG.name) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={8} item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={minOptionsPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Minimum Options Allowed *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, minOptionsPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, minOptionsPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={215}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={this.getMinimumOptions(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth=\"240px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={maxOptionsPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Maximum Options Allowed *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, maxOptionsPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, maxOptionsPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={215}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={this.getMaximumOptions(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, minOptionsPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth=\"240px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item container xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Winner Criteria\" />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t{_get(values, enableMinSupportConfigPath) ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>Minimum Support *</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{submitCount > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, requiredSupportPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(errors, requiredSupportPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingWeightMinSupportPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Weighted Ratio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep=\"any\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingWeightMinSupportPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingWeightMinSupportPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={138}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingUnweightMinSupportPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Unweighted Ratio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep=\"any\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingUnweightMinSupportPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingUnweightMinSupportPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={138}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, voteTypePath) !== '' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// vote type is selected\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, voteTypeTextPath) ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tBINARY_CONFIG.name ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// binary vote selected\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!_isEmpty(_get(values, optionsPath)) ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// options exist\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingMinSupportOptionPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Applies to option *\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={_get(values, optionsPath).map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn { value, text: value };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingMinSupportOptionPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingMinSupportOptionPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth={215}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo Options Found\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tApplies to all options\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSelect a Vote Type\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>Not Applicable</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<SectionHeader\r\n\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom={true}\r\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Acceptance Criteria\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={checkedTurnoutPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkedTurnoutPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={field.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst newValue = !_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcheckedTurnoutPath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(checkedTurnoutPath, newValue);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!newValue) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset turnout acceptance criteria\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingWeightMinTurnoutPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingUnweightMinTurnoutPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldError(checkedTurnoutPath, null);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldError(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingWeightMinTurnoutPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldError(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingUnweightMinTurnoutPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Minimum Turnout' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(_get(values, checkedTurnoutPath) ? ' *' : '')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{submitCount > 0 && _get(errors, checkedTurnoutPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(errors, checkedTurnoutPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.supportsWeightedMinTurnoutCriteria(\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(values, voteTypePath)\r\n\t\t\t\t\t\t\t\t\t\t\t) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingWeightMinTurnoutPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={'Weighted Ratio'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!_get(values, checkedTurnoutPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstep=\"any\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingWeightMinTurnoutPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingWeightMinTurnoutPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth={138}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={workingUnweightMinTurnoutPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={'Unweighted Ratio'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!_get(values, checkedTurnoutPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstep=\"any\"\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingUnweightMinTurnoutPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingUnweightMinTurnoutPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth={138}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: !_get(values, checkedTurnoutPath) ? 'gray' : '',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\txs={4}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\tApplies to all eligible voters.\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.stepperButtons}>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t{isSubmitting && errors && window.scrollTo(0, 0)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\nCreateVoteForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: 15,\r\n\t},\r\n\traiseRadio: {\r\n\t\tposition: 'relative',\r\n\t\ttop: '-16px',\r\n\t},\r\n\toptionList: {\r\n\t\toverflow: 'auto',\r\n\t},\r\n\toptionListItem: {\r\n\t\tpadding: '0px',\r\n\t\twordWrap: 'break-word',\r\n\t},\r\n\tstepperButtons: {\r\n\t\tmarginLeft: '-15px',\r\n\t},\r\n\terrorText: {\r\n\t\tcolor: 'red',\r\n\t\tfontSize: '16px',\r\n\t\tborderColor: 'red',\r\n\t\tborderStyle: 'solid',\r\n\t\tpadding: 8,\r\n\t\twidth: 200,\r\n\t},\r\n\tblockFields: {\r\n\t\tmarginLeft: '22px',\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withFactomCli, withStyles(styles));\r\nexport default enhancer(CreateVoteForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EligibleVotersForm from './EligibleVotersForm.js';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PreviewVote from './PreviewVote.js';\r\nimport FinalStep from './FinalStep.js';\r\nimport VoteConfiguration from './VoteConfiguration';\r\nimport CreateVoteForm from './CreateVoteForm';\r\n\r\nclass CreateVoteStepper extends React.Component {\r\n\tstate = {\r\n\t\tactiveStep: 0,\r\n\t};\r\n\r\n\thandleNext = () => {\r\n\t\tconst { activeStep } = this.state;\r\n\t\tthis.setState({\r\n\t\t\tactiveStep: activeStep + 1,\r\n\t\t});\r\n\t};\r\n\r\n\thandleBack = () => {\r\n\t\tconst { activeStep } = this.state;\r\n\t\tthis.setState({\r\n\t\t\tactiveStep: activeStep - 1,\r\n\t\t});\r\n\t};\r\n\r\n\tgetStepContent(stepIndex, createVoteSnapshot) {\r\n\t\tswitch (stepIndex) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<EligibleVotersForm\r\n\t\t\t\t\t\thandleNext={this.handleNext}\r\n\t\t\t\t\t\thandleBack={this.handleBack}\r\n\t\t\t\t\t\teligibleVotersForm={createVoteSnapshot.eligibleVotersForm}\r\n\t\t\t\t\t\tupdateParticipants={createVoteSnapshot.updateParticipants}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase 1:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<CreateVoteForm\r\n\t\t\t\t\t\thandleNext={this.handleNext}\r\n\t\t\t\t\t\thandleBack={this.handleBack}\r\n\t\t\t\t\t\tupdatePoll={createVoteSnapshot.updatePoll}\r\n\t\t\t\t\t\tpollForm={createVoteSnapshot.pollForm}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase 2:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<PreviewVote\r\n\t\t\t\t\t\thandleNext={this.handleNext}\r\n\t\t\t\t\t\thandleBack={this.handleBack}\r\n\t\t\t\t\t\tpoll={createVoteSnapshot.pollForm}\r\n\t\t\t\t\t\teligibleVoters={\r\n\t\t\t\t\t\t\tcreateVoteSnapshot.eligibleVotersForm.eligibleVoters\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdateCreatePollResult={createVoteSnapshot.updateCreatePollResult}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\treturn 'Content D';\r\n\t\t}\r\n\t}\r\n\r\n\tgetSteps() {\r\n\t\treturn ['Select Voters', 'Configure Poll', 'Preview & Sign'];\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst steps = this.getSteps();\r\n\t\tconst { activeStep } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<VoteConfiguration>\r\n\t\t\t\t{(createVoteSnapshot) => (\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={2} />\r\n\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t<Paper className={classes.pad}>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"h4\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ opacity: '.6' }}\r\n\t\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCreate Poll\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Stepper activeStep={activeStep}>\r\n\t\t\t\t\t\t\t\t\t{steps.map((label) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<Step key={label}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t</Step>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</Stepper>\r\n\t\t\t\t\t\t\t\t{this.state.activeStep === steps.length ? (\r\n\t\t\t\t\t\t\t\t\t<FinalStep\r\n\t\t\t\t\t\t\t\t\t\tcreatePollResult={createVoteSnapshot.createPollResult}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.getStepContent(activeStep, createVoteSnapshot)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={2} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t</VoteConfiguration>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nCreateVoteStepper.propTypes = {\r\n\tclasses: PropTypes.object,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: '15px',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(CreateVoteStepper);\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport _isNil from 'lodash/isNil';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _get from 'lodash/get';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport SectionHeader from '../vote/shared/SectionHeader';\r\nimport FormTextField from '../component/form/FormTextField';\r\nimport { withLedger } from '../context/LedgerContext';\r\nimport { withVote } from '../context/VoteContext';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { REGEX_CHAIN_ID } from '../vote/create/VOTE_CONSTANTS';\r\nimport CheckCircle from '@material-ui/icons/CheckCircleOutlined';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst transactionErrorPath = 'transactionError';\r\nconst ledgerStatusPath = 'ledgerStatus';\r\nconst chainIdPath = 'chainId';\r\nconst resultPath = 'result';\r\n\r\nclass SetLedgerIdForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tledgerController: { storeChainId },\r\n\t\t} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\ttransactionError: null,\r\n\t\t\t\t\tledgerStatus: null,\r\n\t\t\t\t\tchainId: '',\r\n\t\t\t\t\tresult: null,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tactions.setFieldValue(transactionErrorPath, null);\r\n\r\n\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\tledgerStatusPath,\r\n\t\t\t\t\t\t'Attempting to store identity... check Ledger Nano S display'\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait storeChainId(_get(values, chainIdPath));\r\n\r\n\t\t\t\t\t\tactions.setFieldValue(ledgerStatusPath, null);\r\n\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\tresultPath,\r\n\t\t\t\t\t\t\t'The Identity Chain ID has been successfully saved to the Ledger device.'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tawait actions.resetForm();\r\n\t\t\t\t\t\tawait actions.setFieldValue(chainIdPath, _get(values, chainIdPath));\r\n\t\t\t\t\t\tactions.setFieldValue(transactionErrorPath, 'Error: ' + e.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[chainIdPath]: Yup.string()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.matches(REGEX_CHAIN_ID, {\r\n\t\t\t\t\t\t\tmessage: 'Invalid Chain ID',\r\n\t\t\t\t\t\t\texcludeEmptyString: true,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched, values, handleReset }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<SectionHeader\r\n\t\t\t\t\t\t\t\t\t\ttext=\"Set Factom Identity Chain on Ledger Nano S\"\r\n\t\t\t\t\t\t\t\t\t\tdisableGutterBottom\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Identity Chain ID\"\r\n\t\t\t\t\t\t\t\t\t\tname={chainIdPath}\r\n\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t_get(errors, chainIdPath) && _get(touched, chainIdPath)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, transactionErrorPath)) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.errorText}>\r\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, transactionErrorPath)}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, resultPath)) ? (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\r\n\t\t\t\t\t\t\t\t\t\t\t<CheckCircle\r\n\t\t\t\t\t\t\t\t\t\t\t\tnativeColor=\"#6fbf73\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.successIcon}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, resultPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReset}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Identity\r\n\t\t\t\t\t\t\t\t\t\t\t{isSubmitting && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={5} size={20} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t{isSubmitting && _get(values, ledgerStatusPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography className={classes.ledgerStatus}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, ledgerStatusPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nSetLedgerIdForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '16px' },\r\n\tledgerStatus: { display: 'inline-block', paddingLeft: '10px' },\r\n\ttransaction: {\r\n\t\tborderColor: '#6fbf73',\r\n\t\tborderStyle: 'solid',\r\n\t\tpaddingTop: 3,\r\n\t\tpaddingBottom: 8,\r\n\t},\r\n\tsuccessIcon: {\r\n\t\tposition: 'relative',\r\n\t\ttop: '5px',\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(withVote, withLedger, withStyles(styles));\r\n\r\nexport default enhancer(SetLedgerIdForm);\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport CreateLedgerIdForm from './CreateLedgerIdForm';\r\nimport SetLedgerIdForm from './SetLedgerIdForm';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass LedgerIdentityManager extends React.Component {\r\n\tstate = {\r\n\t\ttabValue: 0,\r\n\t};\r\n\r\n\thandleChange = (event, tabValue) => {\r\n\t\tthis.setState({ tabValue });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t<Paper elevation={3} className={classes.paper}>\r\n\t\t\t\t\t\t<Grid item container xs={12} justify=\"center\">\r\n\t\t\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\r\n\t\t\t\t\t\t\t\tLedger Identity Manager\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Paper elevation={3} className={classes.paper}>\r\n\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\tvalue={this.state.tabValue}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\t\t\t\ttextColor=\"primary\"\r\n\t\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tab label=\"Create Identity\" />\r\n\t\t\t\t\t\t\t\t<Tab label=\"Set Identity\" />\r\n\t\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t{this.state.tabValue === 0 && <CreateLedgerIdForm />}\r\n\t\t\t\t\t\t\t{this.state.tabValue === 1 && <SetLedgerIdForm />}\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nLedgerIdentityManager.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({ paper: { minWidth: 565, padding: 16 } });\r\n\r\nexport default withStyles(styles)(LedgerIdentityManager);\r\n","import { HashRouter as Router, Route } from 'react-router-dom';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport React, { Component } from 'react';\r\nimport { withWalletContext } from './context/WalletContext';\r\nimport WalletManager from './walletManager/WalletManager';\r\nimport AddInitialWallet from './addWallet/AddInitialWallet';\r\nimport VoteListing from './vote/listing/VoteListing';\r\nimport VoteTabContent from './vote/view/VoteTabContent';\r\nimport CreateVoteStepper from './vote/create/CreateVoteStepper';\r\nimport LedgerIdentityManager from './ledgerIdentity/LedgerIdentityManager';\r\n// import ManageVoterList from './vote/voterList/ManageVoterList.js';\r\n\r\nclass AppRouter extends Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\twalletController: {\r\n\t\t\t\treadyToManageWallet,\r\n\t\t\t\tisWalletEmpty,\r\n\t\t\t\tsetReadyToManageWallet,\r\n\t\t\t},\r\n\t\t} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/\"\r\n\t\t\t\t\t\trender={() =>\r\n\t\t\t\t\t\t\treadyToManageWallet && !isWalletEmpty() ? (\r\n\t\t\t\t\t\t\t\t<WalletManager />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<AddInitialWallet\r\n\t\t\t\t\t\t\t\t\tsetReadyToManageWallet={setReadyToManageWallet}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Route exact path=\"/vote\" component={VoteListing} />\r\n\t\t\t\t\t<Route exact path=\"/viewVote\" component={VoteTabContent} />\r\n\t\t\t\t\t<Route exact path=\"/createVote\" component={CreateVoteStepper} />\r\n\t\t\t\t\t<Route exact path=\"/ledgerId\" component={LedgerIdentityManager} />\r\n\t\t\t\t\t{/* <Route exact path=\"/manageVoters\" component={ManageVoterList} /> */}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst enhancer = _flowRight(withWalletContext);\r\n\r\nexport default enhancer(AppRouter);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Header from './header/Header';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withRootTheme from './withRootTheme';\r\nimport WalletController from './context/WalletController';\r\nimport SeedController from './context/SeedController';\r\nimport FactomCliController from './context/FactomCliController';\r\nimport NetworkController from './context/NetworkController';\r\nimport LedgerController from './context/LedgerController';\r\nimport VoteController from './context/VoteController';\r\nimport IdentityController from './context/IdentityController';\r\nimport Disclaimer from './Disclaimer';\r\nimport TestnetWarningBar from './TestnetWarningBar';\r\nimport AppRouter from './AppRouter';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<NetworkController>\r\n\t\t\t\t\t\t<FactomCliController>\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Disclaimer />\r\n\t\t\t\t\t\t\t\t<WalletController>\r\n\t\t\t\t\t\t\t\t\t<VoteController>\r\n\t\t\t\t\t\t\t\t\t\t<Header />\r\n\t\t\t\t\t\t\t\t\t\t<SeedController>\r\n\t\t\t\t\t\t\t\t\t\t\t<IdentityController>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<LedgerController>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.body}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AppRouter />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TestnetWarningBar />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</LedgerController>\r\n\t\t\t\t\t\t\t\t\t\t\t</IdentityController>\r\n\t\t\t\t\t\t\t\t\t\t</SeedController>\r\n\t\t\t\t\t\t\t\t\t</VoteController>\r\n\t\t\t\t\t\t\t\t</WalletController>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t</FactomCliController>\r\n\t\t\t\t\t</NetworkController>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\nApp.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tbody: {\r\n\t\twidth: '1200px',\r\n\t\tmargin: '0 auto',\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(withRootTheme, withStyles(styles));\r\n\r\nexport default enhancer(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { unregister } from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nunregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/ledgerLogo.273726a5.svg\";","import React from 'react';\r\n\r\nconst NetworkContext = React.createContext();\r\n\r\nconst withNetwork = (BaseComponent) => (props) => (\r\n\t<NetworkContext.Consumer>\r\n\t\t{(networkController) => (\r\n\t\t\t<BaseComponent {...props} networkController={networkController} />\r\n\t\t)}\r\n\t</NetworkContext.Consumer>\r\n);\r\n\r\nexport { NetworkContext, withNetwork };\r\n","import React from 'react';\r\n\r\nconst WalletContext = React.createContext();\r\n\r\nconst withWalletContext = (BaseComponent) => (props) => (\r\n\t<WalletContext.Consumer>\r\n\t\t{(walletController) => (\r\n\t\t\t<BaseComponent {...props} walletController={walletController} />\r\n\t\t)}\r\n\t</WalletContext.Consumer>\r\n);\r\n\r\nexport { WalletContext, withWalletContext };\r\n","module.exports = __webpack_public_path__ + \"static/media/headerLogo.e79a5c9c.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport { LedgerContext } from './LedgerContext';\r\nimport TransportU2F from '@ledgerhq/hw-transport-u2f';\r\nimport Fct from '@factoid.org/hw-app-fct';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { Transaction } from 'factom/dist/factom';\r\n/**\r\n * Constants\r\n */\r\nconst BIP_32_COIN_TYPES = { fct: 131, ec: 132, identity: 281 };\r\n\r\nclass LedgerController extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tisLedgerConnected: this.isLedgerConnected,\r\n\t\t\tgetLedgerAddresses: this.getLedgerAddresses,\r\n\t\t\tgetLedgerIdentityAddress: this.getLedgerIdentityAddress,\r\n\t\t\tsignTransaction: this.signTransaction,\r\n\t\t\tsignMessageRaw: this.signMessageRaw,\r\n\t\t\tcheckAddress: this.checkAddress,\r\n\t\t\tstoreChainId: this.storeChainId,\r\n\t\t};\r\n\t}\r\n\r\n\tgetLedgerAddresses = async (startIndex, amount, type) => {\r\n\t\tconst result = [];\r\n\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\t\tconst coinType = BIP_32_COIN_TYPES[type];\r\n\r\n\t\tconst transport = await TransportU2F.create();\r\n\t\tconst ledger = new Fct(transport);\r\n\r\n\t\tfor (let index = startIndex; index < startIndex + amount; index++) {\r\n\t\t\tconst path = \"44'/\" + coinType + \"'/\" + bip32Account + \"'/0/\" + index;\r\n\t\t\tconst address_o = await ledger.getAddress(path);\r\n\r\n\t\t\tresult.push({ address: address_o.address });\r\n\t\t}\r\n\r\n\t\ttransport.close();\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tgetLedgerIdentityAddress = async (index) => {\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\t\tconst coinType = BIP_32_COIN_TYPES['identity'];\r\n\r\n\t\tconst transport = await TransportU2F.create();\r\n\t\tconst ledger = new Fct(transport);\r\n\r\n\t\tconst path = \"44'/\" + coinType + \"'/\" + bip32Account + \"'/0/\" + index;\r\n\t\tconst address_o = await ledger.getAddress(path);\r\n\r\n\t\ttransport.close();\r\n\r\n\t\treturn address_o;\r\n\t};\r\n\r\n\tsignTransaction = async ({ fromAddr, toAddr, amount, index }) => {\r\n\t\tlet signedTX = {};\r\n\t\tlet transport = await TransportU2F.create();\r\n\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\t\tconst path = \"44'/131'/\" + bip32Account + \"'/0/\" + index;\r\n\r\n\t\tconst ledger = new Fct(transport);\r\n\r\n\t\tconst unsignedTX = Transaction.builder()\r\n\t\t\t.input(\r\n\t\t\t\tfromAddr,\r\n\t\t\t\tamount + (await this.props.walletController.getFactoshiFee())\r\n\t\t\t)\r\n\t\t\t.output(toAddr, amount)\r\n\t\t\t.build();\r\n\r\n\t\tconst result = await ledger.signTransaction(\r\n\t\t\tpath,\r\n\t\t\tunsignedTX.marshalBinarySig.toString('hex')\r\n\t\t);\r\n\r\n\t\tif (result) {\r\n\t\t\tsignedTX = Transaction.builder(unsignedTX)\r\n\t\t\t\t.rcdSignature(\r\n\t\t\t\t\tBuffer.from(result['r'], 'hex'),\r\n\t\t\t\t\tBuffer.from(result['s'], 'hex')\r\n\t\t\t\t)\r\n\t\t\t\t.build();\r\n\t\t}\r\n\t\ttransport.close();\r\n\t\treturn signedTX;\r\n\t};\r\n\r\n\tsignMessageRaw = async (message) => {\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\t\tconst index = 0;\r\n\t\tconst path =\r\n\t\t\t\"44'/\" +\r\n\t\t\tBIP_32_COIN_TYPES['identity'] +\r\n\t\t\t\"'/\" +\r\n\t\t\tbip32Account +\r\n\t\t\t\"'/0/\" +\r\n\t\t\tindex;\r\n\r\n\t\tlet transport = await TransportU2F.create();\r\n\r\n\t\ttry {\r\n\t\t\tconst ledger = new Fct(transport);\r\n\r\n\t\t\tconst result = await ledger.signMessageRaw(path, message);\r\n\r\n\t\t\treturn result.s;\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Failed to sign raw transaction from Ledger :', err);\r\n\t\t\tthrow err;\r\n\t\t} finally {\r\n\t\t\ttransport.close();\r\n\t\t}\r\n\t};\r\n\r\n\tcheckAddress = async (activeFctWallet, type) => {\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\t\tconst coinType = BIP_32_COIN_TYPES[type];\r\n\r\n\t\tconst path =\r\n\t\t\t\"44'/\" + coinType + \"'/\" + bip32Account + \"'/0/\" + activeFctWallet.index;\r\n\r\n\t\ttry {\r\n\t\t\tvar transport = await TransportU2F.create();\r\n\r\n\t\t\tconst ledger = new Fct(transport);\r\n\r\n\t\t\tawait ledger.getAddress(path, true);\r\n\r\n\t\t\ttransport.close();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Failed getFctAddr from Ledger Nano S :', err);\r\n\t\t}\r\n\t};\r\n\r\n\tisLedgerConnected = async () => {\r\n\t\tlet result = false;\r\n\t\ttry {\r\n\t\t\tlet transport = await TransportU2F.create();\r\n\t\t\tconst ledger = new Fct(transport);\r\n\t\t\tawait ledger.getAppConfiguration();\r\n\r\n\t\t\tresult = true;\r\n\r\n\t\t\ttransport.close();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('Transport Err:' + err);\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\tstoreChainId = async (chainId) => {\r\n\t\tlet transport = await TransportU2F.create();\r\n\r\n\t\ttry {\r\n\t\t\tconst fct = new Fct(transport);\r\n\r\n\t\t\tawait fct.storeChainId(chainId);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Failed to store chain ID to Ledger:', err);\r\n\t\t\tthrow err;\r\n\t\t} finally {\r\n\t\t\ttransport.close();\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<LedgerContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</LedgerContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nLedgerController.propTypes = {\r\n\tchildren: PropTypes.element.isRequired,\r\n};\r\n\r\nconst enhancer = _flowRight(withWalletContext, withNetwork);\r\n\r\nexport default enhancer(LedgerController);\r\n","module.exports = __webpack_public_path__ + \"static/media/factomProtocolLogo.167d4936.svg\";","import React from 'react';\r\n\r\nconst LedgerContext = React.createContext();\r\n\r\nconst withLedger = (BaseComponent) => (props) => (\r\n\t<LedgerContext.Consumer>\r\n\t\t{(ledgerController) => (\r\n\t\t\t<BaseComponent {...props} ledgerController={ledgerController} />\r\n\t\t)}\r\n\t</LedgerContext.Consumer>\r\n);\r\n\r\nexport { LedgerContext, withLedger };\r\n"],"sourceRoot":""}